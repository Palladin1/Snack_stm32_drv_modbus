   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"portevent.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.bss.eQueuedEvent,"aw",%nobits
  21              	eQueuedEvent:
  22 0000 00       		.space	1
  23              		.section	.bss.xEventInQueue,"aw",%nobits
  26              	xEventInQueue:
  27 0000 00       		.space	1
  28              		.section	.text.xMBPortEventInit,"ax",%progbits
  29              		.align	2
  30              		.global	xMBPortEventInit
  31              		.thumb
  32              		.thumb_func
  34              	xMBPortEventInit:
  35              	.LFB29:
  36              		.file 1 "../FreeModbus/stm32/portevent.c"
   1:../FreeModbus/stm32/portevent.c **** /*
   2:../FreeModbus/stm32/portevent.c ****  * FreeModbus Libary: BARE Port
   3:../FreeModbus/stm32/portevent.c ****  * Copyright (C) 2006 Christian Walter <wolti@sil.at>
   4:../FreeModbus/stm32/portevent.c ****  *
   5:../FreeModbus/stm32/portevent.c ****  * This library is free software; you can redistribute it and/or
   6:../FreeModbus/stm32/portevent.c ****  * modify it under the terms of the GNU Lesser General Public
   7:../FreeModbus/stm32/portevent.c ****  * License as published by the Free Software Foundation; either
   8:../FreeModbus/stm32/portevent.c ****  * version 2.1 of the License, or (at your option) any later version.
   9:../FreeModbus/stm32/portevent.c ****  *
  10:../FreeModbus/stm32/portevent.c ****  * This library is distributed in the hope that it will be useful,
  11:../FreeModbus/stm32/portevent.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../FreeModbus/stm32/portevent.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:../FreeModbus/stm32/portevent.c ****  * Lesser General Public License for more details.
  14:../FreeModbus/stm32/portevent.c ****  *
  15:../FreeModbus/stm32/portevent.c ****  * You should have received a copy of the GNU Lesser General Public
  16:../FreeModbus/stm32/portevent.c ****  * License along with this library; if not, write to the Free Software
  17:../FreeModbus/stm32/portevent.c ****  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:../FreeModbus/stm32/portevent.c ****  *
  19:../FreeModbus/stm32/portevent.c ****  * File: $Id: portevent.c,v 1.1 2006/08/22 21:35:13 wolti Exp $
  20:../FreeModbus/stm32/portevent.c ****  */
  21:../FreeModbus/stm32/portevent.c **** 
  22:../FreeModbus/stm32/portevent.c **** /* ----------------------- Modbus includes ----------------------------------*/
  23:../FreeModbus/stm32/portevent.c **** #include "mb.h"
  24:../FreeModbus/stm32/portevent.c **** #include "mbport.h"
  25:../FreeModbus/stm32/portevent.c **** 
  26:../FreeModbus/stm32/portevent.c **** /* ----------------------- Variables ----------------------------------------*/
  27:../FreeModbus/stm32/portevent.c **** static eMBEventType eQueuedEvent;
  28:../FreeModbus/stm32/portevent.c **** static BOOL     xEventInQueue;
  29:../FreeModbus/stm32/portevent.c **** 
  30:../FreeModbus/stm32/portevent.c **** /* ----------------------- Start implementation -----------------------------*/
  31:../FreeModbus/stm32/portevent.c **** BOOL
  32:../FreeModbus/stm32/portevent.c **** xMBPortEventInit( void )
  33:../FreeModbus/stm32/portevent.c **** {
  37              		.loc 1 33 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41              		@ link register save eliminated.
  42 0000 80B4     		push	{r7}
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 7, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  34:../FreeModbus/stm32/portevent.c ****     xEventInQueue = FALSE;
  47              		.loc 1 34 0
  48 0004 40F20003 		movw	r3, #:lower16:xEventInQueue
  49 0008 C0F20003 		movt	r3, #:upper16:xEventInQueue
  50 000c 0022     		movs	r2, #0
  51 000e 1A70     		strb	r2, [r3]
  35:../FreeModbus/stm32/portevent.c ****     return TRUE;
  52              		.loc 1 35 0
  53 0010 0123     		movs	r3, #1
  36:../FreeModbus/stm32/portevent.c **** }
  54              		.loc 1 36 0
  55 0012 1846     		mov	r0, r3
  56 0014 BD46     		mov	sp, r7
  57              		@ sp needed
  58 0016 5DF8047B 		ldr	r7, [sp], #4
  59 001a 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE29:
  63              		.section	.text.xMBPortEventPost,"ax",%progbits
  64              		.align	2
  65              		.global	xMBPortEventPost
  66              		.thumb
  67              		.thumb_func
  69              	xMBPortEventPost:
  70              	.LFB30:
  37:../FreeModbus/stm32/portevent.c **** 
  38:../FreeModbus/stm32/portevent.c **** BOOL
  39:../FreeModbus/stm32/portevent.c **** xMBPortEventPost( eMBEventType eEvent )
  40:../FreeModbus/stm32/portevent.c **** {
  71              		.loc 1 40 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 8
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76 0000 80B4     		push	{r7}
  77              		.cfi_def_cfa_offset 4
  78              		.cfi_offset 7, -4
  79 0002 83B0     		sub	sp, sp, #12
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 FB71     		strb	r3, [r7, #7]
  41:../FreeModbus/stm32/portevent.c ****     xEventInQueue = TRUE;
  85              		.loc 1 41 0
  86 000a 40F20003 		movw	r3, #:lower16:xEventInQueue
  87 000e C0F20003 		movt	r3, #:upper16:xEventInQueue
  88 0012 0122     		movs	r2, #1
  89 0014 1A70     		strb	r2, [r3]
  42:../FreeModbus/stm32/portevent.c ****     eQueuedEvent = eEvent;
  90              		.loc 1 42 0
  91 0016 40F20003 		movw	r3, #:lower16:eQueuedEvent
  92 001a C0F20003 		movt	r3, #:upper16:eQueuedEvent
  93 001e FA79     		ldrb	r2, [r7, #7]
  94 0020 1A70     		strb	r2, [r3]
  43:../FreeModbus/stm32/portevent.c ****     return TRUE;
  95              		.loc 1 43 0
  96 0022 0123     		movs	r3, #1
  44:../FreeModbus/stm32/portevent.c **** }
  97              		.loc 1 44 0
  98 0024 1846     		mov	r0, r3
  99 0026 0C37     		adds	r7, r7, #12
 100 0028 BD46     		mov	sp, r7
 101              		@ sp needed
 102 002a 5DF8047B 		ldr	r7, [sp], #4
 103 002e 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE30:
 107              		.section	.text.xMBPortEventGet,"ax",%progbits
 108              		.align	2
 109              		.global	xMBPortEventGet
 110              		.thumb
 111              		.thumb_func
 113              	xMBPortEventGet:
 114              	.LFB31:
  45:../FreeModbus/stm32/portevent.c **** 
  46:../FreeModbus/stm32/portevent.c **** BOOL
  47:../FreeModbus/stm32/portevent.c **** xMBPortEventGet( eMBEventType * eEvent )
  48:../FreeModbus/stm32/portevent.c **** {
 115              		.loc 1 48 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 16
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120 0000 80B4     		push	{r7}
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 7, -4
 123 0002 85B0     		sub	sp, sp, #20
 124              		.cfi_def_cfa_offset 24
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 127 0006 7860     		str	r0, [r7, #4]
  49:../FreeModbus/stm32/portevent.c ****     BOOL            xEventHappened = FALSE;
 128              		.loc 1 49 0
 129 0008 0023     		movs	r3, #0
 130 000a FB73     		strb	r3, [r7, #15]
  50:../FreeModbus/stm32/portevent.c **** 
  51:../FreeModbus/stm32/portevent.c ****     if( xEventInQueue )
 131              		.loc 1 51 0
 132 000c 40F20003 		movw	r3, #:lower16:xEventInQueue
 133 0010 C0F20003 		movt	r3, #:upper16:xEventInQueue
 134 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 135 0016 002B     		cmp	r3, #0
 136 0018 0ED0     		beq	.L6
  52:../FreeModbus/stm32/portevent.c ****     {
  53:../FreeModbus/stm32/portevent.c ****         *eEvent = eQueuedEvent;
 137              		.loc 1 53 0
 138 001a 40F20003 		movw	r3, #:lower16:eQueuedEvent
 139 001e C0F20003 		movt	r3, #:upper16:eQueuedEvent
 140 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 141 0024 7B68     		ldr	r3, [r7, #4]
 142 0026 1A70     		strb	r2, [r3]
  54:../FreeModbus/stm32/portevent.c ****         xEventInQueue = FALSE;
 143              		.loc 1 54 0
 144 0028 40F20003 		movw	r3, #:lower16:xEventInQueue
 145 002c C0F20003 		movt	r3, #:upper16:xEventInQueue
 146 0030 0022     		movs	r2, #0
 147 0032 1A70     		strb	r2, [r3]
  55:../FreeModbus/stm32/portevent.c ****         xEventHappened = TRUE;
 148              		.loc 1 55 0
 149 0034 0123     		movs	r3, #1
 150 0036 FB73     		strb	r3, [r7, #15]
 151              	.L6:
  56:../FreeModbus/stm32/portevent.c ****     }
  57:../FreeModbus/stm32/portevent.c ****     return xEventHappened;
 152              		.loc 1 57 0
 153 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  58:../FreeModbus/stm32/portevent.c **** }
 154              		.loc 1 58 0
 155 003a 1846     		mov	r0, r3
 156 003c 1437     		adds	r7, r7, #20
 157 003e BD46     		mov	sp, r7
 158              		@ sp needed
 159 0040 5DF8047B 		ldr	r7, [sp], #4
 160 0044 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE31:
 164 0046 00BF     		.text
 165              	.Letext0:
 166              		.file 2 "c:\\tools\\arm-none-eabi\\include\\stdint.h"
 167              		.file 3 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\FreeModbus\\stm32/port.h"
 168              		.file 4 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\FreeModbus\\include/mbport.h"
 169              		.file 5 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\Libraries\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 portevent.c
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:21     .bss.eQueuedEvent:00000000 eQueuedEvent
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:22     .bss.eQueuedEvent:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:26     .bss.xEventInQueue:00000000 xEventInQueue
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:27     .bss.xEventInQueue:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:29     .text.xMBPortEventInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:34     .text.xMBPortEventInit:00000000 xMBPortEventInit
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:64     .text.xMBPortEventPost:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:69     .text.xMBPortEventPost:00000000 xMBPortEventPost
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:108    .text.xMBPortEventGet:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccqackm1.s:113    .text.xMBPortEventGet:00000000 xMBPortEventGet
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.98ffea2db242cfdb58f411f7407f2b59
                           .group:00000000 wm4.stm32f10x_conf.h.2.f1a8c33f0a763aeef696fee38b2b2dbc
                           .group:00000000 wm4.mbconfig.h.33.2e295d4ff98bc723e2405a40490b5ddb
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.assert.h.11.060c3dc511517628fd4f958fa9448dce
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.8137491c6995c2cb5d25f9bab92d7f64
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.119fe996be41b62fbd915b59177e39d1
                           .group:00000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:00000000 wm4.portmacro.h.56.a47bdd86bc36d334ca6056492e2d709f
                           .group:00000000 wm4.port.h.38.a8cf679bb58c5ad1b387e726c220530e
                           .group:00000000 wm4.mbproto.h.32.da85c2bdd9bdb84e975a92c999a4b490

NO UNDEFINED SYMBOLS
