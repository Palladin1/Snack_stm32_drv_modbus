   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	NVIC_EnableIRQ:
  24              	.LFB14:
  25              		.file 1 "D:\\Pall\\workspace\\freertos_stm32_d\\Libraries\\CMSIS/core_cm3.h"
   1:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**************************************************************************//**
   2:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @file     core_cm3.h
   3:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @version  V1.30
   5:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @date     30. October 2009
   6:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
   7:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @note
   8:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
  10:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @par
  11:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
  15:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @par
  16:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
  22:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  ******************************************************************************/
  23:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  24:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #ifndef __CM3_CORE_H__
  25:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __CM3_CORE_H__
  26:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  27:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
  29:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *   - Error 10: \n
  31:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     Error 10: Expecting ';'
  33:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * .
  34:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *   - Error 530: \n
  35:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     return(__regBasePri); \n
  36:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * . 
  38:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *   - Error 550: \n
  39:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * .
  42:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *   - Error 754: \n
  43:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * .
  46:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *   - Error 750: \n
  47:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * .
  50:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *   - Error 528: \n
  51:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * .
  54:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *   - Error 751: \n
  55:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     } InterruptType_Type; \n
  56:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * .
  58:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
  60:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
  61:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  62:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -save */
  63:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -e10  */
  64:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -e530 */
  65:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -e550 */
  66:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -e754 */
  67:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -e750 */
  68:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -e528 */
  69:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*lint -e751 */
  70:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  71:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  72:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****     - CMSIS version number
  75:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****     - Cortex-M core registers and bitfields
  76:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****     - Cortex-M core peripheral base address
  77:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
  78:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
  79:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  80:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #ifdef __cplusplus
  81:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  extern "C" {
  82:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif 
  83:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  84:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  88:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  90:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  92:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #if defined (__ICCARM__)
  93:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
  95:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  96:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
  97:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
 100:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 101:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 102:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 103:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 104:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 105:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * IO definitions
 106:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 107:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * define access restrictions to peripheral registers
 108:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 109:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 110:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #ifdef __cplusplus
 111:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #else
 113:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
 115:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 118:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 119:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 120:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*******************************************************************************
 121:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *                 Register Abstraction
 122:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  ******************************************************************************/
 123:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  @{
 125:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** */
 126:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 127:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 128:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
 131:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 132:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** typedef struct
 133:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 134:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }  NVIC_Type;                                               
 148:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 150:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 151:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
 154:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 155:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** typedef struct
 156:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 157:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** } SCB_Type;                                                
 177:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 178:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB CPUID Register Definitions */
 179:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 182:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 185:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 188:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 191:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 195:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 198:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 201:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 204:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 207:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 210:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 213:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 216:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 219:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 222:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 226:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 229:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 233:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 236:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 239:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 242:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 245:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 248:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 251:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB System Control Register Definitions */
 252:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 255:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 258:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 261:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 265:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 268:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 271:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 274:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 277:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 280:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 284:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 287:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 290:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 293:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 296:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 299:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 302:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 305:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 308:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 311:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****                                      
 314:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 317:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 320:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 323:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 327:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 330:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 333:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 337:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 340:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 343:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 347:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 350:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 353:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 356:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 360:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 361:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   memory mapped structure for SysTick
 363:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
 364:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 365:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** typedef struct
 366:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 367:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** } SysTick_Type;
 372:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 373:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 377:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 380:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 383:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 386:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SysTick Reload Register Definitions */
 387:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 390:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SysTick Current Register Definitions */
 391:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 394:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 398:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 401:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 405:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 406:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
 409:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 410:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** typedef struct
 411:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 412:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __O  union  
 413:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   {
 414:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** } ITM_Type;                                                
 445:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 446:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 450:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 454:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 457:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 460:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 463:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 466:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 469:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 472:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 475:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 479:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 483:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 487:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 491:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 494:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 498:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 499:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   memory mapped structure for Interrupt Type
 501:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
 502:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 503:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** typedef struct
 504:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 505:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED0;
 506:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #else
 510:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****        uint32_t RESERVED1;
 511:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
 512:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** } InterruptType_Type;
 513:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 514:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 518:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 522:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 525:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 529:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 530:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
 534:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 535:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** typedef struct
 536:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 537:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** } MPU_Type;                                                
 549:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 550:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* MPU Type Register */
 551:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 554:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 557:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 560:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* MPU Control Register */
 561:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 564:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 567:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 570:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* MPU Region Number Register */
 571:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 574:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* MPU Region Base Address Register */
 575:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 578:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 581:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 584:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 588:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 591:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 594:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 597:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 600:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 603:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 606:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 609:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 612:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
 614:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 615:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 616:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   memory mapped structure for Core Debug Register
 618:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   @{
 619:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 620:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** typedef struct
 621:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 622:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** } CoreDebug_Type;
 627:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 628:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* Debug Halting Control and Status Register */
 629:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 632:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 635:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 638:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 641:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 644:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 647:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 650:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 653:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 656:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 659:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 662:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 665:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* Debug Core Register Selector Register */
 666:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 669:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 672:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 676:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 679:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 682:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 685:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 688:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 691:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 694:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 697:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 700:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 703:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 706:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 709:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 713:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 714:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 722:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 729:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
 733:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 734:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 736:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 737:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*******************************************************************************
 738:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *                Hardware Abstraction Layer
 739:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  ******************************************************************************/
 740:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 741:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #if defined ( __CC_ARM   )
 742:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 745:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #elif defined ( __ICCARM__ )
 746:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 749:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #elif defined   (  __GNUC__  )
 750:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 753:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #elif defined   (  __TASKING__  )
 754:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 757:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
 758:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 759:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 760:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 762:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ARM armcc specific functions */
 764:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 765:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 768:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __NOP                             __nop
 769:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __WFI                             __wfi
 770:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __WFE                             __wfe
 771:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __SEV                             __sev
 772:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __ISB()                           __isb(0)
 773:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __DSB()                           __dsb(0)
 774:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __DMB()                           __dmb(0)
 775:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __REV                             __rev
 776:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __RBIT                            __rbit
 777:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 784:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 785:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 790:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 791:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 792:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 794:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
 795:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 796:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
 797:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 798:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
 799:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 800:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 801:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 803:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 805:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 808:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 810:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 811:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 813:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
 814:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 815:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Cortex processor register
 817:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 818:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
 819:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 820:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 821:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 823:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 825:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 828:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 830:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 831:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 833:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param   value  value to reverse
 834:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return         reversed value
 835:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 836:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
 837:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 838:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 840:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 841:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 843:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param   value  value to reverse
 844:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return         reversed value
 845:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 846:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 848:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 850:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 851:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 853:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 854:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 856:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 858:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __CLREX(void);
 859:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 860:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 861:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
 862:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 863:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return BasePriority
 864:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 865:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the base priority register
 866:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 867:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 869:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 870:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
 871:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 872:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
 873:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 874:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the base priority register
 875:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 876:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 878:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 879:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
 880:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 881:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return PriMask
 882:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 883:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 885:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 887:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 888:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
 889:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 890:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param   priMask  PriMask
 891:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 892:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 894:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 896:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 897:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
 898:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 899:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return FaultMask
 900:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 901:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
 902:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 903:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 905:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 906:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
 907:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 908:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  faultMask faultMask value
 909:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 910:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the fault mask register
 911:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 912:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 914:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 915:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
 916:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * 
 917:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return Control value
 918:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 919:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the control register
 920:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 921:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 923:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 924:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
 925:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 926:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  control  Control value
 927:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 928:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the control register
 929:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 930:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 932:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 934:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 935:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 937:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 939:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __CLREX                           __clrex
 940:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 941:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 942:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
 943:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 944:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return BasePriority
 945:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 946:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the base priority register
 947:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 948:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 950:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   return(__regBasePri);
 952:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
 953:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 954:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 955:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
 956:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 957:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
 958:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 959:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the base priority register
 960:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 961:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 963:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
 966:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 967:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 968:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
 969:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 970:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return PriMask
 971:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 972:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 974:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 976:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   return(__regPriMask);
 978:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
 979:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 980:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 981:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
 982:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 983:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  priMask  PriMask
 984:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 985:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
 987:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
 989:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __regPriMask = (priMask);
 991:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
 992:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
 993:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
 994:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
 995:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 996:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return FaultMask
 997:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
 998:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
 999:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1000:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
1002:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   return(__regFaultMask);
1004:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
1005:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1006:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1007:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
1008:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1009:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  faultMask  faultMask value
1010:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1011:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the fault mask register
1012:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1013:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
1015:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
1018:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1019:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1020:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
1021:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * 
1022:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return Control value
1023:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1024:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the control register
1025:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1026:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
1028:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   return(__regControl);
1030:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
1031:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1032:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1033:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
1034:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1035:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  control  Control value
1036:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1037:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the control register
1038:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1039:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
1041:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   __regControl = control;
1043:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
1044:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1045:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1047:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1048:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1049:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* IAR iccarm specific functions */
1051:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1052:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1055:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1058:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1064:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1076:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1077:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1078:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1080:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
1081:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1082:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
1083:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1084:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
1085:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1086:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1087:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1089:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1091:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1094:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1096:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1097:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1099:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
1100:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1101:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Cortex processor register
1103:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1104:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
1105:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1106:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1107:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1109:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1111:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1114:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1116:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1117:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1119:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1120:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        reversed value
1121:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1122:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
1123:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1124:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1126:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1127:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse bit order of value
1128:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1129:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1130:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        reversed value
1131:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1132:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse bit order of value
1133:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1134:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1136:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1137:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1139:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1140:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        value of (*address)
1141:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1142:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1144:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1146:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1147:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1149:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1150:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        value of (*address)
1151:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1152:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1154:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1156:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1157:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1159:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1160:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        value of (*address)
1161:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1162:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1164:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1166:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1167:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1169:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to store
1170:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1171:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        successful / failed
1172:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1173:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1175:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1177:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1178:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1180:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to store
1181:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1182:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        successful / failed
1183:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1184:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1186:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1188:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1189:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1191:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to store
1192:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1193:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        successful / failed
1194:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1195:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1197:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1199:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1200:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1201:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* GNU gcc specific functions */
1203:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1204:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1207:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1210:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1219:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1220:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1221:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1223:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return ProcessStackPointer
1224:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1225:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the actual process stack pointer
1226:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1227:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_PSP(void);
1228:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1229:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1230:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1232:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1234:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1237:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1239:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1240:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1242:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return Main Stack Pointer
1243:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1244:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Cortex processor register
1246:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1247:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_MSP(void);
1248:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1249:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1250:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1252:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1254:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1257:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1259:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1260:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Base Priority value
1261:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1262:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return BasePriority
1263:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1264:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the base priority register
1265:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1266:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1268:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1269:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Base Priority value
1270:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1271:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  basePri  BasePriority
1272:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1273:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the base priority register
1274:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1275:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1277:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1278:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Priority Mask value
1279:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1280:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return PriMask
1281:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1282:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1284:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1286:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1287:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Priority Mask value
1288:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1289:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  priMask  PriMask
1290:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1291:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1293:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1295:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1296:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Fault Mask value
1297:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1298:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return FaultMask
1299:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1300:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the fault mask register
1301:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1302:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1304:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1305:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Fault Mask value
1306:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1307:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  faultMask  faultMask value
1308:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1309:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the fault mask register
1310:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1311:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1313:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1314:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Return the Control Register value
1315:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** * 
1316:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** *  @return Control value
1317:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1318:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Return the content of the control register
1319:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1320:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1322:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1323:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Control Register value
1324:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1325:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  control  Control value
1326:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1327:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the control register
1328:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1329:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1331:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1332:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1334:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1335:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        reversed value
1336:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1337:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse byte order in integer value
1338:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1339:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1341:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1342:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1344:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1345:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        reversed value
1346:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1347:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse byte order in unsigned short value
1348:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1349:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1351:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1352:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1354:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1355:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        reversed value
1356:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1357:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1359:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1361:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1362:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Reverse bit order of value
1363:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1364:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to reverse
1365:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        reversed value
1366:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1367:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Reverse bit order of value
1368:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1369:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1371:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1372:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1374:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1375:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        value of (*address)
1376:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1377:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1379:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1381:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1382:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1384:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1385:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        value of (*address)
1386:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1387:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1389:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1391:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1392:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1394:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1395:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        value of (*address)
1396:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1397:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1399:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1401:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1402:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1404:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to store
1405:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1406:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        successful / failed
1407:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1408:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1410:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1412:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1413:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1415:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to store
1416:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1417:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        successful / failed
1418:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1419:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1421:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1423:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1424:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1426:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  value  value to store
1427:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  *addr  address pointer
1428:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return        successful / failed
1429:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1430:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1432:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1434:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1435:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* TASKING carm specific functions */
1437:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1438:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*
1439:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Including the CMSIS ones.
1442:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1443:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1444:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** #endif
1445:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1446:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1447:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   Core  Function Interface containing:
1449:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   - Core NVIC Functions
1450:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   - Core SysTick Functions
1451:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   - Core Reset Functions
1452:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** */
1453:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /*@{*/
1454:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1455:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1457:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1458:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1460:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1462:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1468:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
1470:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   uint32_t reg_value;
1471:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   
1473:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   reg_value  =  (reg_value                       |
1476:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
1480:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1481:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1482:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1484:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @return priority grouping field 
1485:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1486:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1489:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
1491:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
1493:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** 
1494:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** /**
1495:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1497:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  *
1499:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****  */
1502:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** {
  26              		.loc 1 1503 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
1504:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  43              		.loc 1 1504 0
  44 000a 4FF46143 		mov	r3, #57600
  45 000e CEF20003 		movt	r3, 57344
  46 0012 97F90720 		ldrsb	r2, [r7, #7]
  47 0016 4FEA5212 		lsr	r2, r2, #5
  48 001a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  49 001c 01F01F01 		and	r1, r1, #31
  50 0020 4FF00100 		mov	r0, #1
  51 0024 00FA01F1 		lsl	r1, r0, r1
  52 0028 43F82210 		str	r1, [r3, r2, lsl #2]
1505:D:\Pall\workspace\freertos_stm32_d\Libraries\CMSIS\core_cm3.h **** }
  53              		.loc 1 1505 0
  54 002c 07F10C07 		add	r7, r7, #12
  55 0030 BD46     		mov	sp, r7
  56 0032 80BC     		pop	{r7}
  57 0034 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE14:
  61 0036 00BF     		.section	.text.Uart1Init,"ax",%progbits
  62              		.align	2
  63              		.global	Uart1Init
  64              		.thumb
  65              		.thumb_func
  67              	Uart1Init:
  68              	.LFB29:
  69              		.file 2 "../Libraries/Peripherals/uart.c"
   1:../Libraries/Peripherals/uart.c **** /*
   2:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
   3:../Libraries/Peripherals/uart.c **** *
   4:../Libraries/Peripherals/uart.c **** *                                            UART INTERFACE
   5:../Libraries/Peripherals/uart.c **** *
   6:../Libraries/Peripherals/uart.c **** * Filename      : uart.c
   7:../Libraries/Peripherals/uart.c **** * Version       : V1.00
   8:../Libraries/Peripherals/uart.c **** * Programmer(s) : Palladin
   9:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  10:../Libraries/Peripherals/uart.c **** */
  11:../Libraries/Peripherals/uart.c **** 
  12:../Libraries/Peripherals/uart.c **** 
  13:../Libraries/Peripherals/uart.c **** /*
  14:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  15:../Libraries/Peripherals/uart.c **** *                                             INCLUDE FILES
  16:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  17:../Libraries/Peripherals/uart.c **** */
  18:../Libraries/Peripherals/uart.c **** #include "uart.h"
  19:../Libraries/Peripherals/uart.c **** 
  20:../Libraries/Peripherals/uart.c **** /*
  21:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  22:../Libraries/Peripherals/uart.c **** *                                            LOCAL DEFINES
  23:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  24:../Libraries/Peripherals/uart.c **** */
  25:../Libraries/Peripherals/uart.c **** 
  26:../Libraries/Peripherals/uart.c **** 
  27:../Libraries/Peripherals/uart.c **** /*
  28:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  29:../Libraries/Peripherals/uart.c **** *                                           LOCAL CONSTANTS
  30:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  31:../Libraries/Peripherals/uart.c **** */
  32:../Libraries/Peripherals/uart.c **** 
  33:../Libraries/Peripherals/uart.c **** 
  34:../Libraries/Peripherals/uart.c **** /*
  35:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  36:../Libraries/Peripherals/uart.c **** *                                          LOCAL DATA TYPES
  37:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  38:../Libraries/Peripherals/uart.c **** */
  39:../Libraries/Peripherals/uart.c **** 
  40:../Libraries/Peripherals/uart.c **** 
  41:../Libraries/Peripherals/uart.c **** /*
  42:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  43:../Libraries/Peripherals/uart.c **** *                                            LOCAL TABLES
  44:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  45:../Libraries/Peripherals/uart.c **** */
  46:../Libraries/Peripherals/uart.c **** 
  47:../Libraries/Peripherals/uart.c **** 
  48:../Libraries/Peripherals/uart.c **** /*
  49:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  50:../Libraries/Peripherals/uart.c **** *                                       LOCAL GLOBAL VARIABLES
  51:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  52:../Libraries/Peripherals/uart.c **** */
  53:../Libraries/Peripherals/uart.c **** 
  54:../Libraries/Peripherals/uart.c **** 
  55:../Libraries/Peripherals/uart.c **** 
  56:../Libraries/Peripherals/uart.c **** /*
  57:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  58:../Libraries/Peripherals/uart.c **** *                                      LOCAL FUNCTION PROTOTYPES
  59:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  60:../Libraries/Peripherals/uart.c **** */
  61:../Libraries/Peripherals/uart.c **** 
  62:../Libraries/Peripherals/uart.c **** 
  63:../Libraries/Peripherals/uart.c **** /*
  64:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  65:../Libraries/Peripherals/uart.c **** *                                     LOCAL CONFIGURATION ERRORS
  66:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  67:../Libraries/Peripherals/uart.c **** */
  68:../Libraries/Peripherals/uart.c **** 
  69:../Libraries/Peripherals/uart.c **** 
  70:../Libraries/Peripherals/uart.c **** /*
  71:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  72:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  73:../Libraries/Peripherals/uart.c **** **                                         GLOBAL FUNCTIONS
  74:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  75:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  76:../Libraries/Peripherals/uart.c **** */
  77:../Libraries/Peripherals/uart.c **** 
  78:../Libraries/Peripherals/uart.c **** 
  79:../Libraries/Peripherals/uart.c **** /*
  80:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  81:../Libraries/Peripherals/uart.c **** *                                          UartInit()
  82:../Libraries/Peripherals/uart.c **** *
  83:../Libraries/Peripherals/uart.c **** * Description : Initialize a serial port for communication.
  84:../Libraries/Peripherals/uart.c **** *
  85:../Libraries/Peripherals/uart.c **** * Argument(s) : baud_rate           The desire RS232 baud rate.
  86:../Libraries/Peripherals/uart.c **** *
  87:../Libraries/Peripherals/uart.c **** * Return(s)   : none.
  88:../Libraries/Peripherals/uart.c **** *
  89:../Libraries/Peripherals/uart.c **** * Caller(s)   : Application.
  90:../Libraries/Peripherals/uart.c **** *
  91:../Libraries/Peripherals/uart.c **** * Note(s)     : none.
  92:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
  93:../Libraries/Peripherals/uart.c **** */
  94:../Libraries/Peripherals/uart.c **** 
  95:../Libraries/Peripherals/uart.c **** void  Uart1Init (u32  baud_rate) {
  70              		.loc 2 95 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 32
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              	.LCFI3:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 14, -4
  78              		.cfi_offset 7, -8
  79 0002 88B0     		sub	sp, sp, #32
  80              	.LCFI4:
  81              		.cfi_def_cfa_offset 40
  82 0004 00AF     		add	r7, sp, #0
  83              	.LCFI5:
  84              		.cfi_def_cfa_register 7
  85 0006 7860     		str	r0, [r7, #4]
  96:../Libraries/Peripherals/uart.c **** 	USART_DeInit(USART1);
  86              		.loc 2 96 0
  87 0008 4FF46050 		mov	r0, #14336
  88 000c C4F20100 		movt	r0, 16385
  89 0010 FFF7FEFF 		bl	USART_DeInit
  97:../Libraries/Peripherals/uart.c **** //	xStringQueue = xQueueCreate(40, sizeof(unsigned char));
  98:../Libraries/Peripherals/uart.c **** 
  99:../Libraries/Peripherals/uart.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO | RCC_APB2Periph_USART1, ENABLE)
  90              		.loc 2 99 0
  91 0014 44F20500 		movw	r0, #16389
  92 0018 4FF00101 		mov	r1, #1
  93 001c FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 100:../Libraries/Peripherals/uart.c **** 
 101:../Libraries/Peripherals/uart.c **** 	GPIO_InitTypeDef uart1_gpio;
 102:../Libraries/Peripherals/uart.c **** 	uart1_gpio.GPIO_Pin = GPIO_Pin_10;                               /* UART1 RX pin */
  94              		.loc 2 102 0
  95 0020 4FF48063 		mov	r3, #1024
  96 0024 BB83     		strh	r3, [r7, #28]	@ movhi
 103:../Libraries/Peripherals/uart.c **** 	uart1_gpio.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  97              		.loc 2 103 0
  98 0026 4FF00403 		mov	r3, #4
  99 002a FB77     		strb	r3, [r7, #31]
 104:../Libraries/Peripherals/uart.c **** 	GPIO_Init(GPIOA, &uart1_gpio);
 100              		.loc 2 104 0
 101 002c 07F11C03 		add	r3, r7, #28
 102 0030 4FF40060 		mov	r0, #2048
 103 0034 C4F20100 		movt	r0, 16385
 104 0038 1946     		mov	r1, r3
 105 003a FFF7FEFF 		bl	GPIO_Init
 105:../Libraries/Peripherals/uart.c **** 
 106:../Libraries/Peripherals/uart.c **** 	uart1_gpio.GPIO_Pin = GPIO_Pin_9;                                /* UART1 TX pin */
 106              		.loc 2 106 0
 107 003e 4FF40073 		mov	r3, #512
 108 0042 BB83     		strh	r3, [r7, #28]	@ movhi
 107:../Libraries/Peripherals/uart.c **** 	uart1_gpio.GPIO_Mode = GPIO_Mode_AF_PP;
 109              		.loc 2 107 0
 110 0044 4FF01803 		mov	r3, #24
 111 0048 FB77     		strb	r3, [r7, #31]
 108:../Libraries/Peripherals/uart.c **** 	uart1_gpio.GPIO_Speed = GPIO_Speed_10MHz;
 112              		.loc 2 108 0
 113 004a 4FF00103 		mov	r3, #1
 114 004e BB77     		strb	r3, [r7, #30]
 109:../Libraries/Peripherals/uart.c **** 	GPIO_Init(GPIOA, &uart1_gpio);
 115              		.loc 2 109 0
 116 0050 07F11C03 		add	r3, r7, #28
 117 0054 4FF40060 		mov	r0, #2048
 118 0058 C4F20100 		movt	r0, 16385
 119 005c 1946     		mov	r1, r3
 120 005e FFF7FEFF 		bl	GPIO_Init
 110:../Libraries/Peripherals/uart.c **** 
 111:../Libraries/Peripherals/uart.c ****     USART_InitTypeDef uart1;
 112:../Libraries/Peripherals/uart.c ****     uart1.USART_BaudRate = baud_rate;
 121              		.loc 2 112 0
 122 0062 7B68     		ldr	r3, [r7, #4]
 123 0064 FB60     		str	r3, [r7, #12]
 113:../Libraries/Peripherals/uart.c ****     uart1.USART_WordLength = USART_WordLength_8b;
 124              		.loc 2 113 0
 125 0066 4FF00003 		mov	r3, #0
 126 006a 3B82     		strh	r3, [r7, #16]	@ movhi
 114:../Libraries/Peripherals/uart.c ****     uart1.USART_StopBits = USART_StopBits_1;
 127              		.loc 2 114 0
 128 006c 4FF00003 		mov	r3, #0
 129 0070 7B82     		strh	r3, [r7, #18]	@ movhi
 115:../Libraries/Peripherals/uart.c ****     uart1.USART_Parity = USART_Parity_No;
 130              		.loc 2 115 0
 131 0072 4FF00003 		mov	r3, #0
 132 0076 BB82     		strh	r3, [r7, #20]	@ movhi
 116:../Libraries/Peripherals/uart.c ****     uart1.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
 133              		.loc 2 116 0
 134 0078 4FF00C03 		mov	r3, #12
 135 007c FB82     		strh	r3, [r7, #22]	@ movhi
 117:../Libraries/Peripherals/uart.c ****     uart1.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 136              		.loc 2 117 0
 137 007e 4FF00003 		mov	r3, #0
 138 0082 3B83     		strh	r3, [r7, #24]	@ movhi
 118:../Libraries/Peripherals/uart.c **** 
 119:../Libraries/Peripherals/uart.c ****     USART_Init(USART1, &uart1);
 139              		.loc 2 119 0
 140 0084 07F10C03 		add	r3, r7, #12
 141 0088 4FF46050 		mov	r0, #14336
 142 008c C4F20100 		movt	r0, 16385
 143 0090 1946     		mov	r1, r3
 144 0092 FFF7FEFF 		bl	USART_Init
 120:../Libraries/Peripherals/uart.c **** 
 121:../Libraries/Peripherals/uart.c ****     #if UART1_RX_INTERRAPT_ENABLE
 122:../Libraries/Peripherals/uart.c ****         USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 145              		.loc 2 122 0
 146 0096 4FF46050 		mov	r0, #14336
 147 009a C4F20100 		movt	r0, 16385
 148 009e 40F22551 		movw	r1, #1317
 149 00a2 4FF00102 		mov	r2, #1
 150 00a6 FFF7FEFF 		bl	USART_ITConfig
 123:../Libraries/Peripherals/uart.c ****         NVIC_EnableIRQ(USART1_IRQn);
 151              		.loc 2 123 0
 152 00aa 4FF02500 		mov	r0, #37
 153 00ae FFF7FEFF 		bl	NVIC_EnableIRQ
 124:../Libraries/Peripherals/uart.c ****     #endif
 125:../Libraries/Peripherals/uart.c ****     #if UART1_TX_INTERRAPT_ENABLE
 126:../Libraries/Peripherals/uart.c ****         USART_ITConfig(USART1, USART_IT_TXE, ENABLE);
 127:../Libraries/Peripherals/uart.c ****         NVIC_EnableIRQ(USART1_IRQn);
 128:../Libraries/Peripherals/uart.c ****     #endif
 129:../Libraries/Peripherals/uart.c **** 
 130:../Libraries/Peripherals/uart.c ****     USART_Cmd(USART1, ENABLE);
 154              		.loc 2 130 0
 155 00b2 4FF46050 		mov	r0, #14336
 156 00b6 C4F20100 		movt	r0, 16385
 157 00ba 4FF00101 		mov	r1, #1
 158 00be FFF7FEFF 		bl	USART_Cmd
 131:../Libraries/Peripherals/uart.c **** }
 159              		.loc 2 131 0
 160 00c2 07F12007 		add	r7, r7, #32
 161 00c6 BD46     		mov	sp, r7
 162 00c8 80BD     		pop	{r7, pc}
 163              		.cfi_endproc
 164              	.LFE29:
 166 00ca 00BF     		.section	.text.Uart1RdByte,"ax",%progbits
 167              		.align	2
 168              		.global	Uart1RdByte
 169              		.thumb
 170              		.thumb_func
 172              	Uart1RdByte:
 173              	.LFB30:
 132:../Libraries/Peripherals/uart.c **** 
 133:../Libraries/Peripherals/uart.c **** /*
 134:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
 135:../Libraries/Peripherals/uart.c **** *                                                Uart1RdByte()
 136:../Libraries/Peripherals/uart.c **** *
 137:../Libraries/Peripherals/uart.c **** * Description : Receive a single byte.
 138:../Libraries/Peripherals/uart.c **** *
 139:../Libraries/Peripherals/uart.c **** * Argument(s) : none.
 140:../Libraries/Peripherals/uart.c **** *
 141:../Libraries/Peripherals/uart.c **** * Return(s)   : The received byte.
 142:../Libraries/Peripherals/uart.c **** *
 143:../Libraries/Peripherals/uart.c **** * Caller(s)   : Application.
 144:../Libraries/Peripherals/uart.c **** *
 145:../Libraries/Peripherals/uart.c **** * Note(s)     : 
 146:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
 147:../Libraries/Peripherals/uart.c **** */
 148:../Libraries/Peripherals/uart.c **** u8  Uart1RdByte (void) {
 174              		.loc 2 148 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              	.LCFI6:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 14, -4
 182              		.cfi_offset 7, -8
 183 0002 00AF     		add	r7, sp, #0
 184              	.LCFI7:
 185              		.cfi_def_cfa_register 7
 149:../Libraries/Peripherals/uart.c **** 
 150:../Libraries/Peripherals/uart.c **** return (USART_ReceiveData(USART1));
 186              		.loc 2 150 0
 187 0004 4FF46050 		mov	r0, #14336
 188 0008 C4F20100 		movt	r0, 16385
 189 000c FFF7FEFF 		bl	USART_ReceiveData
 190 0010 0346     		mov	r3, r0
 191 0012 DBB2     		uxtb	r3, r3
 151:../Libraries/Peripherals/uart.c **** }
 192              		.loc 2 151 0
 193 0014 1846     		mov	r0, r3
 194 0016 80BD     		pop	{r7, pc}
 195              		.cfi_endproc
 196              	.LFE30:
 198              		.section	.text.Uart1WrByte,"ax",%progbits
 199              		.align	2
 200              		.global	Uart1WrByte
 201              		.thumb
 202              		.thumb_func
 204              	Uart1WrByte:
 205              	.LFB31:
 152:../Libraries/Peripherals/uart.c **** 
 153:../Libraries/Peripherals/uart.c **** /*
 154:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
 155:../Libraries/Peripherals/uart.c **** *                                                Uart1WrByte()
 156:../Libraries/Peripherals/uart.c **** *
 157:../Libraries/Peripherals/uart.c **** * Description : Writes a single byte to a serial port.
 158:../Libraries/Peripherals/uart.c **** *
 159:../Libraries/Peripherals/uart.c **** * Argument(s) : tx_byte     The character to output.
 160:../Libraries/Peripherals/uart.c **** *
 161:../Libraries/Peripherals/uart.c **** * Return(s)   : none.
 162:../Libraries/Peripherals/uart.c **** *
 163:../Libraries/Peripherals/uart.c **** * Caller(s)   : Application.
 164:../Libraries/Peripherals/uart.c **** *
 165:../Libraries/Peripherals/uart.c **** * Note(s)     : none.
 166:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
 167:../Libraries/Peripherals/uart.c **** */
 168:../Libraries/Peripherals/uart.c **** void  Uart1WrByte (u8 c) {
 206              		.loc 2 168 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 8
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 80B5     		push	{r7, lr}
 211              	.LCFI8:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 14, -4
 214              		.cfi_offset 7, -8
 215 0002 82B0     		sub	sp, sp, #8
 216              	.LCFI9:
 217              		.cfi_def_cfa_offset 16
 218 0004 00AF     		add	r7, sp, #0
 219              	.LCFI10:
 220              		.cfi_def_cfa_register 7
 221 0006 0346     		mov	r3, r0
 222 0008 FB71     		strb	r3, [r7, #7]
 169:../Libraries/Peripherals/uart.c **** 
 170:../Libraries/Peripherals/uart.c **** 	while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
 223              		.loc 2 170 0
 224 000a 00BF     		nop
 225              	.L5:
 226              		.loc 2 170 0 is_stmt 0 discriminator 1
 227 000c 4FF46050 		mov	r0, #14336
 228 0010 C4F20100 		movt	r0, 16385
 229 0014 4FF08001 		mov	r1, #128
 230 0018 FFF7FEFF 		bl	USART_GetFlagStatus
 231 001c 0346     		mov	r3, r0
 232 001e 002B     		cmp	r3, #0
 233 0020 F4D0     		beq	.L5
 171:../Libraries/Peripherals/uart.c **** 	USART_SendData(USART1, c);
 234              		.loc 2 171 0 is_stmt 1
 235 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 236 0024 9BB2     		uxth	r3, r3
 237 0026 4FF46050 		mov	r0, #14336
 238 002a C4F20100 		movt	r0, 16385
 239 002e 1946     		mov	r1, r3
 240 0030 FFF7FEFF 		bl	USART_SendData
 172:../Libraries/Peripherals/uart.c **** }
 241              		.loc 2 172 0
 242 0034 07F10807 		add	r7, r7, #8
 243 0038 BD46     		mov	sp, r7
 244 003a 80BD     		pop	{r7, pc}
 245              		.cfi_endproc
 246              	.LFE31:
 248              		.section	.text.Uart1WrStr,"ax",%progbits
 249              		.align	2
 250              		.global	Uart1WrStr
 251              		.thumb
 252              		.thumb_func
 254              	Uart1WrStr:
 255              	.LFB32:
 173:../Libraries/Peripherals/uart.c **** 
 174:../Libraries/Peripherals/uart.c **** 
 175:../Libraries/Peripherals/uart.c **** /*
 176:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
 177:../Libraries/Peripherals/uart.c **** *                                                Uart1WrStr()
 178:../Libraries/Peripherals/uart.c **** *
 179:../Libraries/Peripherals/uart.c **** * Description : Transmits a string.
 180:../Libraries/Peripherals/uart.c **** *
 181:../Libraries/Peripherals/uart.c **** * Argument(s) : p_str       Pointer to the string that will be transmitted.
 182:../Libraries/Peripherals/uart.c **** *
 183:../Libraries/Peripherals/uart.c **** * Caller(s)   : Application.
 184:../Libraries/Peripherals/uart.c **** *
 185:../Libraries/Peripherals/uart.c **** * Return(s)   : none.
 186:../Libraries/Peripherals/uart.c **** *
 187:../Libraries/Peripherals/uart.c **** * Note(s)     : none.
 188:../Libraries/Peripherals/uart.c **** ***************************************************************************************************
 189:../Libraries/Peripherals/uart.c **** */
 190:../Libraries/Peripherals/uart.c **** void  Uart1WrStr (u8  *p_str) {
 256              		.loc 2 190 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 0000 80B5     		push	{r7, lr}
 261              	.LCFI11:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 14, -4
 264              		.cfi_offset 7, -8
 265 0002 82B0     		sub	sp, sp, #8
 266              	.LCFI12:
 267              		.cfi_def_cfa_offset 16
 268 0004 00AF     		add	r7, sp, #0
 269              	.LCFI13:
 270              		.cfi_def_cfa_register 7
 271 0006 7860     		str	r0, [r7, #4]
 272              	.L9:
 191:../Libraries/Peripherals/uart.c ****     
 192:../Libraries/Peripherals/uart.c ****     while (1) {
 193:../Libraries/Peripherals/uart.c ****         if (!(*p_str)) {
 273              		.loc 2 193 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 276 000c 002B     		cmp	r3, #0
 277 000e 09D0     		beq	.L11
 278              	.L7:
 194:../Libraries/Peripherals/uart.c ****             break;
 195:../Libraries/Peripherals/uart.c ****         }
 196:../Libraries/Peripherals/uart.c ****         Uart1WrByte(*(p_str++));
 279              		.loc 2 196 0
 280 0010 7B68     		ldr	r3, [r7, #4]
 281 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 282 0014 7A68     		ldr	r2, [r7, #4]
 283 0016 02F10102 		add	r2, r2, #1
 284 001a 7A60     		str	r2, [r7, #4]
 285 001c 1846     		mov	r0, r3
 286 001e FFF7FEFF 		bl	Uart1WrByte
 197:../Libraries/Peripherals/uart.c ****     }
 287              		.loc 2 197 0
 288 0022 F1E7     		b	.L9
 289              	.L11:
 194:../Libraries/Peripherals/uart.c ****             break;
 290              		.loc 2 194 0
 291 0024 00BF     		nop
 292              	.L10:
 198:../Libraries/Peripherals/uart.c ****     
 199:../Libraries/Peripherals/uart.c **** }
 293              		.loc 2 199 0
 294 0026 07F10807 		add	r7, r7, #8
 295 002a BD46     		mov	sp, r7
 296 002c 80BD     		pop	{r7, pc}
 297              		.cfi_endproc
 298              	.LFE32:
 300 002e 00BF     		.section	.text.USART1_IRQHandler,"ax",%progbits
 301              		.align	2
 302              		.global	USART1_IRQHandler
 303              		.thumb
 304              		.thumb_func
 306              	USART1_IRQHandler:
 307              	.LFB33:
 200:../Libraries/Peripherals/uart.c **** 
 201:../Libraries/Peripherals/uart.c **** 
 202:../Libraries/Peripherals/uart.c **** #if UART1_RX_INTERRAPT_ENABLE || UART1_TX_INTERRAPT_ENABLE
 203:../Libraries/Peripherals/uart.c **** void USART1_IRQHandler (void) {
 308              		.loc 2 203 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              	.LCFI14:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 14, -4
 316              		.cfi_offset 7, -8
 317 0002 82B0     		sub	sp, sp, #8
 318              	.LCFI15:
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI16:
 322              		.cfi_def_cfa_register 7
 204:../Libraries/Peripherals/uart.c **** 	unsigned char z;
 205:../Libraries/Peripherals/uart.c ****     #if UART1_RX_INTERRAPT_ENABLE
 206:../Libraries/Peripherals/uart.c ****       if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET) {
 323              		.loc 2 206 0
 324 0006 4FF46050 		mov	r0, #14336
 325 000a C4F20100 		movt	r0, 16385
 326 000e 40F22551 		movw	r1, #1317
 327 0012 FFF7FEFF 		bl	USART_GetITStatus
 328 0016 0346     		mov	r3, r0
 329 0018 002B     		cmp	r3, #0
 330 001a 1CD0     		beq	.L12
 207:../Libraries/Peripherals/uart.c ****     	  /* Read one byte from the receive data register */
 208:../Libraries/Peripherals/uart.c ****     	  z = USART_ReceiveData(USART1);
 331              		.loc 2 208 0
 332 001c 4FF46050 		mov	r0, #14336
 333 0020 C4F20100 		movt	r0, 16385
 334 0024 FFF7FEFF 		bl	USART_ReceiveData
 335 0028 0346     		mov	r3, r0
 336 002a FB71     		strb	r3, [r7, #7]
 209:../Libraries/Peripherals/uart.c ****           while (USART_GetFlagStatus(USART2, USART_FLAG_TXE) == RESET);
 337              		.loc 2 209 0
 338 002c 00BF     		nop
 339              	.L14:
 340              		.loc 2 209 0 is_stmt 0 discriminator 1
 341 002e 4FF48840 		mov	r0, #17408
 342 0032 C4F20000 		movt	r0, 16384
 343 0036 4FF08001 		mov	r1, #128
 344 003a FFF7FEFF 		bl	USART_GetFlagStatus
 345 003e 0346     		mov	r3, r0
 346 0040 002B     		cmp	r3, #0
 347 0042 F4D0     		beq	.L14
 210:../Libraries/Peripherals/uart.c ****       	  USART_SendData(USART2, z);
 348              		.loc 2 210 0 is_stmt 1
 349 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 350 0046 9BB2     		uxth	r3, r3
 351 0048 4FF48840 		mov	r0, #17408
 352 004c C4F20000 		movt	r0, 16384
 353 0050 1946     		mov	r1, r3
 354 0052 FFF7FEFF 		bl	USART_SendData
 355              	.L12:
 211:../Libraries/Peripherals/uart.c ****     	  //////////////////////////////////////////////////////////////////////////////
 212:../Libraries/Peripherals/uart.c **** /*    	  static portBASE_TYPE xHigherPriorityTaskWoken;
 213:../Libraries/Peripherals/uart.c **** 
 214:../Libraries/Peripherals/uart.c ****     	  xQueueSendToBackFromISR(xStringQueue,
 215:../Libraries/Peripherals/uart.c ****     	                          &z,
 216:../Libraries/Peripherals/uart.c ****     	                          &xHigherPriorityTaskWoken);
 217:../Libraries/Peripherals/uart.c **** 
 218:../Libraries/Peripherals/uart.c ****     	  if( xHigherPriorityTaskWoken == pdTRUE ) {
 219:../Libraries/Peripherals/uart.c **** 
 220:../Libraries/Peripherals/uart.c ****     	      taskYIELD();
 221:../Libraries/Peripherals/uart.c ****     	  }
 222:../Libraries/Peripherals/uart.c **** */    	  //////////////////////////////////////////////////////////////////////////////
 223:../Libraries/Peripherals/uart.c **** 
 224:../Libraries/Peripherals/uart.c ****       }
 225:../Libraries/Peripherals/uart.c ****     #endif
 226:../Libraries/Peripherals/uart.c ****     #if UART1_TX_INTERRAPT_ENABLE
 227:../Libraries/Peripherals/uart.c ****       if(USART_GetITStatus(USART1, USART_IT_TXE) != RESET) {
 228:../Libraries/Peripherals/uart.c **** 
 229:../Libraries/Peripherals/uart.c ****       }
 230:../Libraries/Peripherals/uart.c ****     #endif
 231:../Libraries/Peripherals/uart.c **** 
 232:../Libraries/Peripherals/uart.c **** }
 356              		.loc 2 232 0
 357 0056 07F10807 		add	r7, r7, #8
 358 005a BD46     		mov	sp, r7
 359 005c 80BD     		pop	{r7, pc}
 360              		.cfi_endproc
 361              	.LFE33:
 363 005e 00BF     		.text
 364              	.Letext0:
 365              		.file 3 "D:\\Pall\\workspace\\freertos_stm32_d\\Libraries\\CMSIS/stm32f10x.h"
 366              		.file 4 "c:\\tools\\bin\\../lib/gcc/arm-none-eabi/4.6.1/../../../../arm-none-eabi/include/stdint.h
 367              		.file 5 "D:\\Pall\\workspace\\freertos_stm32_d\\Libraries\\StdPeripheralDriver\\inc/stm32f10x_gpio
 368              		.file 6 "D:\\Pall\\workspace\\freertos_stm32_d\\Libraries\\StdPeripheralDriver\\inc/stm32f10x_usar
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:19     .text.NVIC_EnableIRQ:00000000 $t
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:23     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:62     .text.Uart1Init:00000000 $t
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:67     .text.Uart1Init:00000000 Uart1Init
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:167    .text.Uart1RdByte:00000000 $t
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:172    .text.Uart1RdByte:00000000 Uart1RdByte
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:199    .text.Uart1WrByte:00000000 $t
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:204    .text.Uart1WrByte:00000000 Uart1WrByte
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:249    .text.Uart1WrStr:00000000 $t
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:254    .text.Uart1WrStr:00000000 Uart1WrStr
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:301    .text.USART1_IRQHandler:00000000 $t
C:\DOCUME~1\lexa\LOCALS~1\Temp\ccbSamZM.s:306    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USART_DeInit
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Init
USART_ITConfig
USART_Cmd
USART_ReceiveData
USART_GetFlagStatus
USART_SendData
USART_GetITStatus
