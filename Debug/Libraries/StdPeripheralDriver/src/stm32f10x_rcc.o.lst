   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.data.APBAHBPrescTable,"aw",%progbits
  19              		.align	2
  22              	APBAHBPrescTable:
  23 0000 00       		.byte	0
  24 0001 00       		.byte	0
  25 0002 00       		.byte	0
  26 0003 00       		.byte	0
  27 0004 01       		.byte	1
  28 0005 02       		.byte	2
  29 0006 03       		.byte	3
  30 0007 04       		.byte	4
  31 0008 01       		.byte	1
  32 0009 02       		.byte	2
  33 000a 03       		.byte	3
  34 000b 04       		.byte	4
  35 000c 06       		.byte	6
  36 000d 07       		.byte	7
  37 000e 08       		.byte	8
  38 000f 09       		.byte	9
  39              		.section	.data.ADCPrescTable,"aw",%progbits
  40              		.align	2
  43              	ADCPrescTable:
  44 0000 02       		.byte	2
  45 0001 04       		.byte	4
  46 0002 06       		.byte	6
  47 0003 08       		.byte	8
  48              		.section	.text.RCC_DeInit,"ax",%progbits
  49              		.align	2
  50              		.global	RCC_DeInit
  51              		.thumb
  52              		.thumb_func
  54              	RCC_DeInit:
  55              	.LFB29:
  56              		.file 1 "../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c"
   1:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
   2:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @attention
  10:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *
  11:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *
  18:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  21:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  22:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  25:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  27:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  28:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  29:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  30:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  31:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  32:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
  33:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  34:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  35:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  36:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  37:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  38:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
  39:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
  40:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  41:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  42:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  43:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  44:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  45:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  46:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  47:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  48:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  49:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  50:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  51:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  52:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  53:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  54:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  55:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  56:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  57:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  58:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  59:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  60:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  61:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  62:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  63:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  64:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  65:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  66:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  67:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  68:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  69:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  70:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  71:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  72:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  73:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  74:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  75:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  76:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  77:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  78:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  79:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  80:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  81:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  82:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
  83:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  84:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  85:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  86:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  87:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  88:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  89:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  90:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  91:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  92:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  93:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  94:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  95:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  96:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  97:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  98:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
  99:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 100:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 101:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 102:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 103:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 104:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 105:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 106:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 107:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 108:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 109:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 110:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 111:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 112:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 113:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 114:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 115:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 116:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 117:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 118:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 119:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 120:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 121:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 122:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 123:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 124:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 125:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 126:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 127:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 128:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 129:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 130:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 131:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 132:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 133:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 134:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 135:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 136:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 137:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 138:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 139:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 140:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 141:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 142:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 143:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 144:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 145:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 146:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 147:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 148:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 149:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 150:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 151:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 152:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 153:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 154:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 155:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 156:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 157:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 158:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 159:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 160:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 161:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 162:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 163:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 164:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 165:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 166:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 167:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 168:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 169:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 170:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 171:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 172:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 173:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 174:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 175:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 176:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 177:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 178:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 179:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 180:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 181:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 182:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 183:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 184:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 185:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 186:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 187:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 188:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 189:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 190:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 191:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 192:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 193:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 194:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 195:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 196:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 197:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 198:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 199:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 200:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 201:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 202:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 203:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 204:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 205:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 206:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 207:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 208:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 209:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 210:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 211:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 212:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 213:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 215:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 216:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 217:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 218:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
  57              		.loc 1 218 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0000 80B4     		push	{r7}
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 7, -4
  65 0002 00AF     		add	r7, sp, #0
  66              		.cfi_def_cfa_register 7
 219:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 220:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  67              		.loc 1 220 0
  68 0004 4FF48053 		mov	r3, #4096
  69 0008 C4F20203 		movt	r3, 16386
  70 000c 4FF48052 		mov	r2, #4096
  71 0010 C4F20202 		movt	r2, 16386
  72 0014 1268     		ldr	r2, [r2]
  73 0016 42F00102 		orr	r2, r2, #1
  74 001a 1A60     		str	r2, [r3]
 221:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 222:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 223:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 224:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  75              		.loc 1 224 0
  76 001c 4FF48052 		mov	r2, #4096
  77 0020 C4F20202 		movt	r2, 16386
  78 0024 4FF48053 		mov	r3, #4096
  79 0028 C4F20203 		movt	r3, 16386
  80 002c 5968     		ldr	r1, [r3, #4]
  81 002e 0023     		movs	r3, #0
  82 0030 CFF6FF03 		movt	r3, 63743
  83 0034 0B40     		ands	r3, r3, r1
  84 0036 5360     		str	r3, [r2, #4]
 225:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 226:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 227:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 228:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 229:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 230:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  85              		.loc 1 230 0
  86 0038 4FF48053 		mov	r3, #4096
  87 003c C4F20203 		movt	r3, 16386
  88 0040 4FF48052 		mov	r2, #4096
  89 0044 C4F20202 		movt	r2, 16386
  90 0048 1268     		ldr	r2, [r2]
  91 004a 22F08472 		bic	r2, r2, #17301504
  92 004e 22F48032 		bic	r2, r2, #65536
  93 0052 1A60     		str	r2, [r3]
 231:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 232:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 233:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  94              		.loc 1 233 0
  95 0054 4FF48053 		mov	r3, #4096
  96 0058 C4F20203 		movt	r3, 16386
  97 005c 4FF48052 		mov	r2, #4096
  98 0060 C4F20202 		movt	r2, 16386
  99 0064 1268     		ldr	r2, [r2]
 100 0066 22F48022 		bic	r2, r2, #262144
 101 006a 1A60     		str	r2, [r3]
 234:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 235:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 236:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 102              		.loc 1 236 0
 103 006c 4FF48053 		mov	r3, #4096
 104 0070 C4F20203 		movt	r3, 16386
 105 0074 4FF48052 		mov	r2, #4096
 106 0078 C4F20202 		movt	r2, 16386
 107 007c 5268     		ldr	r2, [r2, #4]
 108 007e 22F4FE02 		bic	r2, r2, #8323072
 109 0082 5A60     		str	r2, [r3, #4]
 237:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 238:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 239:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 240:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 241:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 242:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 243:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 244:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 245:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 246:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 247:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 248:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 110              		.loc 1 249 0
 111 0084 4FF48053 		mov	r3, #4096
 112 0088 C4F20203 		movt	r3, 16386
 113 008c 4FF41F02 		mov	r2, #10420224
 114 0090 9A60     		str	r2, [r3, #8]
 250:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 251:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 115              		.loc 1 252 0
 116 0092 4FF48053 		mov	r3, #4096
 117 0096 C4F20203 		movt	r3, 16386
 118 009a 0022     		movs	r2, #0
 119 009c DA62     		str	r2, [r3, #44]
 253:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 254:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 257:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 258:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 120              		.loc 1 258 0
 121 009e BD46     		mov	sp, r7
 122              		@ sp needed
 123 00a0 5DF8047B 		ldr	r7, [sp], #4
 124 00a4 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE29:
 128 00a6 00BF     		.section	.text.RCC_HSEConfig,"ax",%progbits
 129              		.align	2
 130              		.global	RCC_HSEConfig
 131              		.thumb
 132              		.thumb_func
 134              	RCC_HSEConfig:
 135              	.LFB30:
 259:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 260:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 261:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 262:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 263:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 264:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 265:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 266:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 267:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 268:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 269:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 270:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 271:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 136              		.loc 1 271 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 80B4     		push	{r7}
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 7, -4
 144 0002 83B0     		sub	sp, sp, #12
 145              		.cfi_def_cfa_offset 16
 146 0004 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 148 0006 7860     		str	r0, [r7, #4]
 272:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 273:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 274:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 275:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 276:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 149              		.loc 1 276 0
 150 0008 4FF48053 		mov	r3, #4096
 151 000c C4F20203 		movt	r3, 16386
 152 0010 4FF48052 		mov	r2, #4096
 153 0014 C4F20202 		movt	r2, 16386
 154 0018 1268     		ldr	r2, [r2]
 155 001a 22F48032 		bic	r2, r2, #65536
 156 001e 1A60     		str	r2, [r3]
 277:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 278:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 157              		.loc 1 278 0
 158 0020 4FF48053 		mov	r3, #4096
 159 0024 C4F20203 		movt	r3, 16386
 160 0028 4FF48052 		mov	r2, #4096
 161 002c C4F20202 		movt	r2, 16386
 162 0030 1268     		ldr	r2, [r2]
 163 0032 22F48022 		bic	r2, r2, #262144
 164 0036 1A60     		str	r2, [r3]
 279:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 280:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
 165              		.loc 1 280 0
 166 0038 7B68     		ldr	r3, [r7, #4]
 167 003a B3F5803F 		cmp	r3, #65536
 168 003e 03D0     		beq	.L4
 169 0040 B3F5802F 		cmp	r3, #262144
 170 0044 0DD0     		beq	.L5
 281:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 282:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 283:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 284:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 285:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 286:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 287:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 288:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 289:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 290:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 291:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 292:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
 293:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 171              		.loc 1 293 0
 172 0046 19E0     		b	.L2
 173              	.L4:
 284:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 174              		.loc 1 284 0
 175 0048 4FF48053 		mov	r3, #4096
 176 004c C4F20203 		movt	r3, 16386
 177 0050 4FF48052 		mov	r2, #4096
 178 0054 C4F20202 		movt	r2, 16386
 179 0058 1268     		ldr	r2, [r2]
 180 005a 42F48032 		orr	r2, r2, #65536
 181 005e 1A60     		str	r2, [r3]
 285:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 182              		.loc 1 285 0
 183 0060 0CE0     		b	.L2
 184              	.L5:
 289:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 185              		.loc 1 289 0
 186 0062 4FF48053 		mov	r3, #4096
 187 0066 C4F20203 		movt	r3, 16386
 188 006a 4FF48052 		mov	r2, #4096
 189 006e C4F20202 		movt	r2, 16386
 190 0072 1268     		ldr	r2, [r2]
 191 0074 42F4A022 		orr	r2, r2, #327680
 192 0078 1A60     		str	r2, [r3]
 290:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 193              		.loc 1 290 0
 194 007a 00BF     		nop
 195              	.L2:
 294:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 295:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 196              		.loc 1 295 0
 197 007c 0C37     		adds	r7, r7, #12
 198 007e BD46     		mov	sp, r7
 199              		@ sp needed
 200 0080 5DF8047B 		ldr	r7, [sp], #4
 201 0084 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE30:
 205 0086 00BF     		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 206              		.align	2
 207              		.global	RCC_WaitForHSEStartUp
 208              		.thumb
 209              		.thumb_func
 211              	RCC_WaitForHSEStartUp:
 212              	.LFB31:
 296:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 297:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 298:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 299:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 300:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 301:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 302:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 303:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 304:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 305:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 213              		.loc 1 305 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 80B5     		push	{r7, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 82B0     		sub	sp, sp, #8
 222              		.cfi_def_cfa_offset 16
 223 0004 00AF     		add	r7, sp, #0
 224              		.cfi_def_cfa_register 7
 306:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 225              		.loc 1 306 0
 226 0006 0023     		movs	r3, #0
 227 0008 3B60     		str	r3, [r7]
 307:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 228              		.loc 1 307 0
 229 000a 0023     		movs	r3, #0
 230 000c FB71     		strb	r3, [r7, #7]
 308:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 231              		.loc 1 308 0
 232 000e 0023     		movs	r3, #0
 233 0010 BB71     		strb	r3, [r7, #6]
 234              	.L9:
 309:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 310:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 311:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   do
 312:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 313:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 235              		.loc 1 313 0 discriminator 1
 236 0012 3120     		movs	r0, #49
 237 0014 FFF7FEFF 		bl	RCC_GetFlagStatus
 238 0018 0346     		mov	r3, r0
 239 001a BB71     		strb	r3, [r7, #6]
 314:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 240              		.loc 1 314 0 discriminator 1
 241 001c 3B68     		ldr	r3, [r7]
 242 001e 0133     		adds	r3, r3, #1
 243 0020 3B60     		str	r3, [r7]
 315:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 244              		.loc 1 315 0 discriminator 1
 245 0022 3B68     		ldr	r3, [r7]
 246 0024 B3F5A06F 		cmp	r3, #1280
 247 0028 02D0     		beq	.L8
 248 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 249 002c 002B     		cmp	r3, #0
 250 002e F0D0     		beq	.L9
 251              	.L8:
 316:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 317:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 252              		.loc 1 317 0
 253 0030 3120     		movs	r0, #49
 254 0032 FFF7FEFF 		bl	RCC_GetFlagStatus
 255 0036 0346     		mov	r3, r0
 256 0038 002B     		cmp	r3, #0
 257 003a 02D0     		beq	.L10
 318:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 319:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 258              		.loc 1 319 0
 259 003c 0123     		movs	r3, #1
 260 003e FB71     		strb	r3, [r7, #7]
 261 0040 01E0     		b	.L11
 262              	.L10:
 320:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 321:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
 322:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 323:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     status = ERROR;
 263              		.loc 1 323 0
 264 0042 0023     		movs	r3, #0
 265 0044 FB71     		strb	r3, [r7, #7]
 266              	.L11:
 324:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }  
 325:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return (status);
 267              		.loc 1 325 0
 268 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 326:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 269              		.loc 1 326 0
 270 0048 1846     		mov	r0, r3
 271 004a 0837     		adds	r7, r7, #8
 272 004c BD46     		mov	sp, r7
 273              		@ sp needed
 274 004e 80BD     		pop	{r7, pc}
 275              		.cfi_endproc
 276              	.LFE31:
 278              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 279              		.align	2
 280              		.global	RCC_AdjustHSICalibrationValue
 281              		.thumb
 282              		.thumb_func
 284              	RCC_AdjustHSICalibrationValue:
 285              	.LFB32:
 327:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 328:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 329:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 330:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 331:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 332:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 333:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 334:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 335:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 286              		.loc 1 335 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 16
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291 0000 80B4     		push	{r7}
 292              		.cfi_def_cfa_offset 4
 293              		.cfi_offset 7, -4
 294 0002 85B0     		sub	sp, sp, #20
 295              		.cfi_def_cfa_offset 24
 296 0004 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 298 0006 0346     		mov	r3, r0
 299 0008 FB71     		strb	r3, [r7, #7]
 336:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 300              		.loc 1 336 0
 301 000a 0023     		movs	r3, #0
 302 000c FB60     		str	r3, [r7, #12]
 337:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 338:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 339:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 303              		.loc 1 339 0
 304 000e 4FF48053 		mov	r3, #4096
 305 0012 C4F20203 		movt	r3, 16386
 306 0016 1B68     		ldr	r3, [r3]
 307 0018 FB60     		str	r3, [r7, #12]
 340:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 308              		.loc 1 341 0
 309 001a FB68     		ldr	r3, [r7, #12]
 310 001c 23F0F803 		bic	r3, r3, #248
 311 0020 FB60     		str	r3, [r7, #12]
 342:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 343:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 312              		.loc 1 343 0
 313 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 314 0024 DB00     		lsls	r3, r3, #3
 315 0026 FA68     		ldr	r2, [r7, #12]
 316 0028 1343     		orrs	r3, r3, r2
 317 002a FB60     		str	r3, [r7, #12]
 344:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 345:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 318              		.loc 1 345 0
 319 002c 4FF48053 		mov	r3, #4096
 320 0030 C4F20203 		movt	r3, 16386
 321 0034 FA68     		ldr	r2, [r7, #12]
 322 0036 1A60     		str	r2, [r3]
 346:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 323              		.loc 1 346 0
 324 0038 1437     		adds	r7, r7, #20
 325 003a BD46     		mov	sp, r7
 326              		@ sp needed
 327 003c 5DF8047B 		ldr	r7, [sp], #4
 328 0040 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE32:
 332 0042 00BF     		.section	.text.RCC_HSICmd,"ax",%progbits
 333              		.align	2
 334              		.global	RCC_HSICmd
 335              		.thumb
 336              		.thumb_func
 338              	RCC_HSICmd:
 339              	.LFB33:
 347:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 348:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 349:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 350:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 351:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 352:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 353:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 354:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 355:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 340              		.loc 1 355 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 7, -4
 348 0002 83B0     		sub	sp, sp, #12
 349              		.cfi_def_cfa_offset 16
 350 0004 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 352 0006 0346     		mov	r3, r0
 353 0008 FB71     		strb	r3, [r7, #7]
 356:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 357:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 358:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 354              		.loc 1 358 0
 355 000a 0023     		movs	r3, #0
 356 000c C4F24223 		movt	r3, 16962
 357 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 358 0012 1A60     		str	r2, [r3]
 359:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 359              		.loc 1 359 0
 360 0014 0C37     		adds	r7, r7, #12
 361 0016 BD46     		mov	sp, r7
 362              		@ sp needed
 363 0018 5DF8047B 		ldr	r7, [sp], #4
 364 001c 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE33:
 368 001e 00BF     		.section	.text.RCC_PLLConfig,"ax",%progbits
 369              		.align	2
 370              		.global	RCC_PLLConfig
 371              		.thumb
 372              		.thumb_func
 374              	RCC_PLLConfig:
 375              	.LFB34:
 360:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 361:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 362:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 363:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 364:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 365:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 366:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 367:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 368:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 369:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 370:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 371:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 372:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 373:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 374:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 375:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 376:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 377:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 378:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 379:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 376              		.loc 1 379 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 16
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 85B0     		sub	sp, sp, #20
 385              		.cfi_def_cfa_offset 24
 386 0004 00AF     		add	r7, sp, #0
 387              		.cfi_def_cfa_register 7
 388 0006 7860     		str	r0, [r7, #4]
 389 0008 3960     		str	r1, [r7]
 380:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 390              		.loc 1 380 0
 391 000a 0023     		movs	r3, #0
 392 000c FB60     		str	r3, [r7, #12]
 381:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 382:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 383:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 384:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 385:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 386:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 393              		.loc 1 386 0
 394 000e 4FF48053 		mov	r3, #4096
 395 0012 C4F20203 		movt	r3, 16386
 396 0016 5B68     		ldr	r3, [r3, #4]
 397 0018 FB60     		str	r3, [r7, #12]
 387:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 388:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 398              		.loc 1 388 0
 399 001a FB68     		ldr	r3, [r7, #12]
 400 001c 23F47413 		bic	r3, r3, #3997696
 401 0020 FB60     		str	r3, [r7, #12]
 389:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 390:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 402              		.loc 1 390 0
 403 0022 7A68     		ldr	r2, [r7, #4]
 404 0024 3B68     		ldr	r3, [r7]
 405 0026 1343     		orrs	r3, r3, r2
 406 0028 FA68     		ldr	r2, [r7, #12]
 407 002a 1343     		orrs	r3, r3, r2
 408 002c FB60     		str	r3, [r7, #12]
 391:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 392:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 409              		.loc 1 392 0
 410 002e 4FF48053 		mov	r3, #4096
 411 0032 C4F20203 		movt	r3, 16386
 412 0036 FA68     		ldr	r2, [r7, #12]
 413 0038 5A60     		str	r2, [r3, #4]
 393:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 414              		.loc 1 393 0
 415 003a 1437     		adds	r7, r7, #20
 416 003c BD46     		mov	sp, r7
 417              		@ sp needed
 418 003e 5DF8047B 		ldr	r7, [sp], #4
 419 0042 7047     		bx	lr
 420              		.cfi_endproc
 421              	.LFE34:
 423              		.section	.text.RCC_PLLCmd,"ax",%progbits
 424              		.align	2
 425              		.global	RCC_PLLCmd
 426              		.thumb
 427              		.thumb_func
 429              	RCC_PLLCmd:
 430              	.LFB35:
 394:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 395:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 396:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 397:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 398:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 399:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 400:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 401:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 402:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 431              		.loc 1 402 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 0000 80B4     		push	{r7}
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 7, -4
 439 0002 83B0     		sub	sp, sp, #12
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 443 0006 0346     		mov	r3, r0
 444 0008 FB71     		strb	r3, [r7, #7]
 403:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 404:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 405:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 406:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 445              		.loc 1 406 0
 446 000a 6023     		movs	r3, #96
 447 000c C4F24223 		movt	r3, 16962
 448 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 449 0012 1A60     		str	r2, [r3]
 407:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 450              		.loc 1 407 0
 451 0014 0C37     		adds	r7, r7, #12
 452 0016 BD46     		mov	sp, r7
 453              		@ sp needed
 454 0018 5DF8047B 		ldr	r7, [sp], #4
 455 001c 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE35:
 459 001e 00BF     		.section	.text.RCC_PREDIV1Config,"ax",%progbits
 460              		.align	2
 461              		.global	RCC_PREDIV1Config
 462              		.thumb
 463              		.thumb_func
 465              	RCC_PREDIV1Config:
 466              	.LFB36:
 408:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 409:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 410:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 411:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 412:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 413:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 414:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 415:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     devices.
 416:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 417:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 418:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 419:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 420:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 421:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 422:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 423:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 424:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 425:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 426:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 427:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 467              		.loc 1 427 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 16
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472 0000 80B4     		push	{r7}
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 85B0     		sub	sp, sp, #20
 476              		.cfi_def_cfa_offset 24
 477 0004 00AF     		add	r7, sp, #0
 478              		.cfi_def_cfa_register 7
 479 0006 7860     		str	r0, [r7, #4]
 480 0008 3960     		str	r1, [r7]
 428:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 481              		.loc 1 428 0
 482 000a 0023     		movs	r3, #0
 483 000c FB60     		str	r3, [r7, #12]
 429:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 430:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 431:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 432:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 433:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 434:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 484              		.loc 1 434 0
 485 000e 4FF48053 		mov	r3, #4096
 486 0012 C4F20203 		movt	r3, 16386
 487 0016 DB6A     		ldr	r3, [r3, #44]
 488 0018 FB60     		str	r3, [r7, #12]
 435:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 436:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 489              		.loc 1 436 0
 490 001a FB68     		ldr	r3, [r7, #12]
 491 001c 23F48033 		bic	r3, r3, #65536
 492 0020 23F00F03 		bic	r3, r3, #15
 493 0024 FB60     		str	r3, [r7, #12]
 437:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 438:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 494              		.loc 1 438 0
 495 0026 7A68     		ldr	r2, [r7, #4]
 496 0028 3B68     		ldr	r3, [r7]
 497 002a 1343     		orrs	r3, r3, r2
 498 002c FA68     		ldr	r2, [r7, #12]
 499 002e 1343     		orrs	r3, r3, r2
 500 0030 FB60     		str	r3, [r7, #12]
 439:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 440:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 501              		.loc 1 440 0
 502 0032 4FF48053 		mov	r3, #4096
 503 0036 C4F20203 		movt	r3, 16386
 504 003a FA68     		ldr	r2, [r7, #12]
 505 003c DA62     		str	r2, [r3, #44]
 441:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 506              		.loc 1 441 0
 507 003e 1437     		adds	r7, r7, #20
 508 0040 BD46     		mov	sp, r7
 509              		@ sp needed
 510 0042 5DF8047B 		ldr	r7, [sp], #4
 511 0046 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE36:
 515              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 516              		.align	2
 517              		.global	RCC_SYSCLKConfig
 518              		.thumb
 519              		.thumb_func
 521              	RCC_SYSCLKConfig:
 522              	.LFB37:
 442:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 443:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 444:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 445:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 446:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 447:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 448:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 449:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 450:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 451:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 452:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 453:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 454:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 455:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 456:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 457:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 458:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 459:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 460:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 461:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 462:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 463:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 464:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 465:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 466:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 467:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 468:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 469:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 470:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 471:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 472:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 473:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 474:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 475:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 476:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 477:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 478:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 479:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 480:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 481:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 482:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 483:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 484:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 485:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 486:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 487:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 488:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 489:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 490:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 491:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 492:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 493:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 494:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 495:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 496:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 497:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 498:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 499:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 500:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 501:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 502:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 503:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 504:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 505:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 506:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 507:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 508:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 510:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 511:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 512:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 513:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 514:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 515:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 516:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 517:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 518:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 519:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 520:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 521:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 522:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 523:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 524:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 525:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 526:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 527:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 528:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 529:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 530:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 531:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 532:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 533:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 534:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 535:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 536:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 537:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 538:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 539:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 540:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 541:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 542:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 543:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 544:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 545:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 546:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 547:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 548:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 549:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 550:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 551:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 552:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 553:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 554:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 555:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 556:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 557:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 558:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 559:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 560:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 561:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 562:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 563:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 564:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 565:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 523              		.loc 1 565 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 16
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0000 80B4     		push	{r7}
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 0002 85B0     		sub	sp, sp, #20
 532              		.cfi_def_cfa_offset 24
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 7860     		str	r0, [r7, #4]
 566:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 536              		.loc 1 566 0
 537 0008 0023     		movs	r3, #0
 538 000a FB60     		str	r3, [r7, #12]
 567:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 568:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 569:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 539              		.loc 1 569 0
 540 000c 4FF48053 		mov	r3, #4096
 541 0010 C4F20203 		movt	r3, 16386
 542 0014 5B68     		ldr	r3, [r3, #4]
 543 0016 FB60     		str	r3, [r7, #12]
 570:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 571:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 544              		.loc 1 571 0
 545 0018 FB68     		ldr	r3, [r7, #12]
 546 001a 23F00303 		bic	r3, r3, #3
 547 001e FB60     		str	r3, [r7, #12]
 572:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 573:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 548              		.loc 1 573 0
 549 0020 FA68     		ldr	r2, [r7, #12]
 550 0022 7B68     		ldr	r3, [r7, #4]
 551 0024 1343     		orrs	r3, r3, r2
 552 0026 FB60     		str	r3, [r7, #12]
 574:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 575:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 553              		.loc 1 575 0
 554 0028 4FF48053 		mov	r3, #4096
 555 002c C4F20203 		movt	r3, 16386
 556 0030 FA68     		ldr	r2, [r7, #12]
 557 0032 5A60     		str	r2, [r3, #4]
 576:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 558              		.loc 1 576 0
 559 0034 1437     		adds	r7, r7, #20
 560 0036 BD46     		mov	sp, r7
 561              		@ sp needed
 562 0038 5DF8047B 		ldr	r7, [sp], #4
 563 003c 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE37:
 567 003e 00BF     		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 568              		.align	2
 569              		.global	RCC_GetSYSCLKSource
 570              		.thumb
 571              		.thumb_func
 573              	RCC_GetSYSCLKSource:
 574              	.LFB38:
 577:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 578:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 579:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 580:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 581:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 582:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   be one of the following:
 583:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 584:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 585:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 586:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 587:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 588:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 575              		.loc 1 588 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 0000 80B4     		push	{r7}
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 7, -4
 583 0002 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 589:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 585              		.loc 1 589 0
 586 0004 4FF48053 		mov	r3, #4096
 587 0008 C4F20203 		movt	r3, 16386
 588 000c 5B68     		ldr	r3, [r3, #4]
 589 000e DBB2     		uxtb	r3, r3
 590 0010 03F00C03 		and	r3, r3, #12
 591 0014 DBB2     		uxtb	r3, r3
 590:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 592              		.loc 1 590 0
 593 0016 1846     		mov	r0, r3
 594 0018 BD46     		mov	sp, r7
 595              		@ sp needed
 596 001a 5DF8047B 		ldr	r7, [sp], #4
 597 001e 7047     		bx	lr
 598              		.cfi_endproc
 599              	.LFE38:
 601              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 602              		.align	2
 603              		.global	RCC_HCLKConfig
 604              		.thumb
 605              		.thumb_func
 607              	RCC_HCLKConfig:
 608              	.LFB39:
 591:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 592:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 593:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 594:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 595:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 596:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 597:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 598:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 599:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 600:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 601:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 602:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 603:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 604:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 605:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 606:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 607:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 608:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 609:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 609              		.loc 1 609 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 16
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614 0000 80B4     		push	{r7}
 615              		.cfi_def_cfa_offset 4
 616              		.cfi_offset 7, -4
 617 0002 85B0     		sub	sp, sp, #20
 618              		.cfi_def_cfa_offset 24
 619 0004 00AF     		add	r7, sp, #0
 620              		.cfi_def_cfa_register 7
 621 0006 7860     		str	r0, [r7, #4]
 610:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 622              		.loc 1 610 0
 623 0008 0023     		movs	r3, #0
 624 000a FB60     		str	r3, [r7, #12]
 611:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 612:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 613:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 625              		.loc 1 613 0
 626 000c 4FF48053 		mov	r3, #4096
 627 0010 C4F20203 		movt	r3, 16386
 628 0014 5B68     		ldr	r3, [r3, #4]
 629 0016 FB60     		str	r3, [r7, #12]
 614:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 615:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 630              		.loc 1 615 0
 631 0018 FB68     		ldr	r3, [r7, #12]
 632 001a 23F0F003 		bic	r3, r3, #240
 633 001e FB60     		str	r3, [r7, #12]
 616:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 617:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 634              		.loc 1 617 0
 635 0020 FA68     		ldr	r2, [r7, #12]
 636 0022 7B68     		ldr	r3, [r7, #4]
 637 0024 1343     		orrs	r3, r3, r2
 638 0026 FB60     		str	r3, [r7, #12]
 618:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 619:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 639              		.loc 1 619 0
 640 0028 4FF48053 		mov	r3, #4096
 641 002c C4F20203 		movt	r3, 16386
 642 0030 FA68     		ldr	r2, [r7, #12]
 643 0032 5A60     		str	r2, [r3, #4]
 620:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 644              		.loc 1 620 0
 645 0034 1437     		adds	r7, r7, #20
 646 0036 BD46     		mov	sp, r7
 647              		@ sp needed
 648 0038 5DF8047B 		ldr	r7, [sp], #4
 649 003c 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE39:
 653 003e 00BF     		.section	.text.RCC_PCLK1Config,"ax",%progbits
 654              		.align	2
 655              		.global	RCC_PCLK1Config
 656              		.thumb
 657              		.thumb_func
 659              	RCC_PCLK1Config:
 660              	.LFB40:
 621:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 622:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 623:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 624:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 625:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 626:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 627:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 628:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 629:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 630:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 631:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 632:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 633:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 634:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 635:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 661              		.loc 1 635 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 16
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666 0000 80B4     		push	{r7}
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 85B0     		sub	sp, sp, #20
 670              		.cfi_def_cfa_offset 24
 671 0004 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 673 0006 7860     		str	r0, [r7, #4]
 636:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 674              		.loc 1 636 0
 675 0008 0023     		movs	r3, #0
 676 000a FB60     		str	r3, [r7, #12]
 637:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 638:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 639:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 677              		.loc 1 639 0
 678 000c 4FF48053 		mov	r3, #4096
 679 0010 C4F20203 		movt	r3, 16386
 680 0014 5B68     		ldr	r3, [r3, #4]
 681 0016 FB60     		str	r3, [r7, #12]
 640:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 641:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 682              		.loc 1 641 0
 683 0018 FB68     		ldr	r3, [r7, #12]
 684 001a 23F4E063 		bic	r3, r3, #1792
 685 001e FB60     		str	r3, [r7, #12]
 642:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 643:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 686              		.loc 1 643 0
 687 0020 FA68     		ldr	r2, [r7, #12]
 688 0022 7B68     		ldr	r3, [r7, #4]
 689 0024 1343     		orrs	r3, r3, r2
 690 0026 FB60     		str	r3, [r7, #12]
 644:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 645:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 691              		.loc 1 645 0
 692 0028 4FF48053 		mov	r3, #4096
 693 002c C4F20203 		movt	r3, 16386
 694 0030 FA68     		ldr	r2, [r7, #12]
 695 0032 5A60     		str	r2, [r3, #4]
 646:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 696              		.loc 1 646 0
 697 0034 1437     		adds	r7, r7, #20
 698 0036 BD46     		mov	sp, r7
 699              		@ sp needed
 700 0038 5DF8047B 		ldr	r7, [sp], #4
 701 003c 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE40:
 705 003e 00BF     		.section	.text.RCC_PCLK2Config,"ax",%progbits
 706              		.align	2
 707              		.global	RCC_PCLK2Config
 708              		.thumb
 709              		.thumb_func
 711              	RCC_PCLK2Config:
 712              	.LFB41:
 647:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 648:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 649:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 650:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 651:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 652:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 653:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 654:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 655:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 656:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 657:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 658:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 659:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 660:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 661:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 713              		.loc 1 661 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 16
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718 0000 80B4     		push	{r7}
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 7, -4
 721 0002 85B0     		sub	sp, sp, #20
 722              		.cfi_def_cfa_offset 24
 723 0004 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 725 0006 7860     		str	r0, [r7, #4]
 662:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 726              		.loc 1 662 0
 727 0008 0023     		movs	r3, #0
 728 000a FB60     		str	r3, [r7, #12]
 663:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 664:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 665:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 729              		.loc 1 665 0
 730 000c 4FF48053 		mov	r3, #4096
 731 0010 C4F20203 		movt	r3, 16386
 732 0014 5B68     		ldr	r3, [r3, #4]
 733 0016 FB60     		str	r3, [r7, #12]
 666:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 667:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 734              		.loc 1 667 0
 735 0018 FB68     		ldr	r3, [r7, #12]
 736 001a 23F46053 		bic	r3, r3, #14336
 737 001e FB60     		str	r3, [r7, #12]
 668:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 669:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 738              		.loc 1 669 0
 739 0020 7B68     		ldr	r3, [r7, #4]
 740 0022 DB00     		lsls	r3, r3, #3
 741 0024 FA68     		ldr	r2, [r7, #12]
 742 0026 1343     		orrs	r3, r3, r2
 743 0028 FB60     		str	r3, [r7, #12]
 670:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 671:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 744              		.loc 1 671 0
 745 002a 4FF48053 		mov	r3, #4096
 746 002e C4F20203 		movt	r3, 16386
 747 0032 FA68     		ldr	r2, [r7, #12]
 748 0034 5A60     		str	r2, [r3, #4]
 672:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 749              		.loc 1 672 0
 750 0036 1437     		adds	r7, r7, #20
 751 0038 BD46     		mov	sp, r7
 752              		@ sp needed
 753 003a 5DF8047B 		ldr	r7, [sp], #4
 754 003e 7047     		bx	lr
 755              		.cfi_endproc
 756              	.LFE41:
 758              		.section	.text.RCC_ITConfig,"ax",%progbits
 759              		.align	2
 760              		.global	RCC_ITConfig
 761              		.thumb
 762              		.thumb_func
 764              	RCC_ITConfig:
 765              	.LFB42:
 673:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 674:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 675:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 676:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 677:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
 678:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 679:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values        
 680:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 681:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 682:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 683:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 684:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 685:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 686:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 687:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
 688:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 689:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values        
 690:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 691:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 692:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 693:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 694:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 695:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *       
 696:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 697:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 698:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 699:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 700:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 701:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 766              		.loc 1 701 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 8
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771 0000 80B4     		push	{r7}
 772              		.cfi_def_cfa_offset 4
 773              		.cfi_offset 7, -4
 774 0002 83B0     		sub	sp, sp, #12
 775              		.cfi_def_cfa_offset 16
 776 0004 00AF     		add	r7, sp, #0
 777              		.cfi_def_cfa_register 7
 778 0006 0246     		mov	r2, r0
 779 0008 0B46     		mov	r3, r1
 780 000a FA71     		strb	r2, [r7, #7]
 781 000c BB71     		strb	r3, [r7, #6]
 702:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 703:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 704:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 782              		.loc 1 705 0
 783 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 784 0010 002B     		cmp	r3, #0
 785 0012 0ED0     		beq	.L25
 706:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 707:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 708:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 786              		.loc 1 708 0
 787 0014 41F20903 		movw	r3, #4105
 788 0018 C4F20203 		movt	r3, 16386
 789 001c 41F20902 		movw	r2, #4105
 790 0020 C4F20202 		movt	r2, 16386
 791 0024 1278     		ldrb	r2, [r2]
 792 0026 D1B2     		uxtb	r1, r2
 793 0028 FA79     		ldrb	r2, [r7, #7]
 794 002a 0A43     		orrs	r2, r2, r1
 795 002c D2B2     		uxtb	r2, r2
 796 002e 1A70     		strb	r2, [r3]
 797 0030 0FE0     		b	.L24
 798              	.L25:
 709:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 710:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
 711:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 712:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 713:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 799              		.loc 1 713 0
 800 0032 41F20903 		movw	r3, #4105
 801 0036 C4F20203 		movt	r3, 16386
 802 003a 41F20902 		movw	r2, #4105
 803 003e C4F20202 		movt	r2, 16386
 804 0042 1278     		ldrb	r2, [r2]
 805 0044 D1B2     		uxtb	r1, r2
 806 0046 FA79     		ldrb	r2, [r7, #7]
 807 0048 D243     		mvns	r2, r2
 808 004a D2B2     		uxtb	r2, r2
 809 004c 0A40     		ands	r2, r2, r1
 810 004e D2B2     		uxtb	r2, r2
 811 0050 1A70     		strb	r2, [r3]
 812              	.L24:
 714:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 715:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 813              		.loc 1 715 0
 814 0052 0C37     		adds	r7, r7, #12
 815 0054 BD46     		mov	sp, r7
 816              		@ sp needed
 817 0056 5DF8047B 		ldr	r7, [sp], #4
 818 005a 7047     		bx	lr
 819              		.cfi_endproc
 820              	.LFE42:
 822              		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 823              		.align	2
 824              		.global	RCC_USBCLKConfig
 825              		.thumb
 826              		.thumb_func
 828              	RCC_USBCLKConfig:
 829              	.LFB43:
 716:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 717:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 718:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 719:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 720:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 721:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 722:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 723:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 724:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *                                     clock source
 725:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 726:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 727:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 728:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 729:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 830              		.loc 1 729 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 8
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835 0000 80B4     		push	{r7}
 836              		.cfi_def_cfa_offset 4
 837              		.cfi_offset 7, -4
 838 0002 83B0     		sub	sp, sp, #12
 839              		.cfi_def_cfa_offset 16
 840 0004 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 842 0006 7860     		str	r0, [r7, #4]
 730:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 731:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 732:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 733:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 843              		.loc 1 733 0
 844 0008 D823     		movs	r3, #216
 845 000a C4F24223 		movt	r3, 16962
 846 000e 7A68     		ldr	r2, [r7, #4]
 847 0010 1A60     		str	r2, [r3]
 734:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 848              		.loc 1 734 0
 849 0012 0C37     		adds	r7, r7, #12
 850 0014 BD46     		mov	sp, r7
 851              		@ sp needed
 852 0016 5DF8047B 		ldr	r7, [sp], #4
 853 001a 7047     		bx	lr
 854              		.cfi_endproc
 855              	.LFE43:
 857              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 858              		.align	2
 859              		.global	RCC_ADCCLKConfig
 860              		.thumb
 861              		.thumb_func
 863              	RCC_ADCCLKConfig:
 864              	.LFB44:
 735:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 736:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 737:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 738:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 739:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 740:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 741:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 742:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 743:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 745:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 746:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 747:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 748:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 749:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 750:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 751:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 752:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 753:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 754:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 755:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 756:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 757:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 758:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 759:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 760:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 761:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 762:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 763:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 764:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 765:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 766:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 767:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 865              		.loc 1 767 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 16
 868              		@ frame_needed = 1, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870 0000 80B4     		push	{r7}
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 85B0     		sub	sp, sp, #20
 874              		.cfi_def_cfa_offset 24
 875 0004 00AF     		add	r7, sp, #0
 876              		.cfi_def_cfa_register 7
 877 0006 7860     		str	r0, [r7, #4]
 768:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 878              		.loc 1 768 0
 879 0008 0023     		movs	r3, #0
 880 000a FB60     		str	r3, [r7, #12]
 769:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 770:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 771:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 881              		.loc 1 771 0
 882 000c 4FF48053 		mov	r3, #4096
 883 0010 C4F20203 		movt	r3, 16386
 884 0014 5B68     		ldr	r3, [r3, #4]
 885 0016 FB60     		str	r3, [r7, #12]
 772:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 773:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 886              		.loc 1 773 0
 887 0018 FB68     		ldr	r3, [r7, #12]
 888 001a 23F44043 		bic	r3, r3, #49152
 889 001e FB60     		str	r3, [r7, #12]
 774:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 775:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 890              		.loc 1 775 0
 891 0020 FA68     		ldr	r2, [r7, #12]
 892 0022 7B68     		ldr	r3, [r7, #4]
 893 0024 1343     		orrs	r3, r3, r2
 894 0026 FB60     		str	r3, [r7, #12]
 776:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 777:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 895              		.loc 1 777 0
 896 0028 4FF48053 		mov	r3, #4096
 897 002c C4F20203 		movt	r3, 16386
 898 0030 FA68     		ldr	r2, [r7, #12]
 899 0032 5A60     		str	r2, [r3, #4]
 778:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 900              		.loc 1 778 0
 901 0034 1437     		adds	r7, r7, #20
 902 0036 BD46     		mov	sp, r7
 903              		@ sp needed
 904 0038 5DF8047B 		ldr	r7, [sp], #4
 905 003c 7047     		bx	lr
 906              		.cfi_endproc
 907              	.LFE44:
 909 003e 00BF     		.section	.text.RCC_LSEConfig,"ax",%progbits
 910              		.align	2
 911              		.global	RCC_LSEConfig
 912              		.thumb
 913              		.thumb_func
 915              	RCC_LSEConfig:
 916              	.LFB45:
 779:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 780:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 781:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 782:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 783:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 784:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 785:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 786:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 787:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 788:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 789:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 790:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 791:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 792:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 793:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 794:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 795:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 796:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 797:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 798:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 799:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 800:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 801:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 802:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 803:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 804:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 805:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 806:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 807:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 808:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 809:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 810:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 811:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 812:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 813:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 814:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 815:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 816:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 817:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 818:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 819:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 820:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 821:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 822:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 823:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 824:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 825:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 826:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 827:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 828:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 829:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 830:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 917              		.loc 1 830 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922 0000 80B4     		push	{r7}
 923              		.cfi_def_cfa_offset 4
 924              		.cfi_offset 7, -4
 925 0002 83B0     		sub	sp, sp, #12
 926              		.cfi_def_cfa_offset 16
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 929 0006 0346     		mov	r3, r0
 930 0008 FB71     		strb	r3, [r7, #7]
 831:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 832:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 833:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 834:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 835:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 931              		.loc 1 835 0
 932 000a 4FF48153 		mov	r3, #4128
 933 000e C4F20203 		movt	r3, 16386
 934 0012 0022     		movs	r2, #0
 935 0014 1A70     		strb	r2, [r3]
 836:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 837:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 936              		.loc 1 837 0
 937 0016 4FF48153 		mov	r3, #4128
 938 001a C4F20203 		movt	r3, 16386
 939 001e 0022     		movs	r2, #0
 940 0020 1A70     		strb	r2, [r3]
 838:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 839:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 941              		.loc 1 839 0
 942 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 943 0024 012B     		cmp	r3, #1
 944 0026 02D0     		beq	.L31
 945 0028 042B     		cmp	r3, #4
 946 002a 07D0     		beq	.L32
 840:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 841:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 842:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 843:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 844:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 845:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 846:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 847:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 848:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 849:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;            
 850:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 851:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
 852:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;      
 947              		.loc 1 852 0
 948 002c 0DE0     		b	.L29
 949              	.L31:
 843:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 950              		.loc 1 843 0
 951 002e 4FF48153 		mov	r3, #4128
 952 0032 C4F20203 		movt	r3, 16386
 953 0036 0122     		movs	r2, #1
 954 0038 1A70     		strb	r2, [r3]
 844:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 955              		.loc 1 844 0
 956 003a 06E0     		b	.L29
 957              	.L32:
 848:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;            
 958              		.loc 1 848 0
 959 003c 4FF48153 		mov	r3, #4128
 960 0040 C4F20203 		movt	r3, 16386
 961 0044 0522     		movs	r2, #5
 962 0046 1A70     		strb	r2, [r3]
 849:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 963              		.loc 1 849 0
 964 0048 00BF     		nop
 965              	.L29:
 853:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 854:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 966              		.loc 1 854 0
 967 004a 0C37     		adds	r7, r7, #12
 968 004c BD46     		mov	sp, r7
 969              		@ sp needed
 970 004e 5DF8047B 		ldr	r7, [sp], #4
 971 0052 7047     		bx	lr
 972              		.cfi_endproc
 973              	.LFE45:
 975              		.section	.text.RCC_LSICmd,"ax",%progbits
 976              		.align	2
 977              		.global	RCC_LSICmd
 978              		.thumb
 979              		.thumb_func
 981              	RCC_LSICmd:
 982              	.LFB46:
 855:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 856:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 857:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 858:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 859:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 860:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 861:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 862:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 863:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 983              		.loc 1 863 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 988 0000 80B4     		push	{r7}
 989              		.cfi_def_cfa_offset 4
 990              		.cfi_offset 7, -4
 991 0002 83B0     		sub	sp, sp, #12
 992              		.cfi_def_cfa_offset 16
 993 0004 00AF     		add	r7, sp, #0
 994              		.cfi_def_cfa_register 7
 995 0006 0346     		mov	r3, r0
 996 0008 FB71     		strb	r3, [r7, #7]
 864:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 865:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 866:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 997              		.loc 1 866 0
 998 000a 4FF49063 		mov	r3, #1152
 999 000e C4F24223 		movt	r3, 16962
 1000 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1001 0014 1A60     		str	r2, [r3]
 867:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1002              		.loc 1 867 0
 1003 0016 0C37     		adds	r7, r7, #12
 1004 0018 BD46     		mov	sp, r7
 1005              		@ sp needed
 1006 001a 5DF8047B 		ldr	r7, [sp], #4
 1007 001e 7047     		bx	lr
 1008              		.cfi_endproc
 1009              	.LFE46:
 1011              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1012              		.align	2
 1013              		.global	RCC_RTCCLKConfig
 1014              		.thumb
 1015              		.thumb_func
 1017              	RCC_RTCCLKConfig:
 1018              	.LFB47:
 868:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 869:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 870:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 871:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 872:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 873:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 874:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 875:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 876:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 877:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 878:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 879:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 880:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1019              		.loc 1 880 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 8
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024 0000 80B4     		push	{r7}
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 7, -4
 1027 0002 83B0     		sub	sp, sp, #12
 1028              		.cfi_def_cfa_offset 16
 1029 0004 00AF     		add	r7, sp, #0
 1030              		.cfi_def_cfa_register 7
 1031 0006 7860     		str	r0, [r7, #4]
 881:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 882:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 883:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 884:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1032              		.loc 1 884 0
 1033 0008 4FF48053 		mov	r3, #4096
 1034 000c C4F20203 		movt	r3, 16386
 1035 0010 4FF48052 		mov	r2, #4096
 1036 0014 C4F20202 		movt	r2, 16386
 1037 0018 116A     		ldr	r1, [r2, #32]
 1038 001a 7A68     		ldr	r2, [r7, #4]
 1039 001c 0A43     		orrs	r2, r2, r1
 1040 001e 1A62     		str	r2, [r3, #32]
 885:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1041              		.loc 1 885 0
 1042 0020 0C37     		adds	r7, r7, #12
 1043 0022 BD46     		mov	sp, r7
 1044              		@ sp needed
 1045 0024 5DF8047B 		ldr	r7, [sp], #4
 1046 0028 7047     		bx	lr
 1047              		.cfi_endproc
 1048              	.LFE47:
 1050 002a 00BF     		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1051              		.align	2
 1052              		.global	RCC_RTCCLKCmd
 1053              		.thumb
 1054              		.thumb_func
 1056              	RCC_RTCCLKCmd:
 1057              	.LFB48:
 886:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 887:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 888:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 889:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 890:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 891:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 892:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 893:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 894:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1058              		.loc 1 894 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 8
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062              		@ link register save eliminated.
 1063 0000 80B4     		push	{r7}
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 0002 83B0     		sub	sp, sp, #12
 1067              		.cfi_def_cfa_offset 16
 1068 0004 00AF     		add	r7, sp, #0
 1069              		.cfi_def_cfa_register 7
 1070 0006 0346     		mov	r3, r0
 1071 0008 FB71     		strb	r3, [r7, #7]
 895:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 896:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 897:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1072              		.loc 1 897 0
 1073 000a 40F23C43 		movw	r3, #1084
 1074 000e C4F24223 		movt	r3, 16962
 1075 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1076 0014 1A60     		str	r2, [r3]
 898:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1077              		.loc 1 898 0
 1078 0016 0C37     		adds	r7, r7, #12
 1079 0018 BD46     		mov	sp, r7
 1080              		@ sp needed
 1081 001a 5DF8047B 		ldr	r7, [sp], #4
 1082 001e 7047     		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE48:
 1086              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 1087              		.align	2
 1088              		.global	RCC_GetClocksFreq
 1089              		.thumb
 1090              		.thumb_func
 1092              	RCC_GetClocksFreq:
 1093              	.LFB49:
 899:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 900:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 901:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 902:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 903:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 904:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 905:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 906:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 907:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 908:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 909:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1094              		.loc 1 909 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 32
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 80B4     		push	{r7}
 1100              		.cfi_def_cfa_offset 4
 1101              		.cfi_offset 7, -4
 1102 0002 89B0     		sub	sp, sp, #36
 1103              		.cfi_def_cfa_offset 40
 1104 0004 00AF     		add	r7, sp, #0
 1105              		.cfi_def_cfa_register 7
 1106 0006 7860     		str	r0, [r7, #4]
 910:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 1107              		.loc 1 910 0
 1108 0008 0023     		movs	r3, #0
 1109 000a FB61     		str	r3, [r7, #28]
 1110 000c 0023     		movs	r3, #0
 1111 000e BB61     		str	r3, [r7, #24]
 1112 0010 0023     		movs	r3, #0
 1113 0012 7B61     		str	r3, [r7, #20]
 1114 0014 0023     		movs	r3, #0
 1115 0016 3B61     		str	r3, [r7, #16]
 911:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 912:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 913:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 914:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 915:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 916:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 917:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 1116              		.loc 1 917 0
 1117 0018 0023     		movs	r3, #0
 1118 001a FB60     		str	r3, [r7, #12]
 918:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 919:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     
 920:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 921:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 1119              		.loc 1 921 0
 1120 001c 4FF48053 		mov	r3, #4096
 1121 0020 C4F20203 		movt	r3, 16386
 1122 0024 5B68     		ldr	r3, [r3, #4]
 1123 0026 03F00C03 		and	r3, r3, #12
 1124 002a FB61     		str	r3, [r7, #28]
 922:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 923:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch (tmp)
 1125              		.loc 1 923 0
 1126 002c FB69     		ldr	r3, [r7, #28]
 1127 002e 042B     		cmp	r3, #4
 1128 0030 0AD0     		beq	.L39
 1129 0032 082B     		cmp	r3, #8
 1130 0034 0FD0     		beq	.L40
 1131 0036 002B     		cmp	r3, #0
 1132 0038 44D1     		bne	.L45
 924:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 925:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 926:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1133              		.loc 1 926 0
 1134 003a 7A68     		ldr	r2, [r7, #4]
 1135 003c 4FF49053 		mov	r3, #4608
 1136 0040 C0F27A03 		movt	r3, 122
 1137 0044 1360     		str	r3, [r2]
 927:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1138              		.loc 1 927 0
 1139 0046 44E0     		b	.L42
 1140              	.L39:
 928:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 929:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1141              		.loc 1 929 0
 1142 0048 7A68     		ldr	r2, [r7, #4]
 1143 004a 4FF49053 		mov	r3, #4608
 1144 004e C0F27A03 		movt	r3, 122
 1145 0052 1360     		str	r3, [r2]
 930:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1146              		.loc 1 930 0
 1147 0054 3DE0     		b	.L42
 1148              	.L40:
 931:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 932:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 933:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 934:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 1149              		.loc 1 934 0
 1150 0056 4FF48053 		mov	r3, #4096
 1151 005a C4F20203 		movt	r3, 16386
 1152 005e 5B68     		ldr	r3, [r3, #4]
 1153 0060 03F47013 		and	r3, r3, #3932160
 1154 0064 BB61     		str	r3, [r7, #24]
 935:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 1155              		.loc 1 935 0
 1156 0066 4FF48053 		mov	r3, #4096
 1157 006a C4F20203 		movt	r3, 16386
 1158 006e 5B68     		ldr	r3, [r3, #4]
 1159 0070 03F48033 		and	r3, r3, #65536
 1160 0074 7B61     		str	r3, [r7, #20]
 936:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 937:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 938:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1161              		.loc 1 938 0
 1162 0076 BB69     		ldr	r3, [r7, #24]
 1163 0078 9B0C     		lsrs	r3, r3, #18
 1164 007a 0233     		adds	r3, r3, #2
 1165 007c BB61     		str	r3, [r7, #24]
 939:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 940:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 1166              		.loc 1 940 0
 1167 007e 7B69     		ldr	r3, [r7, #20]
 1168 0080 002B     		cmp	r3, #0
 1169 0082 09D1     		bne	.L43
 941:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 942:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 1170              		.loc 1 942 0
 1171 0084 BA69     		ldr	r2, [r7, #24]
 1172 0086 4FF41063 		mov	r3, #2304
 1173 008a C0F23D03 		movt	r3, 61
 1174 008e 03FB02F2 		mul	r2, r3, r2
 1175 0092 7B68     		ldr	r3, [r7, #4]
 1176 0094 1A60     		str	r2, [r3]
 943:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 944:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 945:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {
 946:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 947:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 948:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 949:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 950:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #else
 951:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 952:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 953:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 954:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 955:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 956:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         else
 957:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {
 958:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 959:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 960:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #endif
 961:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 962:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 963:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 964:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 965:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 966:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {
 967:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****          pllmull += 2;
 968:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 969:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 970:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 971:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 972:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 973:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****             
 974:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 975:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 976:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 977:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 978:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 979:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 980:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         
 981:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 982:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 983:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 984:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         
 985:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 986:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 987:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 988:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 989:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         else
 990:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 991:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           
 992:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 993:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 994:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 995:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 996:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 997:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 998:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 999:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1177              		.loc 1 999 0
 1178 0096 1CE0     		b	.L42
 1179              	.L43:
 947:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 1180              		.loc 1 947 0
 1181 0098 4FF48053 		mov	r3, #4096
 1182 009c C4F20203 		movt	r3, 16386
 1183 00a0 DB6A     		ldr	r3, [r3, #44]
 1184 00a2 03F00F03 		and	r3, r3, #15
 1185 00a6 0133     		adds	r3, r3, #1
 1186 00a8 FB60     		str	r3, [r7, #12]
 949:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #else
 1187              		.loc 1 949 0
 1188 00aa 4FF49053 		mov	r3, #4608
 1189 00ae C0F27A03 		movt	r3, 122
 1190 00b2 FA68     		ldr	r2, [r7, #12]
 1191 00b4 B3FBF2F3 		udiv	r3, r3, r2
 1192 00b8 BA69     		ldr	r2, [r7, #24]
 1193 00ba 02FB03F2 		mul	r2, r2, r3
 1194 00be 7B68     		ldr	r3, [r7, #4]
 1195 00c0 1A60     		str	r2, [r3]
 1196              		.loc 1 999 0
 1197 00c2 06E0     		b	.L42
 1198              	.L45:
1000:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1001:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
1002:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1199              		.loc 1 1002 0
 1200 00c4 7A68     		ldr	r2, [r7, #4]
 1201 00c6 4FF49053 		mov	r3, #4608
 1202 00ca C0F27A03 		movt	r3, 122
 1203 00ce 1360     		str	r3, [r2]
1003:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1204              		.loc 1 1003 0
 1205 00d0 00BF     		nop
 1206              	.L42:
1004:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1005:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1006:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1007:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1008:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 1207              		.loc 1 1008 0
 1208 00d2 4FF48053 		mov	r3, #4096
 1209 00d6 C4F20203 		movt	r3, 16386
 1210 00da 5B68     		ldr	r3, [r3, #4]
 1211 00dc 03F0F003 		and	r3, r3, #240
 1212 00e0 FB61     		str	r3, [r7, #28]
1009:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 1213              		.loc 1 1009 0
 1214 00e2 FB69     		ldr	r3, [r7, #28]
 1215 00e4 1B09     		lsrs	r3, r3, #4
 1216 00e6 FB61     		str	r3, [r7, #28]
1010:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1217              		.loc 1 1010 0
 1218 00e8 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1219 00ec C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1220 00f0 FA69     		ldr	r2, [r7, #28]
 1221 00f2 1344     		add	r3, r3, r2
 1222 00f4 1B78     		ldrb	r3, [r3]
 1223 00f6 DBB2     		uxtb	r3, r3
 1224 00f8 3B61     		str	r3, [r7, #16]
1011:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1012:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1225              		.loc 1 1012 0
 1226 00fa 7B68     		ldr	r3, [r7, #4]
 1227 00fc 1A68     		ldr	r2, [r3]
 1228 00fe 3B69     		ldr	r3, [r7, #16]
 1229 0100 DA40     		lsrs	r2, r2, r3
 1230 0102 7B68     		ldr	r3, [r7, #4]
 1231 0104 5A60     		str	r2, [r3, #4]
1013:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1014:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 1232              		.loc 1 1014 0
 1233 0106 4FF48053 		mov	r3, #4096
 1234 010a C4F20203 		movt	r3, 16386
 1235 010e 5B68     		ldr	r3, [r3, #4]
 1236 0110 03F4E063 		and	r3, r3, #1792
 1237 0114 FB61     		str	r3, [r7, #28]
1015:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 1238              		.loc 1 1015 0
 1239 0116 FB69     		ldr	r3, [r7, #28]
 1240 0118 1B0A     		lsrs	r3, r3, #8
 1241 011a FB61     		str	r3, [r7, #28]
1016:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1242              		.loc 1 1016 0
 1243 011c 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1244 0120 C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1245 0124 FA69     		ldr	r2, [r7, #28]
 1246 0126 1344     		add	r3, r3, r2
 1247 0128 1B78     		ldrb	r3, [r3]
 1248 012a DBB2     		uxtb	r3, r3
 1249 012c 3B61     		str	r3, [r7, #16]
1017:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1018:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1250              		.loc 1 1018 0
 1251 012e 7B68     		ldr	r3, [r7, #4]
 1252 0130 5A68     		ldr	r2, [r3, #4]
 1253 0132 3B69     		ldr	r3, [r7, #16]
 1254 0134 DA40     		lsrs	r2, r2, r3
 1255 0136 7B68     		ldr	r3, [r7, #4]
 1256 0138 9A60     		str	r2, [r3, #8]
1019:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1020:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 1257              		.loc 1 1020 0
 1258 013a 4FF48053 		mov	r3, #4096
 1259 013e C4F20203 		movt	r3, 16386
 1260 0142 5B68     		ldr	r3, [r3, #4]
 1261 0144 03F46053 		and	r3, r3, #14336
 1262 0148 FB61     		str	r3, [r7, #28]
1021:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 1263              		.loc 1 1021 0
 1264 014a FB69     		ldr	r3, [r7, #28]
 1265 014c DB0A     		lsrs	r3, r3, #11
 1266 014e FB61     		str	r3, [r7, #28]
1022:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1267              		.loc 1 1022 0
 1268 0150 40F20003 		movw	r3, #:lower16:APBAHBPrescTable
 1269 0154 C0F20003 		movt	r3, #:upper16:APBAHBPrescTable
 1270 0158 FA69     		ldr	r2, [r7, #28]
 1271 015a 1344     		add	r3, r3, r2
 1272 015c 1B78     		ldrb	r3, [r3]
 1273 015e DBB2     		uxtb	r3, r3
 1274 0160 3B61     		str	r3, [r7, #16]
1023:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1024:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1275              		.loc 1 1024 0
 1276 0162 7B68     		ldr	r3, [r7, #4]
 1277 0164 5A68     		ldr	r2, [r3, #4]
 1278 0166 3B69     		ldr	r3, [r7, #16]
 1279 0168 DA40     		lsrs	r2, r2, r3
 1280 016a 7B68     		ldr	r3, [r7, #4]
 1281 016c DA60     		str	r2, [r3, #12]
1025:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1026:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 1282              		.loc 1 1026 0
 1283 016e 4FF48053 		mov	r3, #4096
 1284 0172 C4F20203 		movt	r3, 16386
 1285 0176 5B68     		ldr	r3, [r3, #4]
 1286 0178 03F44043 		and	r3, r3, #49152
 1287 017c FB61     		str	r3, [r7, #28]
1027:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 1288              		.loc 1 1027 0
 1289 017e FB69     		ldr	r3, [r7, #28]
 1290 0180 9B0B     		lsrs	r3, r3, #14
 1291 0182 FB61     		str	r3, [r7, #28]
1028:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 1292              		.loc 1 1028 0
 1293 0184 40F20003 		movw	r3, #:lower16:ADCPrescTable
 1294 0188 C0F20003 		movt	r3, #:upper16:ADCPrescTable
 1295 018c FA69     		ldr	r2, [r7, #28]
 1296 018e 1344     		add	r3, r3, r2
 1297 0190 1B78     		ldrb	r3, [r3]
 1298 0192 DBB2     		uxtb	r3, r3
 1299 0194 3B61     		str	r3, [r7, #16]
1029:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1030:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 1300              		.loc 1 1030 0
 1301 0196 7B68     		ldr	r3, [r7, #4]
 1302 0198 DA68     		ldr	r2, [r3, #12]
 1303 019a 3B69     		ldr	r3, [r7, #16]
 1304 019c B2FBF3F2 		udiv	r2, r2, r3
 1305 01a0 7B68     		ldr	r3, [r7, #4]
 1306 01a2 1A61     		str	r2, [r3, #16]
1031:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1307              		.loc 1 1031 0
 1308 01a4 2437     		adds	r7, r7, #36
 1309 01a6 BD46     		mov	sp, r7
 1310              		@ sp needed
 1311 01a8 5DF8047B 		ldr	r7, [sp], #4
 1312 01ac 7047     		bx	lr
 1313              		.cfi_endproc
 1314              	.LFE49:
 1316 01ae 00BF     		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 1317              		.align	2
 1318              		.global	RCC_AHBPeriphClockCmd
 1319              		.thumb
 1320              		.thumb_func
 1322              	RCC_AHBPeriphClockCmd:
 1323              	.LFB50:
1032:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1033:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1034:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1035:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1036:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1037:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1038:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values:        
1039:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1040:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1041:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1042:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1043:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1044:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1045:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1046:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1047:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1048:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1049:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1050:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:        
1051:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1052:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1053:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1054:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1055:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1056:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1057:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1058:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1059:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1060:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1061:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1062:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1063:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1064:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1065:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1324              		.loc 1 1065 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 8
 1327              		@ frame_needed = 1, uses_anonymous_args = 0
 1328              		@ link register save eliminated.
 1329 0000 80B4     		push	{r7}
 1330              		.cfi_def_cfa_offset 4
 1331              		.cfi_offset 7, -4
 1332 0002 83B0     		sub	sp, sp, #12
 1333              		.cfi_def_cfa_offset 16
 1334 0004 00AF     		add	r7, sp, #0
 1335              		.cfi_def_cfa_register 7
 1336 0006 7860     		str	r0, [r7, #4]
 1337 0008 0B46     		mov	r3, r1
 1338 000a FB70     		strb	r3, [r7, #3]
1066:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1067:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1068:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1069:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1070:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1339              		.loc 1 1070 0
 1340 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1341 000e 002B     		cmp	r3, #0
 1342 0010 0CD0     		beq	.L47
1071:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1072:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1343              		.loc 1 1072 0
 1344 0012 4FF48053 		mov	r3, #4096
 1345 0016 C4F20203 		movt	r3, 16386
 1346 001a 4FF48052 		mov	r2, #4096
 1347 001e C4F20202 		movt	r2, 16386
 1348 0022 5169     		ldr	r1, [r2, #20]
 1349 0024 7A68     		ldr	r2, [r7, #4]
 1350 0026 0A43     		orrs	r2, r2, r1
 1351 0028 5A61     		str	r2, [r3, #20]
 1352 002a 0CE0     		b	.L46
 1353              	.L47:
1073:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1074:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1075:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1076:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 1354              		.loc 1 1076 0
 1355 002c 4FF48053 		mov	r3, #4096
 1356 0030 C4F20203 		movt	r3, 16386
 1357 0034 4FF48052 		mov	r2, #4096
 1358 0038 C4F20202 		movt	r2, 16386
 1359 003c 5169     		ldr	r1, [r2, #20]
 1360 003e 7A68     		ldr	r2, [r7, #4]
 1361 0040 D243     		mvns	r2, r2
 1362 0042 0A40     		ands	r2, r2, r1
 1363 0044 5A61     		str	r2, [r3, #20]
 1364              	.L46:
1077:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1078:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1365              		.loc 1 1078 0
 1366 0046 0C37     		adds	r7, r7, #12
 1367 0048 BD46     		mov	sp, r7
 1368              		@ sp needed
 1369 004a 5DF8047B 		ldr	r7, [sp], #4
 1370 004e 7047     		bx	lr
 1371              		.cfi_endproc
 1372              	.LFE50:
 1374              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1375              		.align	2
 1376              		.global	RCC_APB2PeriphClockCmd
 1377              		.thumb
 1378              		.thumb_func
 1380              	RCC_APB2PeriphClockCmd:
 1381              	.LFB51:
1079:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1080:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1081:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1082:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1083:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1084:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1085:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1086:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1087:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1088:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1089:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1090:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1091:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1092:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1093:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1094:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1095:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1096:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1382              		.loc 1 1096 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 8
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387 0000 80B4     		push	{r7}
 1388              		.cfi_def_cfa_offset 4
 1389              		.cfi_offset 7, -4
 1390 0002 83B0     		sub	sp, sp, #12
 1391              		.cfi_def_cfa_offset 16
 1392 0004 00AF     		add	r7, sp, #0
 1393              		.cfi_def_cfa_register 7
 1394 0006 7860     		str	r0, [r7, #4]
 1395 0008 0B46     		mov	r3, r1
 1396 000a FB70     		strb	r3, [r7, #3]
1097:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1098:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1099:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1100:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1397              		.loc 1 1100 0
 1398 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1399 000e 002B     		cmp	r3, #0
 1400 0010 0CD0     		beq	.L50
1101:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1102:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1401              		.loc 1 1102 0
 1402 0012 4FF48053 		mov	r3, #4096
 1403 0016 C4F20203 		movt	r3, 16386
 1404 001a 4FF48052 		mov	r2, #4096
 1405 001e C4F20202 		movt	r2, 16386
 1406 0022 9169     		ldr	r1, [r2, #24]
 1407 0024 7A68     		ldr	r2, [r7, #4]
 1408 0026 0A43     		orrs	r2, r2, r1
 1409 0028 9A61     		str	r2, [r3, #24]
 1410 002a 0CE0     		b	.L49
 1411              	.L50:
1103:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1104:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1105:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1106:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1412              		.loc 1 1106 0
 1413 002c 4FF48053 		mov	r3, #4096
 1414 0030 C4F20203 		movt	r3, 16386
 1415 0034 4FF48052 		mov	r2, #4096
 1416 0038 C4F20202 		movt	r2, 16386
 1417 003c 9169     		ldr	r1, [r2, #24]
 1418 003e 7A68     		ldr	r2, [r7, #4]
 1419 0040 D243     		mvns	r2, r2
 1420 0042 0A40     		ands	r2, r2, r1
 1421 0044 9A61     		str	r2, [r3, #24]
 1422              	.L49:
1107:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1108:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1423              		.loc 1 1108 0
 1424 0046 0C37     		adds	r7, r7, #12
 1425 0048 BD46     		mov	sp, r7
 1426              		@ sp needed
 1427 004a 5DF8047B 		ldr	r7, [sp], #4
 1428 004e 7047     		bx	lr
 1429              		.cfi_endproc
 1430              	.LFE51:
 1432              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 1433              		.align	2
 1434              		.global	RCC_APB1PeriphClockCmd
 1435              		.thumb
 1436              		.thumb_func
 1438              	RCC_APB1PeriphClockCmd:
 1439              	.LFB52:
1109:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1110:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1111:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1112:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1113:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1114:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1115:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1116:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1117:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1118:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1119:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1120:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1121:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1122:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1124:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1125:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1126:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1127:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1440              		.loc 1 1127 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 8
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
 1445 0000 80B4     		push	{r7}
 1446              		.cfi_def_cfa_offset 4
 1447              		.cfi_offset 7, -4
 1448 0002 83B0     		sub	sp, sp, #12
 1449              		.cfi_def_cfa_offset 16
 1450 0004 00AF     		add	r7, sp, #0
 1451              		.cfi_def_cfa_register 7
 1452 0006 7860     		str	r0, [r7, #4]
 1453 0008 0B46     		mov	r3, r1
 1454 000a FB70     		strb	r3, [r7, #3]
1128:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1129:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1130:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1131:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1455              		.loc 1 1131 0
 1456 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1457 000e 002B     		cmp	r3, #0
 1458 0010 0CD0     		beq	.L53
1132:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1133:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1459              		.loc 1 1133 0
 1460 0012 4FF48053 		mov	r3, #4096
 1461 0016 C4F20203 		movt	r3, 16386
 1462 001a 4FF48052 		mov	r2, #4096
 1463 001e C4F20202 		movt	r2, 16386
 1464 0022 D169     		ldr	r1, [r2, #28]
 1465 0024 7A68     		ldr	r2, [r7, #4]
 1466 0026 0A43     		orrs	r2, r2, r1
 1467 0028 DA61     		str	r2, [r3, #28]
 1468 002a 0CE0     		b	.L52
 1469              	.L53:
1134:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1135:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1136:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1137:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1470              		.loc 1 1137 0
 1471 002c 4FF48053 		mov	r3, #4096
 1472 0030 C4F20203 		movt	r3, 16386
 1473 0034 4FF48052 		mov	r2, #4096
 1474 0038 C4F20202 		movt	r2, 16386
 1475 003c D169     		ldr	r1, [r2, #28]
 1476 003e 7A68     		ldr	r2, [r7, #4]
 1477 0040 D243     		mvns	r2, r2
 1478 0042 0A40     		ands	r2, r2, r1
 1479 0044 DA61     		str	r2, [r3, #28]
 1480              	.L52:
1138:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1139:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1481              		.loc 1 1139 0
 1482 0046 0C37     		adds	r7, r7, #12
 1483 0048 BD46     		mov	sp, r7
 1484              		@ sp needed
 1485 004a 5DF8047B 		ldr	r7, [sp], #4
 1486 004e 7047     		bx	lr
 1487              		.cfi_endproc
 1488              	.LFE52:
 1490              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1491              		.align	2
 1492              		.global	RCC_APB2PeriphResetCmd
 1493              		.thumb
 1494              		.thumb_func
 1496              	RCC_APB2PeriphResetCmd:
 1497              	.LFB53:
1140:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1141:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1142:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1143:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1144:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1145:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1146:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1147:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1148:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1149:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1150:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1151:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1152:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1153:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1154:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
1155:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1156:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1157:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1159:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1160:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1161:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1162:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1163:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1164:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1165:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1166:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1167:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
1168:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1169:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1170:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1171:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1172:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1173:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1174:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1175:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1176:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1177:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1178:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1179:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1180:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1181:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1182:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1183:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1184:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1185:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1186:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1498              		.loc 1 1186 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 8
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503 0000 80B4     		push	{r7}
 1504              		.cfi_def_cfa_offset 4
 1505              		.cfi_offset 7, -4
 1506 0002 83B0     		sub	sp, sp, #12
 1507              		.cfi_def_cfa_offset 16
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
 1510 0006 7860     		str	r0, [r7, #4]
 1511 0008 0B46     		mov	r3, r1
 1512 000a FB70     		strb	r3, [r7, #3]
1187:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1188:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1189:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1190:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1513              		.loc 1 1190 0
 1514 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1515 000e 002B     		cmp	r3, #0
 1516 0010 0CD0     		beq	.L56
1191:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1192:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1517              		.loc 1 1192 0
 1518 0012 4FF48053 		mov	r3, #4096
 1519 0016 C4F20203 		movt	r3, 16386
 1520 001a 4FF48052 		mov	r2, #4096
 1521 001e C4F20202 		movt	r2, 16386
 1522 0022 D168     		ldr	r1, [r2, #12]
 1523 0024 7A68     		ldr	r2, [r7, #4]
 1524 0026 0A43     		orrs	r2, r2, r1
 1525 0028 DA60     		str	r2, [r3, #12]
 1526 002a 0CE0     		b	.L55
 1527              	.L56:
1193:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1194:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1195:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1196:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1528              		.loc 1 1196 0
 1529 002c 4FF48053 		mov	r3, #4096
 1530 0030 C4F20203 		movt	r3, 16386
 1531 0034 4FF48052 		mov	r2, #4096
 1532 0038 C4F20202 		movt	r2, 16386
 1533 003c D168     		ldr	r1, [r2, #12]
 1534 003e 7A68     		ldr	r2, [r7, #4]
 1535 0040 D243     		mvns	r2, r2
 1536 0042 0A40     		ands	r2, r2, r1
 1537 0044 DA60     		str	r2, [r3, #12]
 1538              	.L55:
1197:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1198:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1539              		.loc 1 1198 0
 1540 0046 0C37     		adds	r7, r7, #12
 1541 0048 BD46     		mov	sp, r7
 1542              		@ sp needed
 1543 004a 5DF8047B 		ldr	r7, [sp], #4
 1544 004e 7047     		bx	lr
 1545              		.cfi_endproc
 1546              	.LFE53:
 1548              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1549              		.align	2
 1550              		.global	RCC_APB1PeriphResetCmd
 1551              		.thumb
 1552              		.thumb_func
 1554              	RCC_APB1PeriphResetCmd:
 1555              	.LFB54:
1199:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1200:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1201:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1202:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1203:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1204:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1205:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1206:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1207:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1208:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1209:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1210:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1211:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1212:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1213:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1214:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1215:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1216:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1217:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1556              		.loc 1 1217 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 8
 1559              		@ frame_needed = 1, uses_anonymous_args = 0
 1560              		@ link register save eliminated.
 1561 0000 80B4     		push	{r7}
 1562              		.cfi_def_cfa_offset 4
 1563              		.cfi_offset 7, -4
 1564 0002 83B0     		sub	sp, sp, #12
 1565              		.cfi_def_cfa_offset 16
 1566 0004 00AF     		add	r7, sp, #0
 1567              		.cfi_def_cfa_register 7
 1568 0006 7860     		str	r0, [r7, #4]
 1569 0008 0B46     		mov	r3, r1
 1570 000a FB70     		strb	r3, [r7, #3]
1218:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1219:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1220:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1221:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1571              		.loc 1 1221 0
 1572 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1573 000e 002B     		cmp	r3, #0
 1574 0010 0CD0     		beq	.L59
1222:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1223:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1575              		.loc 1 1223 0
 1576 0012 4FF48053 		mov	r3, #4096
 1577 0016 C4F20203 		movt	r3, 16386
 1578 001a 4FF48052 		mov	r2, #4096
 1579 001e C4F20202 		movt	r2, 16386
 1580 0022 1169     		ldr	r1, [r2, #16]
 1581 0024 7A68     		ldr	r2, [r7, #4]
 1582 0026 0A43     		orrs	r2, r2, r1
 1583 0028 1A61     		str	r2, [r3, #16]
 1584 002a 0CE0     		b	.L58
 1585              	.L59:
1224:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1225:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1226:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1227:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1586              		.loc 1 1227 0
 1587 002c 4FF48053 		mov	r3, #4096
 1588 0030 C4F20203 		movt	r3, 16386
 1589 0034 4FF48052 		mov	r2, #4096
 1590 0038 C4F20202 		movt	r2, 16386
 1591 003c 1169     		ldr	r1, [r2, #16]
 1592 003e 7A68     		ldr	r2, [r7, #4]
 1593 0040 D243     		mvns	r2, r2
 1594 0042 0A40     		ands	r2, r2, r1
 1595 0044 1A61     		str	r2, [r3, #16]
 1596              	.L58:
1228:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1229:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1597              		.loc 1 1229 0
 1598 0046 0C37     		adds	r7, r7, #12
 1599 0048 BD46     		mov	sp, r7
 1600              		@ sp needed
 1601 004a 5DF8047B 		ldr	r7, [sp], #4
 1602 004e 7047     		bx	lr
 1603              		.cfi_endproc
 1604              	.LFE54:
 1606              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1607              		.align	2
 1608              		.global	RCC_BackupResetCmd
 1609              		.thumb
 1610              		.thumb_func
 1612              	RCC_BackupResetCmd:
 1613              	.LFB55:
1230:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1231:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1232:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1233:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1234:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1236:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1237:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1238:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1614              		.loc 1 1238 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 8
 1617              		@ frame_needed = 1, uses_anonymous_args = 0
 1618              		@ link register save eliminated.
 1619 0000 80B4     		push	{r7}
 1620              		.cfi_def_cfa_offset 4
 1621              		.cfi_offset 7, -4
 1622 0002 83B0     		sub	sp, sp, #12
 1623              		.cfi_def_cfa_offset 16
 1624 0004 00AF     		add	r7, sp, #0
 1625              		.cfi_def_cfa_register 7
 1626 0006 0346     		mov	r3, r0
 1627 0008 FB71     		strb	r3, [r7, #7]
1239:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1240:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1241:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1628              		.loc 1 1241 0
 1629 000a 4FF48863 		mov	r3, #1088
 1630 000e C4F24223 		movt	r3, 16962
 1631 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1632 0014 1A60     		str	r2, [r3]
1242:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1633              		.loc 1 1242 0
 1634 0016 0C37     		adds	r7, r7, #12
 1635 0018 BD46     		mov	sp, r7
 1636              		@ sp needed
 1637 001a 5DF8047B 		ldr	r7, [sp], #4
 1638 001e 7047     		bx	lr
 1639              		.cfi_endproc
 1640              	.LFE55:
 1642              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 1643              		.align	2
 1644              		.global	RCC_ClockSecuritySystemCmd
 1645              		.thumb
 1646              		.thumb_func
 1648              	RCC_ClockSecuritySystemCmd:
 1649              	.LFB56:
1243:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1244:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1245:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1246:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1247:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1248:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1249:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1250:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1251:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1650              		.loc 1 1251 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 8
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
 1655 0000 80B4     		push	{r7}
 1656              		.cfi_def_cfa_offset 4
 1657              		.cfi_offset 7, -4
 1658 0002 83B0     		sub	sp, sp, #12
 1659              		.cfi_def_cfa_offset 16
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 0346     		mov	r3, r0
 1663 0008 FB71     		strb	r3, [r7, #7]
1252:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1253:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1254:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1664              		.loc 1 1254 0
 1665 000a 4C23     		movs	r3, #76
 1666 000c C4F24223 		movt	r3, 16962
 1667 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1668 0012 1A60     		str	r2, [r3]
1255:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1669              		.loc 1 1255 0
 1670 0014 0C37     		adds	r7, r7, #12
 1671 0016 BD46     		mov	sp, r7
 1672              		@ sp needed
 1673 0018 5DF8047B 		ldr	r7, [sp], #4
 1674 001c 7047     		bx	lr
 1675              		.cfi_endproc
 1676              	.LFE56:
 1678 001e 00BF     		.section	.text.RCC_MCOConfig,"ax",%progbits
 1679              		.align	2
 1680              		.global	RCC_MCOConfig
 1681              		.thumb
 1682              		.thumb_func
 1684              	RCC_MCOConfig:
 1685              	.LFB57:
1256:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1257:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1258:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1259:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1260:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1261:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1262:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:       
1263:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1264:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1265:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1266:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1267:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1268:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1269:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1270:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1271:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1272:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1273:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1274:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1275:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1276:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1277:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1278:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1279:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1280:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1281:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1282:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1283:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1686              		.loc 1 1283 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 8
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
 1691 0000 80B4     		push	{r7}
 1692              		.cfi_def_cfa_offset 4
 1693              		.cfi_offset 7, -4
 1694 0002 83B0     		sub	sp, sp, #12
 1695              		.cfi_def_cfa_offset 16
 1696 0004 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
 1698 0006 0346     		mov	r3, r0
 1699 0008 FB71     		strb	r3, [r7, #7]
1284:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1285:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1286:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1287:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1288:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1700              		.loc 1 1288 0
 1701 000a 41F20703 		movw	r3, #4103
 1702 000e C4F20203 		movt	r3, 16386
 1703 0012 FA79     		ldrb	r2, [r7, #7]
 1704 0014 1A70     		strb	r2, [r3]
1289:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1705              		.loc 1 1289 0
 1706 0016 0C37     		adds	r7, r7, #12
 1707 0018 BD46     		mov	sp, r7
 1708              		@ sp needed
 1709 001a 5DF8047B 		ldr	r7, [sp], #4
 1710 001e 7047     		bx	lr
 1711              		.cfi_endproc
 1712              	.LFE57:
 1714              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 1715              		.align	2
 1716              		.global	RCC_GetFlagStatus
 1717              		.thumb
 1718              		.thumb_func
 1720              	RCC_GetFlagStatus:
 1721              	.LFB58:
1290:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1291:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1292:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1293:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1294:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1295:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1296:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:
1297:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1298:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1299:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1300:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1301:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1302:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1303:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1304:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1305:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1306:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1307:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1308:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1309:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1310:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1311:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1312:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1313:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1314:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1315:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1316:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1317:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1318:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1319:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1320:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1321:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1322:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1323:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1324:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1325:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1326:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1327:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1722              		.loc 1 1327 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 24
 1725              		@ frame_needed = 1, uses_anonymous_args = 0
 1726              		@ link register save eliminated.
 1727 0000 80B4     		push	{r7}
 1728              		.cfi_def_cfa_offset 4
 1729              		.cfi_offset 7, -4
 1730 0002 87B0     		sub	sp, sp, #28
 1731              		.cfi_def_cfa_offset 32
 1732 0004 00AF     		add	r7, sp, #0
 1733              		.cfi_def_cfa_register 7
 1734 0006 0346     		mov	r3, r0
 1735 0008 FB71     		strb	r3, [r7, #7]
1328:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
 1736              		.loc 1 1328 0
 1737 000a 0023     		movs	r3, #0
 1738 000c FB60     		str	r3, [r7, #12]
1329:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
 1739              		.loc 1 1329 0
 1740 000e 0023     		movs	r3, #0
 1741 0010 7B61     		str	r3, [r7, #20]
1330:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
 1742              		.loc 1 1330 0
 1743 0012 0023     		movs	r3, #0
 1744 0014 FB74     		strb	r3, [r7, #19]
1331:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1332:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1333:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1334:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1335:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1745              		.loc 1 1335 0
 1746 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1747 0018 5B09     		lsrs	r3, r3, #5
 1748 001a DBB2     		uxtb	r3, r3
 1749 001c FB60     		str	r3, [r7, #12]
1336:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1750              		.loc 1 1336 0
 1751 001e FB68     		ldr	r3, [r7, #12]
 1752 0020 012B     		cmp	r3, #1
 1753 0022 06D1     		bne	.L65
1337:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1338:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1754              		.loc 1 1338 0
 1755 0024 4FF48053 		mov	r3, #4096
 1756 0028 C4F20203 		movt	r3, 16386
 1757 002c 1B68     		ldr	r3, [r3]
 1758 002e 7B61     		str	r3, [r7, #20]
 1759 0030 0FE0     		b	.L66
 1760              	.L65:
1339:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1340:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1761              		.loc 1 1340 0
 1762 0032 FB68     		ldr	r3, [r7, #12]
 1763 0034 022B     		cmp	r3, #2
 1764 0036 06D1     		bne	.L67
1341:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1342:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1765              		.loc 1 1342 0
 1766 0038 4FF48053 		mov	r3, #4096
 1767 003c C4F20203 		movt	r3, 16386
 1768 0040 1B6A     		ldr	r3, [r3, #32]
 1769 0042 7B61     		str	r3, [r7, #20]
 1770 0044 05E0     		b	.L66
 1771              	.L67:
1343:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1344:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1345:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1346:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1772              		.loc 1 1346 0
 1773 0046 4FF48053 		mov	r3, #4096
 1774 004a C4F20203 		movt	r3, 16386
 1775 004e 5B6A     		ldr	r3, [r3, #36]
 1776 0050 7B61     		str	r3, [r7, #20]
 1777              	.L66:
1347:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1348:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1349:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1350:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1778              		.loc 1 1350 0
 1779 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1780 0054 03F01F03 		and	r3, r3, #31
 1781 0058 FB60     		str	r3, [r7, #12]
1351:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1782              		.loc 1 1351 0
 1783 005a FB68     		ldr	r3, [r7, #12]
 1784 005c 7A69     		ldr	r2, [r7, #20]
 1785 005e 22FA03F3 		lsr	r3, r2, r3
 1786 0062 03F00103 		and	r3, r3, #1
 1787 0066 002B     		cmp	r3, #0
 1788 0068 02D0     		beq	.L68
1352:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1353:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1789              		.loc 1 1353 0
 1790 006a 0123     		movs	r3, #1
 1791 006c FB74     		strb	r3, [r7, #19]
 1792 006e 01E0     		b	.L69
 1793              	.L68:
1354:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1355:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1356:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1357:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1794              		.loc 1 1357 0
 1795 0070 0023     		movs	r3, #0
 1796 0072 FB74     		strb	r3, [r7, #19]
 1797              	.L69:
1358:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1359:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1360:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1361:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return bitstatus;
 1798              		.loc 1 1361 0
 1799 0074 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1362:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1800              		.loc 1 1362 0
 1801 0076 1846     		mov	r0, r3
 1802 0078 1C37     		adds	r7, r7, #28
 1803 007a BD46     		mov	sp, r7
 1804              		@ sp needed
 1805 007c 5DF8047B 		ldr	r7, [sp], #4
 1806 0080 7047     		bx	lr
 1807              		.cfi_endproc
 1808              	.LFE58:
 1810 0082 00BF     		.section	.text.RCC_ClearFlag,"ax",%progbits
 1811              		.align	2
 1812              		.global	RCC_ClearFlag
 1813              		.thumb
 1814              		.thumb_func
 1816              	RCC_ClearFlag:
 1817              	.LFB59:
1363:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1364:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1365:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1366:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1367:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1368:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
1369:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1370:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1371:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1372:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1818              		.loc 1 1372 0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 1, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
 1823 0000 80B4     		push	{r7}
 1824              		.cfi_def_cfa_offset 4
 1825              		.cfi_offset 7, -4
 1826 0002 00AF     		add	r7, sp, #0
 1827              		.cfi_def_cfa_register 7
1373:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1374:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1828              		.loc 1 1374 0
 1829 0004 4FF48053 		mov	r3, #4096
 1830 0008 C4F20203 		movt	r3, 16386
 1831 000c 4FF48052 		mov	r2, #4096
 1832 0010 C4F20202 		movt	r2, 16386
 1833 0014 526A     		ldr	r2, [r2, #36]
 1834 0016 42F08072 		orr	r2, r2, #16777216
 1835 001a 5A62     		str	r2, [r3, #36]
1375:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1836              		.loc 1 1375 0
 1837 001c BD46     		mov	sp, r7
 1838              		@ sp needed
 1839 001e 5DF8047B 		ldr	r7, [sp], #4
 1840 0022 7047     		bx	lr
 1841              		.cfi_endproc
 1842              	.LFE59:
 1844              		.section	.text.RCC_GetITStatus,"ax",%progbits
 1845              		.align	2
 1846              		.global	RCC_GetITStatus
 1847              		.thumb
 1848              		.thumb_func
 1850              	RCC_GetITStatus:
 1851              	.LFB60:
1376:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1377:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1378:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1379:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1380:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1381:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1382:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:
1383:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1384:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1385:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1386:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1387:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1388:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1389:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1390:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1391:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1392:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1393:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1394:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1395:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1396:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1397:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1398:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1399:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1400:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1401:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1402:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1403:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1852              		.loc 1 1403 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 16
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857 0000 80B4     		push	{r7}
 1858              		.cfi_def_cfa_offset 4
 1859              		.cfi_offset 7, -4
 1860 0002 85B0     		sub	sp, sp, #20
 1861              		.cfi_def_cfa_offset 24
 1862 0004 00AF     		add	r7, sp, #0
 1863              		.cfi_def_cfa_register 7
 1864 0006 0346     		mov	r3, r0
 1865 0008 FB71     		strb	r3, [r7, #7]
1404:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
 1866              		.loc 1 1404 0
 1867 000a 0023     		movs	r3, #0
 1868 000c FB73     		strb	r3, [r7, #15]
1405:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1406:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1407:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1408:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1409:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1869              		.loc 1 1409 0
 1870 000e 4FF48053 		mov	r3, #4096
 1871 0012 C4F20203 		movt	r3, 16386
 1872 0016 9A68     		ldr	r2, [r3, #8]
 1873 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1874 001a 1340     		ands	r3, r3, r2
 1875 001c 002B     		cmp	r3, #0
 1876 001e 02D0     		beq	.L73
1410:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1411:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1877              		.loc 1 1411 0
 1878 0020 0123     		movs	r3, #1
 1879 0022 FB73     		strb	r3, [r7, #15]
 1880 0024 01E0     		b	.L74
 1881              	.L73:
1412:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1413:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1414:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1415:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1882              		.loc 1 1415 0
 1883 0026 0023     		movs	r3, #0
 1884 0028 FB73     		strb	r3, [r7, #15]
 1885              	.L74:
1416:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1417:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1418:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1419:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return  bitstatus;
 1886              		.loc 1 1419 0
 1887 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1420:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1888              		.loc 1 1420 0
 1889 002c 1846     		mov	r0, r3
 1890 002e 1437     		adds	r7, r7, #20
 1891 0030 BD46     		mov	sp, r7
 1892              		@ sp needed
 1893 0032 5DF8047B 		ldr	r7, [sp], #4
 1894 0036 7047     		bx	lr
 1895              		.cfi_endproc
 1896              	.LFE60:
 1898              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 1899              		.align	2
 1900              		.global	RCC_ClearITPendingBit
 1901              		.thumb
 1902              		.thumb_func
 1904              	RCC_ClearITPendingBit:
 1905              	.LFB61:
1421:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1422:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1423:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1424:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1425:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1426:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1427:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values:
1428:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1429:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1430:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1431:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1432:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1433:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1434:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1435:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1436:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1437:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1438:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:        
1439:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1440:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1441:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1442:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1443:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1444:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1445:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1446:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1447:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1448:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1449:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1906              		.loc 1 1449 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 8
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911 0000 80B4     		push	{r7}
 1912              		.cfi_def_cfa_offset 4
 1913              		.cfi_offset 7, -4
 1914 0002 83B0     		sub	sp, sp, #12
 1915              		.cfi_def_cfa_offset 16
 1916 0004 00AF     		add	r7, sp, #0
 1917              		.cfi_def_cfa_register 7
 1918 0006 0346     		mov	r3, r0
 1919 0008 FB71     		strb	r3, [r7, #7]
1450:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1451:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1452:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1453:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1454:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****      pending bits */
1455:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1920              		.loc 1 1455 0
 1921 000a 41F20A03 		movw	r3, #4106
 1922 000e C4F20203 		movt	r3, 16386
 1923 0012 FA79     		ldrb	r2, [r7, #7]
 1924 0014 1A70     		strb	r2, [r3]
1456:../Libraries/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1925              		.loc 1 1456 0
 1926 0016 0C37     		adds	r7, r7, #12
 1927 0018 BD46     		mov	sp, r7
 1928              		@ sp needed
 1929 001a 5DF8047B 		ldr	r7, [sp], #4
 1930 001e 7047     		bx	lr
 1931              		.cfi_endproc
 1932              	.LFE61:
 1934              		.text
 1935              	.Letext0:
 1936              		.file 2 "c:\\tools\\arm-none-eabi\\include\\stdint.h"
 1937              		.file 3 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\Libraries\\CMSIS/stm32f10x.h"
 1938              		.file 4 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\Libraries\\StdPeripheralDriver\\inc/stm32f10
 1939              		.file 5 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\Libraries\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rcc.c
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:19     .data.APBAHBPrescTable:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:22     .data.APBAHBPrescTable:00000000 APBAHBPrescTable
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:40     .data.ADCPrescTable:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:43     .data.ADCPrescTable:00000000 ADCPrescTable
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:49     .text.RCC_DeInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:54     .text.RCC_DeInit:00000000 RCC_DeInit
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:129    .text.RCC_HSEConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:134    .text.RCC_HSEConfig:00000000 RCC_HSEConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:206    .text.RCC_WaitForHSEStartUp:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:211    .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1720   .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:279    .text.RCC_AdjustHSICalibrationValue:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:284    .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:333    .text.RCC_HSICmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:338    .text.RCC_HSICmd:00000000 RCC_HSICmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:369    .text.RCC_PLLConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:374    .text.RCC_PLLConfig:00000000 RCC_PLLConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:424    .text.RCC_PLLCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:429    .text.RCC_PLLCmd:00000000 RCC_PLLCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:460    .text.RCC_PREDIV1Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:465    .text.RCC_PREDIV1Config:00000000 RCC_PREDIV1Config
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:516    .text.RCC_SYSCLKConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:521    .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:568    .text.RCC_GetSYSCLKSource:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:573    .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:602    .text.RCC_HCLKConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:607    .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:654    .text.RCC_PCLK1Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:659    .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:706    .text.RCC_PCLK2Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:711    .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:759    .text.RCC_ITConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:764    .text.RCC_ITConfig:00000000 RCC_ITConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:823    .text.RCC_USBCLKConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:828    .text.RCC_USBCLKConfig:00000000 RCC_USBCLKConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:858    .text.RCC_ADCCLKConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:863    .text.RCC_ADCCLKConfig:00000000 RCC_ADCCLKConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:910    .text.RCC_LSEConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:915    .text.RCC_LSEConfig:00000000 RCC_LSEConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:976    .text.RCC_LSICmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:981    .text.RCC_LSICmd:00000000 RCC_LSICmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1012   .text.RCC_RTCCLKConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1017   .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1051   .text.RCC_RTCCLKCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1056   .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1087   .text.RCC_GetClocksFreq:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1092   .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1317   .text.RCC_AHBPeriphClockCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1322   .text.RCC_AHBPeriphClockCmd:00000000 RCC_AHBPeriphClockCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1375   .text.RCC_APB2PeriphClockCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1380   .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1433   .text.RCC_APB1PeriphClockCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1438   .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1491   .text.RCC_APB2PeriphResetCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1496   .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1549   .text.RCC_APB1PeriphResetCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1554   .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1607   .text.RCC_BackupResetCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1612   .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1643   .text.RCC_ClockSecuritySystemCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1648   .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1679   .text.RCC_MCOConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1684   .text.RCC_MCOConfig:00000000 RCC_MCOConfig
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1715   .text.RCC_GetFlagStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1811   .text.RCC_ClearFlag:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1816   .text.RCC_ClearFlag:00000000 RCC_ClearFlag
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1845   .text.RCC_GetITStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1850   .text.RCC_GetITStatus:00000000 RCC_GetITStatus
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1899   .text.RCC_ClearITPendingBit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccxhIBSF.s:1904   .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.98ffea2db242cfdb58f411f7407f2b59
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:00000000 wm4.stm32f10x_conf.h.2.f1a8c33f0a763aeef696fee38b2b2dbc
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_rcc.h.67.b2ac3f177eed824c6a7f550d9877061e

NO UNDEFINED SYMBOLS
