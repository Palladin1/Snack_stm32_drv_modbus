   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	ADC_DeInit:
  25              	.LFB29:
  26              		.file 1 "../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c"
   1:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
   2:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @version V3.5.0
   6:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @date    11-March-2011
   7:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @attention
  10:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *
  11:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *
  18:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ******************************************************************************
  20:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  21:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  22:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  24:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  25:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  26:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  28:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  29:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  30:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  31:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  32:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  33:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  34:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  35:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  36:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  37:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  38:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  39:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
  40:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
  41:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  42:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  43:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  44:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  45:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  46:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  47:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  48:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  49:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  50:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  51:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  52:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  53:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  54:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  55:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  56:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  57:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  58:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  59:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  60:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  61:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  62:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  63:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  64:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  65:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  66:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  67:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  68:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  69:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  70:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  71:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  72:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  73:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  74:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  75:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  76:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  77:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  78:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  79:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  80:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  81:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  82:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  83:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  84:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  85:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  86:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  87:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  88:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  89:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  90:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  91:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  92:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  93:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
  94:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
  95:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  96:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
  97:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
  98:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  99:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 100:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 101:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 102:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 103:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 104:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 105:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 106:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 107:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 108:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 109:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 110:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 111:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 112:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 113:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 114:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 115:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 116:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 117:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 118:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 119:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 120:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 121:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 122:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 123:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 124:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 125:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 126:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 127:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 128:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JL mask */
 129:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 130:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 131:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 132:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 133:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 134:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 135:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 136:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 137:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 138:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 139:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 140:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 141:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 142:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 143:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 144:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 145:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 146:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 147:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 148:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 149:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 150:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 151:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 152:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 153:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 154:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 155:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 156:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 157:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 158:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 159:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 160:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 161:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 162:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 163:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 164:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 165:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 166:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 167:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 168:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 169:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 170:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 171:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 172:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 173:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 174:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 175:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 176:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 177:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 178:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 179:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 180:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
  27              		.loc 1 180 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 181:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 182:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 183:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   
 184:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  40              		.loc 1 184 0
  41 0008 7A68     		ldr	r2, [r7, #4]
  42 000a 4FF41053 		mov	r3, #9216
  43 000e C4F20103 		movt	r3, 16385
  44 0012 9A42     		cmp	r2, r3
  45 0014 0AD1     		bne	.L2
 185:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 186:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 187:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  46              		.loc 1 187 0
  47 0016 4FF40070 		mov	r0, #512
  48 001a 0121     		movs	r1, #1
  49 001c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 188:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 189:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  50              		.loc 1 189 0
  51 0020 4FF40070 		mov	r0, #512
  52 0024 0021     		movs	r1, #0
  53 0026 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  54 002a 22E0     		b	.L1
  55              	.L2:
 190:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 191:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  56              		.loc 1 191 0
  57 002c 7A68     		ldr	r2, [r7, #4]
  58 002e 4FF42053 		mov	r3, #10240
  59 0032 C4F20103 		movt	r3, 16385
  60 0036 9A42     		cmp	r2, r3
  61 0038 0AD1     		bne	.L4
 192:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 193:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 194:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  62              		.loc 1 194 0
  63 003a 4FF48060 		mov	r0, #1024
  64 003e 0121     		movs	r1, #1
  65 0040 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 195:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 196:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  66              		.loc 1 196 0
  67 0044 4FF48060 		mov	r0, #1024
  68 0048 0021     		movs	r1, #0
  69 004a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  70 004e 10E0     		b	.L1
  71              	.L4:
 197:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 198:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 199:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 200:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  72              		.loc 1 200 0
  73 0050 7A68     		ldr	r2, [r7, #4]
  74 0052 4FF47053 		mov	r3, #15360
  75 0056 C4F20103 		movt	r3, 16385
  76 005a 9A42     		cmp	r2, r3
  77 005c 09D1     		bne	.L1
 201:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     {
 202:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 203:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
  78              		.loc 1 203 0
  79 005e 4FF40040 		mov	r0, #32768
  80 0062 0121     		movs	r1, #1
  81 0064 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 204:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 205:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  82              		.loc 1 205 0
  83 0068 4FF40040 		mov	r0, #32768
  84 006c 0021     		movs	r1, #0
  85 006e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  86              	.L1:
 206:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     }
 207:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 208:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
  87              		.loc 1 208 0
  88 0072 0837     		adds	r7, r7, #8
  89 0074 BD46     		mov	sp, r7
  90              		@ sp needed
  91 0076 80BD     		pop	{r7, pc}
  92              		.cfi_endproc
  93              	.LFE29:
  95              		.section	.text.ADC_Init,"ax",%progbits
  96              		.align	2
  97              		.global	ADC_Init
  98              		.thumb
  99              		.thumb_func
 101              	ADC_Init:
 102              	.LFB30:
 209:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 210:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 211:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 212:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 213:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 214:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 215:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 216:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 217:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 218:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 219:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 103              		.loc 1 219 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 16
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108 0000 80B4     		push	{r7}
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 7, -4
 111 0002 85B0     		sub	sp, sp, #20
 112              		.cfi_def_cfa_offset 24
 113 0004 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
 115 0006 7860     		str	r0, [r7, #4]
 116 0008 3960     		str	r1, [r7]
 220:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 117              		.loc 1 220 0
 118 000a 0023     		movs	r3, #0
 119 000c FB60     		str	r3, [r7, #12]
 221:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 120              		.loc 1 221 0
 121 000e 0023     		movs	r3, #0
 122 0010 FB72     		strb	r3, [r7, #11]
 222:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 223:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 224:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 225:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 226:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 227:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 228:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 229:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 230:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 231:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 232:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 233:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 123              		.loc 1 233 0
 124 0012 7B68     		ldr	r3, [r7, #4]
 125 0014 5B68     		ldr	r3, [r3, #4]
 126 0016 FB60     		str	r3, [r7, #12]
 234:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 235:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 127              		.loc 1 235 0
 128 0018 FB68     		ldr	r3, [r7, #12]
 129 001a 23F47023 		bic	r3, r3, #983040
 130 001e 23F48073 		bic	r3, r3, #256
 131 0022 FB60     		str	r3, [r7, #12]
 236:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 237:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 238:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 239:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 132              		.loc 1 239 0
 133 0024 3B68     		ldr	r3, [r7]
 134 0026 1A68     		ldr	r2, [r3]
 135 0028 3B68     		ldr	r3, [r7]
 136 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 137 002c 1B02     		lsls	r3, r3, #8
 138 002e 1343     		orrs	r3, r3, r2
 139 0030 FA68     		ldr	r2, [r7, #12]
 140 0032 1343     		orrs	r3, r3, r2
 141 0034 FB60     		str	r3, [r7, #12]
 240:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 241:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 142              		.loc 1 241 0
 143 0036 7B68     		ldr	r3, [r7, #4]
 144 0038 FA68     		ldr	r2, [r7, #12]
 145 003a 5A60     		str	r2, [r3, #4]
 242:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 243:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 244:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 245:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 146              		.loc 1 245 0
 147 003c 7B68     		ldr	r3, [r7, #4]
 148 003e 9B68     		ldr	r3, [r3, #8]
 149 0040 FB60     		str	r3, [r7, #12]
 246:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 247:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 150              		.loc 1 247 0
 151 0042 FA68     		ldr	r2, [r7, #12]
 152 0044 4FF2FD73 		movw	r3, #63485
 153 0048 CFF6F173 		movt	r3, 65521
 154 004c 1340     		ands	r3, r3, r2
 155 004e FB60     		str	r3, [r7, #12]
 248:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 249:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 250:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 251:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 252:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 156              		.loc 1 252 0
 157 0050 3B68     		ldr	r3, [r7]
 158 0052 DA68     		ldr	r2, [r3, #12]
 159 0054 3B68     		ldr	r3, [r7]
 160 0056 9B68     		ldr	r3, [r3, #8]
 161 0058 1A43     		orrs	r2, r2, r3
 253:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 162              		.loc 1 253 0
 163 005a 3B68     		ldr	r3, [r7]
 164 005c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 165 005e 5B00     		lsls	r3, r3, #1
 252:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 166              		.loc 1 252 0
 167 0060 1343     		orrs	r3, r3, r2
 168 0062 FA68     		ldr	r2, [r7, #12]
 169 0064 1343     		orrs	r3, r3, r2
 170 0066 FB60     		str	r3, [r7, #12]
 254:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 255:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 171              		.loc 1 255 0
 172 0068 7B68     		ldr	r3, [r7, #4]
 173 006a FA68     		ldr	r2, [r7, #12]
 174 006c 9A60     		str	r2, [r3, #8]
 256:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 257:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 258:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 259:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 175              		.loc 1 259 0
 176 006e 7B68     		ldr	r3, [r7, #4]
 177 0070 DB6A     		ldr	r3, [r3, #44]
 178 0072 FB60     		str	r3, [r7, #12]
 260:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear L bits */
 261:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 179              		.loc 1 261 0
 180 0074 FB68     		ldr	r3, [r7, #12]
 181 0076 23F47003 		bic	r3, r3, #15728640
 182 007a FB60     		str	r3, [r7, #12]
 262:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 263:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 264:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 183              		.loc 1 264 0
 184 007c 3B68     		ldr	r3, [r7]
 185 007e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 186 0080 013B     		subs	r3, r3, #1
 187 0082 DAB2     		uxtb	r2, r3
 188 0084 FB7A     		ldrb	r3, [r7, #11]
 189 0086 1343     		orrs	r3, r3, r2
 190 0088 FB72     		strb	r3, [r7, #11]
 265:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 191              		.loc 1 265 0
 192 008a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 193 008c 1B05     		lsls	r3, r3, #20
 194 008e FA68     		ldr	r2, [r7, #12]
 195 0090 1343     		orrs	r3, r3, r2
 196 0092 FB60     		str	r3, [r7, #12]
 266:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 267:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 197              		.loc 1 267 0
 198 0094 7B68     		ldr	r3, [r7, #4]
 199 0096 FA68     		ldr	r2, [r7, #12]
 200 0098 DA62     		str	r2, [r3, #44]
 268:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 201              		.loc 1 268 0
 202 009a 1437     		adds	r7, r7, #20
 203 009c BD46     		mov	sp, r7
 204              		@ sp needed
 205 009e 5DF8047B 		ldr	r7, [sp], #4
 206 00a2 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE30:
 210              		.section	.text.ADC_StructInit,"ax",%progbits
 211              		.align	2
 212              		.global	ADC_StructInit
 213              		.thumb
 214              		.thumb_func
 216              	ADC_StructInit:
 217              	.LFB31:
 269:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 270:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 271:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 272:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 273:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 274:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 275:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 276:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 218              		.loc 1 276 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 83B0     		sub	sp, sp, #12
 227              		.cfi_def_cfa_offset 16
 228 0004 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 230 0006 7860     		str	r0, [r7, #4]
 277:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 278:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 279:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 231              		.loc 1 279 0
 232 0008 7B68     		ldr	r3, [r7, #4]
 233 000a 0022     		movs	r2, #0
 234 000c 1A60     		str	r2, [r3]
 280:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 281:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 235              		.loc 1 281 0
 236 000e 7B68     		ldr	r3, [r7, #4]
 237 0010 0022     		movs	r2, #0
 238 0012 1A71     		strb	r2, [r3, #4]
 282:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 283:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 239              		.loc 1 283 0
 240 0014 7B68     		ldr	r3, [r7, #4]
 241 0016 0022     		movs	r2, #0
 242 0018 5A71     		strb	r2, [r3, #5]
 284:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 285:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 243              		.loc 1 285 0
 244 001a 7B68     		ldr	r3, [r7, #4]
 245 001c 0022     		movs	r2, #0
 246 001e 9A60     		str	r2, [r3, #8]
 286:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 287:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 247              		.loc 1 287 0
 248 0020 7B68     		ldr	r3, [r7, #4]
 249 0022 0022     		movs	r2, #0
 250 0024 DA60     		str	r2, [r3, #12]
 288:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 289:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 251              		.loc 1 289 0
 252 0026 7B68     		ldr	r3, [r7, #4]
 253 0028 0122     		movs	r2, #1
 254 002a 1A74     		strb	r2, [r3, #16]
 290:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 255              		.loc 1 290 0
 256 002c 0C37     		adds	r7, r7, #12
 257 002e BD46     		mov	sp, r7
 258              		@ sp needed
 259 0030 5DF8047B 		ldr	r7, [sp], #4
 260 0034 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE31:
 264 0036 00BF     		.section	.text.ADC_Cmd,"ax",%progbits
 265              		.align	2
 266              		.global	ADC_Cmd
 267              		.thumb
 268              		.thumb_func
 270              	ADC_Cmd:
 271              	.LFB32:
 291:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 292:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 293:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 294:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 295:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 296:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 297:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 298:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 299:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 300:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 272              		.loc 1 300 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277 0000 80B4     		push	{r7}
 278              		.cfi_def_cfa_offset 4
 279              		.cfi_offset 7, -4
 280 0002 83B0     		sub	sp, sp, #12
 281              		.cfi_def_cfa_offset 16
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 285 0008 0B46     		mov	r3, r1
 286 000a FB70     		strb	r3, [r7, #3]
 301:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 302:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 303:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 304:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 287              		.loc 1 304 0
 288 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 289 000e 002B     		cmp	r3, #0
 290 0010 06D0     		beq	.L8
 305:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 306:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 307:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 291              		.loc 1 307 0
 292 0012 7B68     		ldr	r3, [r7, #4]
 293 0014 9B68     		ldr	r3, [r3, #8]
 294 0016 43F00102 		orr	r2, r3, #1
 295 001a 7B68     		ldr	r3, [r7, #4]
 296 001c 9A60     		str	r2, [r3, #8]
 297 001e 05E0     		b	.L7
 298              	.L8:
 308:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 309:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 310:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 311:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 312:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 299              		.loc 1 312 0
 300 0020 7B68     		ldr	r3, [r7, #4]
 301 0022 9B68     		ldr	r3, [r3, #8]
 302 0024 23F00102 		bic	r2, r3, #1
 303 0028 7B68     		ldr	r3, [r7, #4]
 304 002a 9A60     		str	r2, [r3, #8]
 305              	.L7:
 313:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 314:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 306              		.loc 1 314 0
 307 002c 0C37     		adds	r7, r7, #12
 308 002e BD46     		mov	sp, r7
 309              		@ sp needed
 310 0030 5DF8047B 		ldr	r7, [sp], #4
 311 0034 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE32:
 315 0036 00BF     		.section	.text.ADC_DMACmd,"ax",%progbits
 316              		.align	2
 317              		.global	ADC_DMACmd
 318              		.thumb
 319              		.thumb_func
 321              	ADC_DMACmd:
 322              	.LFB33:
 315:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 316:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 317:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 318:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 319:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 320:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 321:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 322:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 323:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 324:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 325:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 323              		.loc 1 325 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 83B0     		sub	sp, sp, #12
 332              		.cfi_def_cfa_offset 16
 333 0004 00AF     		add	r7, sp, #0
 334              		.cfi_def_cfa_register 7
 335 0006 7860     		str	r0, [r7, #4]
 336 0008 0B46     		mov	r3, r1
 337 000a FB70     		strb	r3, [r7, #3]
 326:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 327:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 328:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 329:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 338              		.loc 1 329 0
 339 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 340 000e 002B     		cmp	r3, #0
 341 0010 06D0     		beq	.L11
 330:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 331:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 332:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 342              		.loc 1 332 0
 343 0012 7B68     		ldr	r3, [r7, #4]
 344 0014 9B68     		ldr	r3, [r3, #8]
 345 0016 43F48072 		orr	r2, r3, #256
 346 001a 7B68     		ldr	r3, [r7, #4]
 347 001c 9A60     		str	r2, [r3, #8]
 348 001e 05E0     		b	.L10
 349              	.L11:
 333:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 334:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 335:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 336:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 337:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 350              		.loc 1 337 0
 351 0020 7B68     		ldr	r3, [r7, #4]
 352 0022 9B68     		ldr	r3, [r3, #8]
 353 0024 23F48072 		bic	r2, r3, #256
 354 0028 7B68     		ldr	r3, [r7, #4]
 355 002a 9A60     		str	r2, [r3, #8]
 356              	.L10:
 338:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 339:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 357              		.loc 1 339 0
 358 002c 0C37     		adds	r7, r7, #12
 359 002e BD46     		mov	sp, r7
 360              		@ sp needed
 361 0030 5DF8047B 		ldr	r7, [sp], #4
 362 0034 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE33:
 366 0036 00BF     		.section	.text.ADC_ITConfig,"ax",%progbits
 367              		.align	2
 368              		.global	ADC_ITConfig
 369              		.thumb
 370              		.thumb_func
 372              	ADC_ITConfig:
 373              	.LFB34:
 340:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 341:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 342:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 343:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 344:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 345:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 346:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 347:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 348:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 349:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 350:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 351:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 352:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 353:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 354:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 374              		.loc 1 354 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 16
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 7, -4
 382 0002 85B0     		sub	sp, sp, #20
 383              		.cfi_def_cfa_offset 24
 384 0004 00AF     		add	r7, sp, #0
 385              		.cfi_def_cfa_register 7
 386 0006 7860     		str	r0, [r7, #4]
 387 0008 1346     		mov	r3, r2
 388 000a 0A46     		mov	r2, r1	@ movhi
 389 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 390 000e 7B70     		strb	r3, [r7, #1]
 355:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 391              		.loc 1 355 0
 392 0010 0023     		movs	r3, #0
 393 0012 FB73     		strb	r3, [r7, #15]
 356:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 357:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 358:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 360:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 361:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 394              		.loc 1 361 0
 395 0014 7B88     		ldrh	r3, [r7, #2]	@ movhi
 396 0016 FB73     		strb	r3, [r7, #15]
 362:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 397              		.loc 1 362 0
 398 0018 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 399 001a 002B     		cmp	r3, #0
 400 001c 06D0     		beq	.L14
 363:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 364:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 365:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 401              		.loc 1 365 0
 402 001e 7B68     		ldr	r3, [r7, #4]
 403 0020 5A68     		ldr	r2, [r3, #4]
 404 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 405 0024 1A43     		orrs	r2, r2, r3
 406 0026 7B68     		ldr	r3, [r7, #4]
 407 0028 5A60     		str	r2, [r3, #4]
 408 002a 06E0     		b	.L13
 409              	.L14:
 366:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 367:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 368:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 369:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 370:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 410              		.loc 1 370 0
 411 002c 7B68     		ldr	r3, [r7, #4]
 412 002e 5A68     		ldr	r2, [r3, #4]
 413 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 414 0032 DB43     		mvns	r3, r3
 415 0034 1A40     		ands	r2, r2, r3
 416 0036 7B68     		ldr	r3, [r7, #4]
 417 0038 5A60     		str	r2, [r3, #4]
 418              	.L13:
 371:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 372:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 419              		.loc 1 372 0
 420 003a 1437     		adds	r7, r7, #20
 421 003c BD46     		mov	sp, r7
 422              		@ sp needed
 423 003e 5DF8047B 		ldr	r7, [sp], #4
 424 0042 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE34:
 428              		.section	.text.ADC_ResetCalibration,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_ResetCalibration
 431              		.thumb
 432              		.thumb_func
 434              	ADC_ResetCalibration:
 435              	.LFB35:
 373:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 374:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 375:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 376:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 377:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 378:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 379:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 380:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 436              		.loc 1 380 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 0002 83B0     		sub	sp, sp, #12
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 381:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 382:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 383:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 384:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 449              		.loc 1 384 0
 450 0008 7B68     		ldr	r3, [r7, #4]
 451 000a 9B68     		ldr	r3, [r3, #8]
 452 000c 43F00802 		orr	r2, r3, #8
 453 0010 7B68     		ldr	r3, [r7, #4]
 454 0012 9A60     		str	r2, [r3, #8]
 385:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 455              		.loc 1 385 0
 456 0014 0C37     		adds	r7, r7, #12
 457 0016 BD46     		mov	sp, r7
 458              		@ sp needed
 459 0018 5DF8047B 		ldr	r7, [sp], #4
 460 001c 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE35:
 464 001e 00BF     		.section	.text.ADC_GetResetCalibrationStatus,"ax",%progbits
 465              		.align	2
 466              		.global	ADC_GetResetCalibrationStatus
 467              		.thumb
 468              		.thumb_func
 470              	ADC_GetResetCalibrationStatus:
 471              	.LFB36:
 386:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 387:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 388:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 389:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 390:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 391:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 392:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 393:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 472              		.loc 1 393 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 16
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              		.cfi_def_cfa_offset 4
 479              		.cfi_offset 7, -4
 480 0002 85B0     		sub	sp, sp, #20
 481              		.cfi_def_cfa_offset 24
 482 0004 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 484 0006 7860     		str	r0, [r7, #4]
 394:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 485              		.loc 1 394 0
 486 0008 0023     		movs	r3, #0
 487 000a FB73     		strb	r3, [r7, #15]
 395:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 396:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 397:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 398:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 488              		.loc 1 398 0
 489 000c 7B68     		ldr	r3, [r7, #4]
 490 000e 9B68     		ldr	r3, [r3, #8]
 491 0010 03F00803 		and	r3, r3, #8
 492 0014 002B     		cmp	r3, #0
 493 0016 02D0     		beq	.L18
 399:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 400:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 401:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 494              		.loc 1 401 0
 495 0018 0123     		movs	r3, #1
 496 001a FB73     		strb	r3, [r7, #15]
 497 001c 01E0     		b	.L19
 498              	.L18:
 402:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 403:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 404:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 405:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 406:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 499              		.loc 1 406 0
 500 001e 0023     		movs	r3, #0
 501 0020 FB73     		strb	r3, [r7, #15]
 502              	.L19:
 407:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 408:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 409:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 503              		.loc 1 409 0
 504 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 410:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 505              		.loc 1 410 0
 506 0024 1846     		mov	r0, r3
 507 0026 1437     		adds	r7, r7, #20
 508 0028 BD46     		mov	sp, r7
 509              		@ sp needed
 510 002a 5DF8047B 		ldr	r7, [sp], #4
 511 002e 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE36:
 515              		.section	.text.ADC_StartCalibration,"ax",%progbits
 516              		.align	2
 517              		.global	ADC_StartCalibration
 518              		.thumb
 519              		.thumb_func
 521              	ADC_StartCalibration:
 522              	.LFB37:
 411:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 412:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 413:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 414:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 415:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 416:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 417:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 418:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 523              		.loc 1 418 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 8
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0000 80B4     		push	{r7}
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 0002 83B0     		sub	sp, sp, #12
 532              		.cfi_def_cfa_offset 16
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 7860     		str	r0, [r7, #4]
 419:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 420:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 421:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 422:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 536              		.loc 1 422 0
 537 0008 7B68     		ldr	r3, [r7, #4]
 538 000a 9B68     		ldr	r3, [r3, #8]
 539 000c 43F00402 		orr	r2, r3, #4
 540 0010 7B68     		ldr	r3, [r7, #4]
 541 0012 9A60     		str	r2, [r3, #8]
 423:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 542              		.loc 1 423 0
 543 0014 0C37     		adds	r7, r7, #12
 544 0016 BD46     		mov	sp, r7
 545              		@ sp needed
 546 0018 5DF8047B 		ldr	r7, [sp], #4
 547 001c 7047     		bx	lr
 548              		.cfi_endproc
 549              	.LFE37:
 551 001e 00BF     		.section	.text.ADC_GetCalibrationStatus,"ax",%progbits
 552              		.align	2
 553              		.global	ADC_GetCalibrationStatus
 554              		.thumb
 555              		.thumb_func
 557              	ADC_GetCalibrationStatus:
 558              	.LFB38:
 424:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 425:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 426:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 427:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 428:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 429:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 430:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 431:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 559              		.loc 1 431 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 16
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564 0000 80B4     		push	{r7}
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 85B0     		sub	sp, sp, #20
 568              		.cfi_def_cfa_offset 24
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 7860     		str	r0, [r7, #4]
 432:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 572              		.loc 1 432 0
 573 0008 0023     		movs	r3, #0
 574 000a FB73     		strb	r3, [r7, #15]
 433:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 434:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 435:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 436:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 575              		.loc 1 436 0
 576 000c 7B68     		ldr	r3, [r7, #4]
 577 000e 9B68     		ldr	r3, [r3, #8]
 578 0010 03F00403 		and	r3, r3, #4
 579 0014 002B     		cmp	r3, #0
 580 0016 02D0     		beq	.L23
 437:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 438:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 439:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 581              		.loc 1 439 0
 582 0018 0123     		movs	r3, #1
 583 001a FB73     		strb	r3, [r7, #15]
 584 001c 01E0     		b	.L24
 585              	.L23:
 440:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 441:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 442:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 443:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 444:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 586              		.loc 1 444 0
 587 001e 0023     		movs	r3, #0
 588 0020 FB73     		strb	r3, [r7, #15]
 589              	.L24:
 445:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 446:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 447:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 590              		.loc 1 447 0
 591 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 592              		.loc 1 448 0
 593 0024 1846     		mov	r0, r3
 594 0026 1437     		adds	r7, r7, #20
 595 0028 BD46     		mov	sp, r7
 596              		@ sp needed
 597 002a 5DF8047B 		ldr	r7, [sp], #4
 598 002e 7047     		bx	lr
 599              		.cfi_endproc
 600              	.LFE38:
 602              		.section	.text.ADC_SoftwareStartConvCmd,"ax",%progbits
 603              		.align	2
 604              		.global	ADC_SoftwareStartConvCmd
 605              		.thumb
 606              		.thumb_func
 608              	ADC_SoftwareStartConvCmd:
 609              	.LFB39:
 449:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 450:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 451:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 452:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 453:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 454:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 455:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 456:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 457:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 458:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 610              		.loc 1 458 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 8
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615 0000 80B4     		push	{r7}
 616              		.cfi_def_cfa_offset 4
 617              		.cfi_offset 7, -4
 618 0002 83B0     		sub	sp, sp, #12
 619              		.cfi_def_cfa_offset 16
 620 0004 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 622 0006 7860     		str	r0, [r7, #4]
 623 0008 0B46     		mov	r3, r1
 624 000a FB70     		strb	r3, [r7, #3]
 459:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 460:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 461:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 462:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 625              		.loc 1 462 0
 626 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 627 000e 002B     		cmp	r3, #0
 628 0010 06D0     		beq	.L27
 463:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 464:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 465:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC conversion */
 466:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 629              		.loc 1 466 0
 630 0012 7B68     		ldr	r3, [r7, #4]
 631 0014 9B68     		ldr	r3, [r3, #8]
 632 0016 43F4A002 		orr	r2, r3, #5242880
 633 001a 7B68     		ldr	r3, [r7, #4]
 634 001c 9A60     		str	r2, [r3, #8]
 635 001e 05E0     		b	.L26
 636              	.L27:
 467:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 468:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 469:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 470:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 471:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 637              		.loc 1 472 0
 638 0020 7B68     		ldr	r3, [r7, #4]
 639 0022 9B68     		ldr	r3, [r3, #8]
 640 0024 23F4A002 		bic	r2, r3, #5242880
 641 0028 7B68     		ldr	r3, [r7, #4]
 642 002a 9A60     		str	r2, [r3, #8]
 643              	.L26:
 473:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 474:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 644              		.loc 1 474 0
 645 002c 0C37     		adds	r7, r7, #12
 646 002e BD46     		mov	sp, r7
 647              		@ sp needed
 648 0030 5DF8047B 		ldr	r7, [sp], #4
 649 0034 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE39:
 653 0036 00BF     		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 654              		.align	2
 655              		.global	ADC_GetSoftwareStartConvStatus
 656              		.thumb
 657              		.thumb_func
 659              	ADC_GetSoftwareStartConvStatus:
 660              	.LFB40:
 475:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 476:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 477:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 478:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 479:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 480:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 481:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 482:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 661              		.loc 1 482 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 16
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666 0000 80B4     		push	{r7}
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 85B0     		sub	sp, sp, #20
 670              		.cfi_def_cfa_offset 24
 671 0004 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 673 0006 7860     		str	r0, [r7, #4]
 483:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 674              		.loc 1 483 0
 675 0008 0023     		movs	r3, #0
 676 000a FB73     		strb	r3, [r7, #15]
 484:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 485:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 486:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 487:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 677              		.loc 1 487 0
 678 000c 7B68     		ldr	r3, [r7, #4]
 679 000e 9B68     		ldr	r3, [r3, #8]
 680 0010 03F48003 		and	r3, r3, #4194304
 681 0014 002B     		cmp	r3, #0
 682 0016 02D0     		beq	.L30
 488:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 489:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 490:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 683              		.loc 1 490 0
 684 0018 0123     		movs	r3, #1
 685 001a FB73     		strb	r3, [r7, #15]
 686 001c 01E0     		b	.L31
 687              	.L30:
 491:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 492:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 493:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 494:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 495:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 688              		.loc 1 495 0
 689 001e 0023     		movs	r3, #0
 690 0020 FB73     		strb	r3, [r7, #15]
 691              	.L31:
 496:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 497:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 498:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 692              		.loc 1 498 0
 693 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 499:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 694              		.loc 1 499 0
 695 0024 1846     		mov	r0, r3
 696 0026 1437     		adds	r7, r7, #20
 697 0028 BD46     		mov	sp, r7
 698              		@ sp needed
 699 002a 5DF8047B 		ldr	r7, [sp], #4
 700 002e 7047     		bx	lr
 701              		.cfi_endproc
 702              	.LFE40:
 704              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 705              		.align	2
 706              		.global	ADC_DiscModeChannelCountConfig
 707              		.thumb
 708              		.thumb_func
 710              	ADC_DiscModeChannelCountConfig:
 711              	.LFB41:
 500:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 501:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 502:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 503:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         group channel.
 504:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 505:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 506:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 507:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 508:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 509:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 510:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 712              		.loc 1 510 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 16
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 7, -4
 720 0002 85B0     		sub	sp, sp, #20
 721              		.cfi_def_cfa_offset 24
 722 0004 00AF     		add	r7, sp, #0
 723              		.cfi_def_cfa_register 7
 724 0006 7860     		str	r0, [r7, #4]
 725 0008 0B46     		mov	r3, r1
 726 000a FB70     		strb	r3, [r7, #3]
 511:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 727              		.loc 1 511 0
 728 000c 0023     		movs	r3, #0
 729 000e FB60     		str	r3, [r7, #12]
 512:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 730              		.loc 1 512 0
 731 0010 0023     		movs	r3, #0
 732 0012 BB60     		str	r3, [r7, #8]
 513:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 514:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 515:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 516:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
 517:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 733              		.loc 1 517 0
 734 0014 7B68     		ldr	r3, [r7, #4]
 735 0016 5B68     		ldr	r3, [r3, #4]
 736 0018 FB60     		str	r3, [r7, #12]
 518:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 519:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 737              		.loc 1 519 0
 738 001a FB68     		ldr	r3, [r7, #12]
 739 001c 23F46043 		bic	r3, r3, #57344
 740 0020 FB60     		str	r3, [r7, #12]
 520:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 521:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 741              		.loc 1 521 0
 742 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 743 0024 013B     		subs	r3, r3, #1
 744 0026 BB60     		str	r3, [r7, #8]
 522:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 745              		.loc 1 522 0
 746 0028 BB68     		ldr	r3, [r7, #8]
 747 002a 5B03     		lsls	r3, r3, #13
 748 002c FA68     		ldr	r2, [r7, #12]
 749 002e 1343     		orrs	r3, r3, r2
 750 0030 FB60     		str	r3, [r7, #12]
 523:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
 524:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 751              		.loc 1 524 0
 752 0032 7B68     		ldr	r3, [r7, #4]
 753 0034 FA68     		ldr	r2, [r7, #12]
 754 0036 5A60     		str	r2, [r3, #4]
 525:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 755              		.loc 1 525 0
 756 0038 1437     		adds	r7, r7, #20
 757 003a BD46     		mov	sp, r7
 758              		@ sp needed
 759 003c 5DF8047B 		ldr	r7, [sp], #4
 760 0040 7047     		bx	lr
 761              		.cfi_endproc
 762              	.LFE41:
 764 0042 00BF     		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 765              		.align	2
 766              		.global	ADC_DiscModeCmd
 767              		.thumb
 768              		.thumb_func
 770              	ADC_DiscModeCmd:
 771              	.LFB42:
 526:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 527:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 528:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 529:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 530:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 531:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 532:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         on regular group channel.
 533:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 534:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 535:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 536:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 537:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 772              		.loc 1 537 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 8
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777 0000 80B4     		push	{r7}
 778              		.cfi_def_cfa_offset 4
 779              		.cfi_offset 7, -4
 780 0002 83B0     		sub	sp, sp, #12
 781              		.cfi_def_cfa_offset 16
 782 0004 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 784 0006 7860     		str	r0, [r7, #4]
 785 0008 0B46     		mov	r3, r1
 786 000a FB70     		strb	r3, [r7, #3]
 538:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 539:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 540:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 541:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 787              		.loc 1 541 0
 788 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 789 000e 002B     		cmp	r3, #0
 790 0010 06D0     		beq	.L35
 542:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 543:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 544:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 791              		.loc 1 544 0
 792 0012 7B68     		ldr	r3, [r7, #4]
 793 0014 5B68     		ldr	r3, [r3, #4]
 794 0016 43F40062 		orr	r2, r3, #2048
 795 001a 7B68     		ldr	r3, [r7, #4]
 796 001c 5A60     		str	r2, [r3, #4]
 797 001e 05E0     		b	.L34
 798              	.L35:
 545:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 546:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 547:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 548:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 549:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 799              		.loc 1 549 0
 800 0020 7B68     		ldr	r3, [r7, #4]
 801 0022 5B68     		ldr	r3, [r3, #4]
 802 0024 23F40062 		bic	r2, r3, #2048
 803 0028 7B68     		ldr	r3, [r7, #4]
 804 002a 5A60     		str	r2, [r3, #4]
 805              	.L34:
 550:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 551:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 806              		.loc 1 551 0
 807 002c 0C37     		adds	r7, r7, #12
 808 002e BD46     		mov	sp, r7
 809              		@ sp needed
 810 0030 5DF8047B 		ldr	r7, [sp], #4
 811 0034 7047     		bx	lr
 812              		.cfi_endproc
 813              	.LFE42:
 815 0036 00BF     		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 816              		.align	2
 817              		.global	ADC_RegularChannelConfig
 818              		.thumb
 819              		.thumb_func
 821              	ADC_RegularChannelConfig:
 822              	.LFB43:
 552:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 553:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 554:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 555:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 556:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 557:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 558:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 559:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 560:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 561:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 562:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 563:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 564:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 565:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 566:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 567:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 568:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 569:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 570:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 571:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 572:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 573:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 574:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 575:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 576:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 577:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 578:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 579:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 580:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 581:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 582:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 583:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 584:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 585:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 586:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 587:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 588:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 589:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 590:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 591:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 823              		.loc 1 591 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 16
 826              		@ frame_needed = 1, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828 0000 80B4     		push	{r7}
 829              		.cfi_def_cfa_offset 4
 830              		.cfi_offset 7, -4
 831 0002 85B0     		sub	sp, sp, #20
 832              		.cfi_def_cfa_offset 24
 833 0004 00AF     		add	r7, sp, #0
 834              		.cfi_def_cfa_register 7
 835 0006 7860     		str	r0, [r7, #4]
 836 0008 F970     		strb	r1, [r7, #3]
 837 000a BA70     		strb	r2, [r7, #2]
 838 000c 7B70     		strb	r3, [r7, #1]
 592:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 839              		.loc 1 592 0
 840 000e 0023     		movs	r3, #0
 841 0010 FB60     		str	r3, [r7, #12]
 842 0012 0023     		movs	r3, #0
 843 0014 BB60     		str	r3, [r7, #8]
 593:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 594:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 595:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 596:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 597:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 598:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 599:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 844              		.loc 1 599 0
 845 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 846 0018 092B     		cmp	r3, #9
 847 001a 23D9     		bls	.L38
 600:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 601:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 602:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 848              		.loc 1 602 0
 849 001c 7B68     		ldr	r3, [r7, #4]
 850 001e DB68     		ldr	r3, [r3, #12]
 851 0020 FB60     		str	r3, [r7, #12]
 603:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 604:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 852              		.loc 1 604 0
 853 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 854 0024 A3F10A02 		sub	r2, r3, #10
 855 0028 1346     		mov	r3, r2
 856 002a 5B00     		lsls	r3, r3, #1
 857 002c 1344     		add	r3, r3, r2
 858 002e 0722     		movs	r2, #7
 859 0030 02FA03F3 		lsl	r3, r2, r3
 860 0034 BB60     		str	r3, [r7, #8]
 605:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 606:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 861              		.loc 1 606 0
 862 0036 BB68     		ldr	r3, [r7, #8]
 863 0038 DB43     		mvns	r3, r3
 864 003a FA68     		ldr	r2, [r7, #12]
 865 003c 1340     		ands	r3, r3, r2
 866 003e FB60     		str	r3, [r7, #12]
 607:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 608:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 867              		.loc 1 608 0
 868 0040 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 869 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 870 0044 A3F10A02 		sub	r2, r3, #10
 871 0048 1346     		mov	r3, r2
 872 004a 5B00     		lsls	r3, r3, #1
 873 004c 1344     		add	r3, r3, r2
 874 004e 01FA03F3 		lsl	r3, r1, r3
 875 0052 BB60     		str	r3, [r7, #8]
 609:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 610:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 876              		.loc 1 610 0
 877 0054 FA68     		ldr	r2, [r7, #12]
 878 0056 BB68     		ldr	r3, [r7, #8]
 879 0058 1343     		orrs	r3, r3, r2
 880 005a FB60     		str	r3, [r7, #12]
 611:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 612:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 881              		.loc 1 612 0
 882 005c 7B68     		ldr	r3, [r7, #4]
 883 005e FA68     		ldr	r2, [r7, #12]
 884 0060 DA60     		str	r2, [r3, #12]
 885 0062 1EE0     		b	.L39
 886              	.L38:
 613:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 614:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 615:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 616:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 617:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 887              		.loc 1 617 0
 888 0064 7B68     		ldr	r3, [r7, #4]
 889 0066 1B69     		ldr	r3, [r3, #16]
 890 0068 FB60     		str	r3, [r7, #12]
 618:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 619:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 891              		.loc 1 619 0
 892 006a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 893 006c 1346     		mov	r3, r2
 894 006e 5B00     		lsls	r3, r3, #1
 895 0070 1344     		add	r3, r3, r2
 896 0072 0722     		movs	r2, #7
 897 0074 02FA03F3 		lsl	r3, r2, r3
 898 0078 BB60     		str	r3, [r7, #8]
 620:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 621:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 899              		.loc 1 621 0
 900 007a BB68     		ldr	r3, [r7, #8]
 901 007c DB43     		mvns	r3, r3
 902 007e FA68     		ldr	r2, [r7, #12]
 903 0080 1340     		ands	r3, r3, r2
 904 0082 FB60     		str	r3, [r7, #12]
 622:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 623:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 905              		.loc 1 623 0
 906 0084 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 907 0086 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 908 0088 1346     		mov	r3, r2
 909 008a 5B00     		lsls	r3, r3, #1
 910 008c 1344     		add	r3, r3, r2
 911 008e 01FA03F3 		lsl	r3, r1, r3
 912 0092 BB60     		str	r3, [r7, #8]
 624:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 625:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 913              		.loc 1 625 0
 914 0094 FA68     		ldr	r2, [r7, #12]
 915 0096 BB68     		ldr	r3, [r7, #8]
 916 0098 1343     		orrs	r3, r3, r2
 917 009a FB60     		str	r3, [r7, #12]
 626:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 627:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 918              		.loc 1 627 0
 919 009c 7B68     		ldr	r3, [r7, #4]
 920 009e FA68     		ldr	r2, [r7, #12]
 921 00a0 1A61     		str	r2, [r3, #16]
 922              	.L39:
 628:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 629:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 630:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (Rank < 7)
 923              		.loc 1 630 0
 924 00a2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 925 00a4 062B     		cmp	r3, #6
 926 00a6 21D8     		bhi	.L40
 631:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 632:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 633:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 927              		.loc 1 633 0
 928 00a8 7B68     		ldr	r3, [r7, #4]
 929 00aa 5B6B     		ldr	r3, [r3, #52]
 930 00ac FB60     		str	r3, [r7, #12]
 634:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 635:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 931              		.loc 1 635 0
 932 00ae BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 933 00b0 5A1E     		subs	r2, r3, #1
 934 00b2 1346     		mov	r3, r2
 935 00b4 9B00     		lsls	r3, r3, #2
 936 00b6 1344     		add	r3, r3, r2
 937 00b8 1F22     		movs	r2, #31
 938 00ba 02FA03F3 		lsl	r3, r2, r3
 939 00be BB60     		str	r3, [r7, #8]
 636:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 637:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 940              		.loc 1 637 0
 941 00c0 BB68     		ldr	r3, [r7, #8]
 942 00c2 DB43     		mvns	r3, r3
 943 00c4 FA68     		ldr	r2, [r7, #12]
 944 00c6 1340     		ands	r3, r3, r2
 945 00c8 FB60     		str	r3, [r7, #12]
 638:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 639:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 946              		.loc 1 639 0
 947 00ca F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 948 00cc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 949 00ce 5A1E     		subs	r2, r3, #1
 950 00d0 1346     		mov	r3, r2
 951 00d2 9B00     		lsls	r3, r3, #2
 952 00d4 1344     		add	r3, r3, r2
 953 00d6 01FA03F3 		lsl	r3, r1, r3
 954 00da BB60     		str	r3, [r7, #8]
 640:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 641:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 955              		.loc 1 641 0
 956 00dc FA68     		ldr	r2, [r7, #12]
 957 00de BB68     		ldr	r3, [r7, #8]
 958 00e0 1343     		orrs	r3, r3, r2
 959 00e2 FB60     		str	r3, [r7, #12]
 642:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 643:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 960              		.loc 1 643 0
 961 00e4 7B68     		ldr	r3, [r7, #4]
 962 00e6 FA68     		ldr	r2, [r7, #12]
 963 00e8 5A63     		str	r2, [r3, #52]
 964 00ea 47E0     		b	.L37
 965              	.L40:
 644:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 645:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 646:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 966              		.loc 1 646 0
 967 00ec BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 968 00ee 0C2B     		cmp	r3, #12
 969 00f0 21D8     		bhi	.L42
 647:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 648:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 649:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 970              		.loc 1 649 0
 971 00f2 7B68     		ldr	r3, [r7, #4]
 972 00f4 1B6B     		ldr	r3, [r3, #48]
 973 00f6 FB60     		str	r3, [r7, #12]
 650:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 651:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 974              		.loc 1 651 0
 975 00f8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 976 00fa DA1F     		subs	r2, r3, #7
 977 00fc 1346     		mov	r3, r2
 978 00fe 9B00     		lsls	r3, r3, #2
 979 0100 1344     		add	r3, r3, r2
 980 0102 1F22     		movs	r2, #31
 981 0104 02FA03F3 		lsl	r3, r2, r3
 982 0108 BB60     		str	r3, [r7, #8]
 652:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 653:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 983              		.loc 1 653 0
 984 010a BB68     		ldr	r3, [r7, #8]
 985 010c DB43     		mvns	r3, r3
 986 010e FA68     		ldr	r2, [r7, #12]
 987 0110 1340     		ands	r3, r3, r2
 988 0112 FB60     		str	r3, [r7, #12]
 654:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 655:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 989              		.loc 1 655 0
 990 0114 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 991 0116 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 992 0118 DA1F     		subs	r2, r3, #7
 993 011a 1346     		mov	r3, r2
 994 011c 9B00     		lsls	r3, r3, #2
 995 011e 1344     		add	r3, r3, r2
 996 0120 01FA03F3 		lsl	r3, r1, r3
 997 0124 BB60     		str	r3, [r7, #8]
 656:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 657:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 998              		.loc 1 657 0
 999 0126 FA68     		ldr	r2, [r7, #12]
 1000 0128 BB68     		ldr	r3, [r7, #8]
 1001 012a 1343     		orrs	r3, r3, r2
 1002 012c FB60     		str	r3, [r7, #12]
 658:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 659:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 1003              		.loc 1 659 0
 1004 012e 7B68     		ldr	r3, [r7, #4]
 1005 0130 FA68     		ldr	r2, [r7, #12]
 1006 0132 1A63     		str	r2, [r3, #48]
 1007 0134 22E0     		b	.L37
 1008              	.L42:
 660:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 661:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 662:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 663:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 664:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 665:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 1009              		.loc 1 665 0
 1010 0136 7B68     		ldr	r3, [r7, #4]
 1011 0138 DB6A     		ldr	r3, [r3, #44]
 1012 013a FB60     		str	r3, [r7, #12]
 666:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 667:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 1013              		.loc 1 667 0
 1014 013c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1015 013e A3F10D02 		sub	r2, r3, #13
 1016 0142 1346     		mov	r3, r2
 1017 0144 9B00     		lsls	r3, r3, #2
 1018 0146 1344     		add	r3, r3, r2
 1019 0148 1F22     		movs	r2, #31
 1020 014a 02FA03F3 		lsl	r3, r2, r3
 1021 014e BB60     		str	r3, [r7, #8]
 668:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 669:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1022              		.loc 1 669 0
 1023 0150 BB68     		ldr	r3, [r7, #8]
 1024 0152 DB43     		mvns	r3, r3
 1025 0154 FA68     		ldr	r2, [r7, #12]
 1026 0156 1340     		ands	r3, r3, r2
 1027 0158 FB60     		str	r3, [r7, #12]
 670:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 671:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1028              		.loc 1 671 0
 1029 015a F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1030 015c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1031 015e A3F10D02 		sub	r2, r3, #13
 1032 0162 1346     		mov	r3, r2
 1033 0164 9B00     		lsls	r3, r3, #2
 1034 0166 1344     		add	r3, r3, r2
 1035 0168 01FA03F3 		lsl	r3, r1, r3
 1036 016c BB60     		str	r3, [r7, #8]
 672:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 673:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1037              		.loc 1 673 0
 1038 016e FA68     		ldr	r2, [r7, #12]
 1039 0170 BB68     		ldr	r3, [r7, #8]
 1040 0172 1343     		orrs	r3, r3, r2
 1041 0174 FB60     		str	r3, [r7, #12]
 674:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 675:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 1042              		.loc 1 675 0
 1043 0176 7B68     		ldr	r3, [r7, #4]
 1044 0178 FA68     		ldr	r2, [r7, #12]
 1045 017a DA62     		str	r2, [r3, #44]
 1046              	.L37:
 676:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 677:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1047              		.loc 1 677 0
 1048 017c 1437     		adds	r7, r7, #20
 1049 017e BD46     		mov	sp, r7
 1050              		@ sp needed
 1051 0180 5DF8047B 		ldr	r7, [sp], #4
 1052 0184 7047     		bx	lr
 1053              		.cfi_endproc
 1054              	.LFE43:
 1056 0186 00BF     		.section	.text.ADC_ExternalTrigConvCmd,"ax",%progbits
 1057              		.align	2
 1058              		.global	ADC_ExternalTrigConvCmd
 1059              		.thumb
 1060              		.thumb_func
 1062              	ADC_ExternalTrigConvCmd:
 1063              	.LFB44:
 678:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 679:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 680:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 681:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 682:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 683:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 684:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 685:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 686:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 687:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1064              		.loc 1 687 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 8
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068              		@ link register save eliminated.
 1069 0000 80B4     		push	{r7}
 1070              		.cfi_def_cfa_offset 4
 1071              		.cfi_offset 7, -4
 1072 0002 83B0     		sub	sp, sp, #12
 1073              		.cfi_def_cfa_offset 16
 1074 0004 00AF     		add	r7, sp, #0
 1075              		.cfi_def_cfa_register 7
 1076 0006 7860     		str	r0, [r7, #4]
 1077 0008 0B46     		mov	r3, r1
 1078 000a FB70     		strb	r3, [r7, #3]
 688:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 689:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 690:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 691:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1079              		.loc 1 691 0
 1080 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1081 000e 002B     		cmp	r3, #0
 1082 0010 06D0     		beq	.L44
 692:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 693:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 694:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 1083              		.loc 1 694 0
 1084 0012 7B68     		ldr	r3, [r7, #4]
 1085 0014 9B68     		ldr	r3, [r3, #8]
 1086 0016 43F48012 		orr	r2, r3, #1048576
 1087 001a 7B68     		ldr	r3, [r7, #4]
 1088 001c 9A60     		str	r2, [r3, #8]
 1089 001e 05E0     		b	.L43
 1090              	.L44:
 695:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 696:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 697:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 698:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 699:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 1091              		.loc 1 699 0
 1092 0020 7B68     		ldr	r3, [r7, #4]
 1093 0022 9B68     		ldr	r3, [r3, #8]
 1094 0024 23F48012 		bic	r2, r3, #1048576
 1095 0028 7B68     		ldr	r3, [r7, #4]
 1096 002a 9A60     		str	r2, [r3, #8]
 1097              	.L43:
 700:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 701:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1098              		.loc 1 701 0
 1099 002c 0C37     		adds	r7, r7, #12
 1100 002e BD46     		mov	sp, r7
 1101              		@ sp needed
 1102 0030 5DF8047B 		ldr	r7, [sp], #4
 1103 0034 7047     		bx	lr
 1104              		.cfi_endproc
 1105              	.LFE44:
 1107 0036 00BF     		.section	.text.ADC_GetConversionValue,"ax",%progbits
 1108              		.align	2
 1109              		.global	ADC_GetConversionValue
 1110              		.thumb
 1111              		.thumb_func
 1113              	ADC_GetConversionValue:
 1114              	.LFB45:
 702:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 703:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 704:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 705:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 706:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 707:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 708:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 709:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1115              		.loc 1 709 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 8
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 1120 0000 80B4     		push	{r7}
 1121              		.cfi_def_cfa_offset 4
 1122              		.cfi_offset 7, -4
 1123 0002 83B0     		sub	sp, sp, #12
 1124              		.cfi_def_cfa_offset 16
 1125 0004 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 710:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 711:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 712:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 713:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 1128              		.loc 1 713 0
 1129 0008 7B68     		ldr	r3, [r7, #4]
 1130 000a DB6C     		ldr	r3, [r3, #76]
 1131 000c 9BB2     		uxth	r3, r3
 714:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1132              		.loc 1 714 0
 1133 000e 1846     		mov	r0, r3
 1134 0010 0C37     		adds	r7, r7, #12
 1135 0012 BD46     		mov	sp, r7
 1136              		@ sp needed
 1137 0014 5DF8047B 		ldr	r7, [sp], #4
 1138 0018 7047     		bx	lr
 1139              		.cfi_endproc
 1140              	.LFE45:
 1142 001a 00BF     		.section	.text.ADC_GetDualModeConversionValue,"ax",%progbits
 1143              		.align	2
 1144              		.global	ADC_GetDualModeConversionValue
 1145              		.thumb
 1146              		.thumb_func
 1148              	ADC_GetDualModeConversionValue:
 1149              	.LFB46:
 715:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 716:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 717:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 718:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 719:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 720:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 721:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1150              		.loc 1 721 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
 1155 0000 80B4     		push	{r7}
 1156              		.cfi_def_cfa_offset 4
 1157              		.cfi_offset 7, -4
 1158 0002 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 722:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 723:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 1160              		.loc 1 723 0
 1161 0004 42F24C43 		movw	r3, #9292
 1162 0008 C4F20103 		movt	r3, 16385
 1163 000c 1B68     		ldr	r3, [r3]
 724:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1164              		.loc 1 724 0
 1165 000e 1846     		mov	r0, r3
 1166 0010 BD46     		mov	sp, r7
 1167              		@ sp needed
 1168 0012 5DF8047B 		ldr	r7, [sp], #4
 1169 0016 7047     		bx	lr
 1170              		.cfi_endproc
 1171              	.LFE46:
 1173              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 1174              		.align	2
 1175              		.global	ADC_AutoInjectedConvCmd
 1176              		.thumb
 1177              		.thumb_func
 1179              	ADC_AutoInjectedConvCmd:
 1180              	.LFB47:
 725:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 726:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 727:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 728:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 729:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 730:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 731:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 732:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 733:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 734:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 735:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1181              		.loc 1 735 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185              		@ link register save eliminated.
 1186 0000 80B4     		push	{r7}
 1187              		.cfi_def_cfa_offset 4
 1188              		.cfi_offset 7, -4
 1189 0002 83B0     		sub	sp, sp, #12
 1190              		.cfi_def_cfa_offset 16
 1191 0004 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 1193 0006 7860     		str	r0, [r7, #4]
 1194 0008 0B46     		mov	r3, r1
 1195 000a FB70     		strb	r3, [r7, #3]
 736:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 737:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 738:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 739:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1196              		.loc 1 739 0
 1197 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1198 000e 002B     		cmp	r3, #0
 1199 0010 06D0     		beq	.L51
 740:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 741:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 742:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 1200              		.loc 1 742 0
 1201 0012 7B68     		ldr	r3, [r7, #4]
 1202 0014 5B68     		ldr	r3, [r3, #4]
 1203 0016 43F48062 		orr	r2, r3, #1024
 1204 001a 7B68     		ldr	r3, [r7, #4]
 1205 001c 5A60     		str	r2, [r3, #4]
 1206 001e 05E0     		b	.L50
 1207              	.L51:
 743:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 744:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 745:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 746:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 747:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 1208              		.loc 1 747 0
 1209 0020 7B68     		ldr	r3, [r7, #4]
 1210 0022 5B68     		ldr	r3, [r3, #4]
 1211 0024 23F48062 		bic	r2, r3, #1024
 1212 0028 7B68     		ldr	r3, [r7, #4]
 1213 002a 5A60     		str	r2, [r3, #4]
 1214              	.L50:
 748:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 749:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1215              		.loc 1 749 0
 1216 002c 0C37     		adds	r7, r7, #12
 1217 002e BD46     		mov	sp, r7
 1218              		@ sp needed
 1219 0030 5DF8047B 		ldr	r7, [sp], #4
 1220 0034 7047     		bx	lr
 1221              		.cfi_endproc
 1222              	.LFE47:
 1224 0036 00BF     		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 1225              		.align	2
 1226              		.global	ADC_InjectedDiscModeCmd
 1227              		.thumb
 1228              		.thumb_func
 1230              	ADC_InjectedDiscModeCmd:
 1231              	.LFB48:
 750:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 751:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 752:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 753:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 754:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 755:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 756:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         on injected group channel.
 757:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 758:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 759:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 760:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 761:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1232              		.loc 1 761 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 8
 1235              		@ frame_needed = 1, uses_anonymous_args = 0
 1236              		@ link register save eliminated.
 1237 0000 80B4     		push	{r7}
 1238              		.cfi_def_cfa_offset 4
 1239              		.cfi_offset 7, -4
 1240 0002 83B0     		sub	sp, sp, #12
 1241              		.cfi_def_cfa_offset 16
 1242 0004 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
 1244 0006 7860     		str	r0, [r7, #4]
 1245 0008 0B46     		mov	r3, r1
 1246 000a FB70     		strb	r3, [r7, #3]
 762:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 763:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 764:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 765:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1247              		.loc 1 765 0
 1248 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1249 000e 002B     		cmp	r3, #0
 1250 0010 06D0     		beq	.L54
 766:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 767:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 768:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 1251              		.loc 1 768 0
 1252 0012 7B68     		ldr	r3, [r7, #4]
 1253 0014 5B68     		ldr	r3, [r3, #4]
 1254 0016 43F48052 		orr	r2, r3, #4096
 1255 001a 7B68     		ldr	r3, [r7, #4]
 1256 001c 5A60     		str	r2, [r3, #4]
 1257 001e 05E0     		b	.L53
 1258              	.L54:
 769:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 770:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 771:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 772:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 773:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 1259              		.loc 1 773 0
 1260 0020 7B68     		ldr	r3, [r7, #4]
 1261 0022 5B68     		ldr	r3, [r3, #4]
 1262 0024 23F48052 		bic	r2, r3, #4096
 1263 0028 7B68     		ldr	r3, [r7, #4]
 1264 002a 5A60     		str	r2, [r3, #4]
 1265              	.L53:
 774:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 775:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1266              		.loc 1 775 0
 1267 002c 0C37     		adds	r7, r7, #12
 1268 002e BD46     		mov	sp, r7
 1269              		@ sp needed
 1270 0030 5DF8047B 		ldr	r7, [sp], #4
 1271 0034 7047     		bx	lr
 1272              		.cfi_endproc
 1273              	.LFE48:
 1275 0036 00BF     		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 1276              		.align	2
 1277              		.global	ADC_ExternalTrigInjectedConvConfig
 1278              		.thumb
 1279              		.thumb_func
 1281              	ADC_ExternalTrigInjectedConvConfig:
 1282              	.LFB49:
 776:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 777:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 778:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 779:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 780:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 781:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 782:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 783:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 784:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 785:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 786:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 787:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 788:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 789:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 790:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 791:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 792:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 793:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 794:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 795:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 796:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 797:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 798:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 799:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 800:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1283              		.loc 1 800 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 16
 1286              		@ frame_needed = 1, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288 0000 80B4     		push	{r7}
 1289              		.cfi_def_cfa_offset 4
 1290              		.cfi_offset 7, -4
 1291 0002 85B0     		sub	sp, sp, #20
 1292              		.cfi_def_cfa_offset 24
 1293 0004 00AF     		add	r7, sp, #0
 1294              		.cfi_def_cfa_register 7
 1295 0006 7860     		str	r0, [r7, #4]
 1296 0008 3960     		str	r1, [r7]
 801:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1297              		.loc 1 801 0
 1298 000a 0023     		movs	r3, #0
 1299 000c FB60     		str	r3, [r7, #12]
 802:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 803:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 804:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 805:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
 806:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 1300              		.loc 1 806 0
 1301 000e 7B68     		ldr	r3, [r7, #4]
 1302 0010 9B68     		ldr	r3, [r3, #8]
 1303 0012 FB60     		str	r3, [r7, #12]
 807:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 808:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 1304              		.loc 1 808 0
 1305 0014 FB68     		ldr	r3, [r7, #12]
 1306 0016 23F4E043 		bic	r3, r3, #28672
 1307 001a FB60     		str	r3, [r7, #12]
 809:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 810:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1308              		.loc 1 810 0
 1309 001c FA68     		ldr	r2, [r7, #12]
 1310 001e 3B68     		ldr	r3, [r7]
 1311 0020 1343     		orrs	r3, r3, r2
 1312 0022 FB60     		str	r3, [r7, #12]
 811:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
 812:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 1313              		.loc 1 812 0
 1314 0024 7B68     		ldr	r3, [r7, #4]
 1315 0026 FA68     		ldr	r2, [r7, #12]
 1316 0028 9A60     		str	r2, [r3, #8]
 813:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1317              		.loc 1 813 0
 1318 002a 1437     		adds	r7, r7, #20
 1319 002c BD46     		mov	sp, r7
 1320              		@ sp needed
 1321 002e 5DF8047B 		ldr	r7, [sp], #4
 1322 0032 7047     		bx	lr
 1323              		.cfi_endproc
 1324              	.LFE49:
 1326              		.section	.text.ADC_ExternalTrigInjectedConvCmd,"ax",%progbits
 1327              		.align	2
 1328              		.global	ADC_ExternalTrigInjectedConvCmd
 1329              		.thumb
 1330              		.thumb_func
 1332              	ADC_ExternalTrigInjectedConvCmd:
 1333              	.LFB50:
 814:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 815:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 816:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 817:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         external trigger
 818:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 819:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 820:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         injected conversion.
 821:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 822:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 823:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 824:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 825:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1334              		.loc 1 825 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 8
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 1339 0000 80B4     		push	{r7}
 1340              		.cfi_def_cfa_offset 4
 1341              		.cfi_offset 7, -4
 1342 0002 83B0     		sub	sp, sp, #12
 1343              		.cfi_def_cfa_offset 16
 1344 0004 00AF     		add	r7, sp, #0
 1345              		.cfi_def_cfa_register 7
 1346 0006 7860     		str	r0, [r7, #4]
 1347 0008 0B46     		mov	r3, r1
 1348 000a FB70     		strb	r3, [r7, #3]
 826:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 827:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 828:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 829:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1349              		.loc 1 829 0
 1350 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1351 000e 002B     		cmp	r3, #0
 1352 0010 06D0     		beq	.L58
 830:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 831:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 832:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 1353              		.loc 1 832 0
 1354 0012 7B68     		ldr	r3, [r7, #4]
 1355 0014 9B68     		ldr	r3, [r3, #8]
 1356 0016 43F40042 		orr	r2, r3, #32768
 1357 001a 7B68     		ldr	r3, [r7, #4]
 1358 001c 9A60     		str	r2, [r3, #8]
 1359 001e 05E0     		b	.L57
 1360              	.L58:
 833:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 834:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 835:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 836:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 837:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 1361              		.loc 1 837 0
 1362 0020 7B68     		ldr	r3, [r7, #4]
 1363 0022 9B68     		ldr	r3, [r3, #8]
 1364 0024 23F40042 		bic	r2, r3, #32768
 1365 0028 7B68     		ldr	r3, [r7, #4]
 1366 002a 9A60     		str	r2, [r3, #8]
 1367              	.L57:
 838:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 839:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1368              		.loc 1 839 0
 1369 002c 0C37     		adds	r7, r7, #12
 1370 002e BD46     		mov	sp, r7
 1371              		@ sp needed
 1372 0030 5DF8047B 		ldr	r7, [sp], #4
 1373 0034 7047     		bx	lr
 1374              		.cfi_endproc
 1375              	.LFE50:
 1377 0036 00BF     		.section	.text.ADC_SoftwareStartInjectedConvCmd,"ax",%progbits
 1378              		.align	2
 1379              		.global	ADC_SoftwareStartInjectedConvCmd
 1380              		.thumb
 1381              		.thumb_func
 1383              	ADC_SoftwareStartInjectedConvCmd:
 1384              	.LFB51:
 840:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 841:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 842:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 843:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         channels conversion.
 844:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 845:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 846:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 847:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 848:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 849:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 850:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1385              		.loc 1 850 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 8
 1388              		@ frame_needed = 1, uses_anonymous_args = 0
 1389              		@ link register save eliminated.
 1390 0000 80B4     		push	{r7}
 1391              		.cfi_def_cfa_offset 4
 1392              		.cfi_offset 7, -4
 1393 0002 83B0     		sub	sp, sp, #12
 1394              		.cfi_def_cfa_offset 16
 1395 0004 00AF     		add	r7, sp, #0
 1396              		.cfi_def_cfa_register 7
 1397 0006 7860     		str	r0, [r7, #4]
 1398 0008 0B46     		mov	r3, r1
 1399 000a FB70     		strb	r3, [r7, #3]
 851:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 852:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 853:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 854:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1400              		.loc 1 854 0
 1401 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1402 000e 002B     		cmp	r3, #0
 1403 0010 06D0     		beq	.L61
 855:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 856:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 857:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC injected conversion */
 858:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 1404              		.loc 1 858 0
 1405 0012 7B68     		ldr	r3, [r7, #4]
 1406 0014 9B68     		ldr	r3, [r3, #8]
 1407 0016 43F40212 		orr	r2, r3, #2129920
 1408 001a 7B68     		ldr	r3, [r7, #4]
 1409 001c 9A60     		str	r2, [r3, #8]
 1410 001e 05E0     		b	.L60
 1411              	.L61:
 859:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 860:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 861:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 862:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 863:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 1412              		.loc 1 864 0
 1413 0020 7B68     		ldr	r3, [r7, #4]
 1414 0022 9B68     		ldr	r3, [r3, #8]
 1415 0024 23F40212 		bic	r2, r3, #2129920
 1416 0028 7B68     		ldr	r3, [r7, #4]
 1417 002a 9A60     		str	r2, [r3, #8]
 1418              	.L60:
 865:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 866:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1419              		.loc 1 866 0
 1420 002c 0C37     		adds	r7, r7, #12
 1421 002e BD46     		mov	sp, r7
 1422              		@ sp needed
 1423 0030 5DF8047B 		ldr	r7, [sp], #4
 1424 0034 7047     		bx	lr
 1425              		.cfi_endproc
 1426              	.LFE51:
 1428 0036 00BF     		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 1429              		.align	2
 1430              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1431              		.thumb
 1432              		.thumb_func
 1434              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1435              	.LFB52:
 867:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 868:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 869:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 870:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 871:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 872:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 873:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 874:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1436              		.loc 1 874 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 16
 1439              		@ frame_needed = 1, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 1441 0000 80B4     		push	{r7}
 1442              		.cfi_def_cfa_offset 4
 1443              		.cfi_offset 7, -4
 1444 0002 85B0     		sub	sp, sp, #20
 1445              		.cfi_def_cfa_offset 24
 1446 0004 00AF     		add	r7, sp, #0
 1447              		.cfi_def_cfa_register 7
 1448 0006 7860     		str	r0, [r7, #4]
 875:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1449              		.loc 1 875 0
 1450 0008 0023     		movs	r3, #0
 1451 000a FB73     		strb	r3, [r7, #15]
 876:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 877:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 878:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 879:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 1452              		.loc 1 879 0
 1453 000c 7B68     		ldr	r3, [r7, #4]
 1454 000e 9B68     		ldr	r3, [r3, #8]
 1455 0010 03F40013 		and	r3, r3, #2097152
 1456 0014 002B     		cmp	r3, #0
 1457 0016 02D0     		beq	.L64
 880:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 881:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 882:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1458              		.loc 1 882 0
 1459 0018 0123     		movs	r3, #1
 1460 001a FB73     		strb	r3, [r7, #15]
 1461 001c 01E0     		b	.L65
 1462              	.L64:
 883:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 884:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 885:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 886:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 887:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1463              		.loc 1 887 0
 1464 001e 0023     		movs	r3, #0
 1465 0020 FB73     		strb	r3, [r7, #15]
 1466              	.L65:
 888:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 889:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 890:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 1467              		.loc 1 890 0
 1468 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1469              		.loc 1 891 0
 1470 0024 1846     		mov	r0, r3
 1471 0026 1437     		adds	r7, r7, #20
 1472 0028 BD46     		mov	sp, r7
 1473              		@ sp needed
 1474 002a 5DF8047B 		ldr	r7, [sp], #4
 1475 002e 7047     		bx	lr
 1476              		.cfi_endproc
 1477              	.LFE52:
 1479              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 1480              		.align	2
 1481              		.global	ADC_InjectedChannelConfig
 1482              		.thumb
 1483              		.thumb_func
 1485              	ADC_InjectedChannelConfig:
 1486              	.LFB53:
 892:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 893:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 894:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 895:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 896:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 897:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 898:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 899:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 900:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 901:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 902:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 903:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 904:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 905:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 906:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 907:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 908:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 909:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 910:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 911:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 912:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 913:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 914:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 915:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 916:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 917:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 918:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 919:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 920:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 921:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 922:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 923:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 924:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 925:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 926:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 927:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 928:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 929:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 930:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 931:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1487              		.loc 1 931 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 24
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491              		@ link register save eliminated.
 1492 0000 80B4     		push	{r7}
 1493              		.cfi_def_cfa_offset 4
 1494              		.cfi_offset 7, -4
 1495 0002 87B0     		sub	sp, sp, #28
 1496              		.cfi_def_cfa_offset 32
 1497 0004 00AF     		add	r7, sp, #0
 1498              		.cfi_def_cfa_register 7
 1499 0006 7860     		str	r0, [r7, #4]
 1500 0008 F970     		strb	r1, [r7, #3]
 1501 000a BA70     		strb	r2, [r7, #2]
 1502 000c 7B70     		strb	r3, [r7, #1]
 932:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 1503              		.loc 1 932 0
 1504 000e 0023     		movs	r3, #0
 1505 0010 7B61     		str	r3, [r7, #20]
 1506 0012 0023     		movs	r3, #0
 1507 0014 3B61     		str	r3, [r7, #16]
 1508 0016 0023     		movs	r3, #0
 1509 0018 FB60     		str	r3, [r7, #12]
 933:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 934:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 935:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 936:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 937:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 938:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 939:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1510              		.loc 1 939 0
 1511 001a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1512 001c 092B     		cmp	r3, #9
 1513 001e 23D9     		bls	.L68
 940:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 941:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 942:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1514              		.loc 1 942 0
 1515 0020 7B68     		ldr	r3, [r7, #4]
 1516 0022 DB68     		ldr	r3, [r3, #12]
 1517 0024 7B61     		str	r3, [r7, #20]
 943:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 944:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 1518              		.loc 1 944 0
 1519 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1520 0028 A3F10A02 		sub	r2, r3, #10
 1521 002c 1346     		mov	r3, r2
 1522 002e 5B00     		lsls	r3, r3, #1
 1523 0030 1344     		add	r3, r3, r2
 1524 0032 0722     		movs	r2, #7
 1525 0034 02FA03F3 		lsl	r3, r2, r3
 1526 0038 3B61     		str	r3, [r7, #16]
 945:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 946:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1527              		.loc 1 946 0
 1528 003a 3B69     		ldr	r3, [r7, #16]
 1529 003c DB43     		mvns	r3, r3
 1530 003e 7A69     		ldr	r2, [r7, #20]
 1531 0040 1340     		ands	r3, r3, r2
 1532 0042 7B61     		str	r3, [r7, #20]
 947:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 948:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1533              		.loc 1 948 0
 1534 0044 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1535 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1536 0048 A3F10A02 		sub	r2, r3, #10
 1537 004c 1346     		mov	r3, r2
 1538 004e 5B00     		lsls	r3, r3, #1
 1539 0050 1344     		add	r3, r3, r2
 1540 0052 01FA03F3 		lsl	r3, r1, r3
 1541 0056 3B61     		str	r3, [r7, #16]
 949:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 950:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1542              		.loc 1 950 0
 1543 0058 7A69     		ldr	r2, [r7, #20]
 1544 005a 3B69     		ldr	r3, [r7, #16]
 1545 005c 1343     		orrs	r3, r3, r2
 1546 005e 7B61     		str	r3, [r7, #20]
 951:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 952:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1547              		.loc 1 952 0
 1548 0060 7B68     		ldr	r3, [r7, #4]
 1549 0062 7A69     		ldr	r2, [r7, #20]
 1550 0064 DA60     		str	r2, [r3, #12]
 1551 0066 1EE0     		b	.L69
 1552              	.L68:
 953:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 954:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 955:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 956:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 957:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1553              		.loc 1 957 0
 1554 0068 7B68     		ldr	r3, [r7, #4]
 1555 006a 1B69     		ldr	r3, [r3, #16]
 1556 006c 7B61     		str	r3, [r7, #20]
 958:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 959:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 1557              		.loc 1 959 0
 1558 006e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1559 0070 1346     		mov	r3, r2
 1560 0072 5B00     		lsls	r3, r3, #1
 1561 0074 1344     		add	r3, r3, r2
 1562 0076 0722     		movs	r2, #7
 1563 0078 02FA03F3 		lsl	r3, r2, r3
 1564 007c 3B61     		str	r3, [r7, #16]
 960:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 961:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1565              		.loc 1 961 0
 1566 007e 3B69     		ldr	r3, [r7, #16]
 1567 0080 DB43     		mvns	r3, r3
 1568 0082 7A69     		ldr	r2, [r7, #20]
 1569 0084 1340     		ands	r3, r3, r2
 1570 0086 7B61     		str	r3, [r7, #20]
 962:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 963:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1571              		.loc 1 963 0
 1572 0088 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1573 008a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1574 008c 1346     		mov	r3, r2
 1575 008e 5B00     		lsls	r3, r3, #1
 1576 0090 1344     		add	r3, r3, r2
 1577 0092 01FA03F3 		lsl	r3, r1, r3
 1578 0096 3B61     		str	r3, [r7, #16]
 964:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 965:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1579              		.loc 1 965 0
 1580 0098 7A69     		ldr	r2, [r7, #20]
 1581 009a 3B69     		ldr	r3, [r7, #16]
 1582 009c 1343     		orrs	r3, r3, r2
 1583 009e 7B61     		str	r3, [r7, #20]
 966:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 967:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1584              		.loc 1 967 0
 1585 00a0 7B68     		ldr	r3, [r7, #4]
 1586 00a2 7A69     		ldr	r2, [r7, #20]
 1587 00a4 1A61     		str	r2, [r3, #16]
 1588              	.L69:
 968:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 969:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Rank configuration */
 970:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
 971:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1589              		.loc 1 971 0
 1590 00a6 7B68     		ldr	r3, [r7, #4]
 1591 00a8 9B6B     		ldr	r3, [r3, #56]
 1592 00aa 7B61     		str	r3, [r7, #20]
 972:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 973:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 1593              		.loc 1 973 0
 1594 00ac 7B69     		ldr	r3, [r7, #20]
 1595 00ae 03F44013 		and	r3, r3, #3145728
 1596 00b2 1B0D     		lsrs	r3, r3, #20
 1597 00b4 FB60     		str	r3, [r7, #12]
 974:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 975:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1598              		.loc 1 975 0
 1599 00b6 FB68     		ldr	r3, [r7, #12]
 1600 00b8 DBB2     		uxtb	r3, r3
 1601 00ba BA78     		ldrb	r2, [r7, #2]
 1602 00bc D31A     		subs	r3, r2, r3
 1603 00be DBB2     		uxtb	r3, r3
 1604 00c0 0233     		adds	r3, r3, #2
 1605 00c2 DBB2     		uxtb	r3, r3
 1606 00c4 1A46     		mov	r2, r3
 1607 00c6 1346     		mov	r3, r2
 1608 00c8 9B00     		lsls	r3, r3, #2
 1609 00ca 1344     		add	r3, r3, r2
 1610 00cc 1F22     		movs	r2, #31
 1611 00ce 02FA03F3 		lsl	r3, r2, r3
 1612 00d2 3B61     		str	r3, [r7, #16]
 976:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 977:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 1613              		.loc 1 977 0
 1614 00d4 3B69     		ldr	r3, [r7, #16]
 1615 00d6 DB43     		mvns	r3, r3
 1616 00d8 7A69     		ldr	r2, [r7, #20]
 1617 00da 1340     		ands	r3, r3, r2
 1618 00dc 7B61     		str	r3, [r7, #20]
 978:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 979:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1619              		.loc 1 979 0
 1620 00de F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1621 00e0 FB68     		ldr	r3, [r7, #12]
 1622 00e2 DBB2     		uxtb	r3, r3
 1623 00e4 BA78     		ldrb	r2, [r7, #2]
 1624 00e6 D31A     		subs	r3, r2, r3
 1625 00e8 DBB2     		uxtb	r3, r3
 1626 00ea 0233     		adds	r3, r3, #2
 1627 00ec DBB2     		uxtb	r3, r3
 1628 00ee 1A46     		mov	r2, r3
 1629 00f0 1346     		mov	r3, r2
 1630 00f2 9B00     		lsls	r3, r3, #2
 1631 00f4 1344     		add	r3, r3, r2
 1632 00f6 01FA03F3 		lsl	r3, r1, r3
 1633 00fa 3B61     		str	r3, [r7, #16]
 980:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 981:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 1634              		.loc 1 981 0
 1635 00fc 7A69     		ldr	r2, [r7, #20]
 1636 00fe 3B69     		ldr	r3, [r7, #16]
 1637 0100 1343     		orrs	r3, r3, r2
 1638 0102 7B61     		str	r3, [r7, #20]
 982:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
 983:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1639              		.loc 1 983 0
 1640 0104 7B68     		ldr	r3, [r7, #4]
 1641 0106 7A69     		ldr	r2, [r7, #20]
 1642 0108 9A63     		str	r2, [r3, #56]
 984:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1643              		.loc 1 984 0
 1644 010a 1C37     		adds	r7, r7, #28
 1645 010c BD46     		mov	sp, r7
 1646              		@ sp needed
 1647 010e 5DF8047B 		ldr	r7, [sp], #4
 1648 0112 7047     		bx	lr
 1649              		.cfi_endproc
 1650              	.LFE53:
 1652              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 1653              		.align	2
 1654              		.global	ADC_InjectedSequencerLengthConfig
 1655              		.thumb
 1656              		.thumb_func
 1658              	ADC_InjectedSequencerLengthConfig:
 1659              	.LFB54:
 985:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 986:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 987:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 988:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 989:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 990:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 991:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 992:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 993:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
 994:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1660              		.loc 1 994 0
 1661              		.cfi_startproc
 1662              		@ args = 0, pretend = 0, frame = 16
 1663              		@ frame_needed = 1, uses_anonymous_args = 0
 1664              		@ link register save eliminated.
 1665 0000 80B4     		push	{r7}
 1666              		.cfi_def_cfa_offset 4
 1667              		.cfi_offset 7, -4
 1668 0002 85B0     		sub	sp, sp, #20
 1669              		.cfi_def_cfa_offset 24
 1670 0004 00AF     		add	r7, sp, #0
 1671              		.cfi_def_cfa_register 7
 1672 0006 7860     		str	r0, [r7, #4]
 1673 0008 0B46     		mov	r3, r1
 1674 000a FB70     		strb	r3, [r7, #3]
 995:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 1675              		.loc 1 995 0
 1676 000c 0023     		movs	r3, #0
 1677 000e FB60     		str	r3, [r7, #12]
 996:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 1678              		.loc 1 996 0
 1679 0010 0023     		movs	r3, #0
 1680 0012 BB60     		str	r3, [r7, #8]
 997:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 998:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 999:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1000:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1001:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
1002:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1681              		.loc 1 1002 0
 1682 0014 7B68     		ldr	r3, [r7, #4]
 1683 0016 9B6B     		ldr	r3, [r3, #56]
 1684 0018 FB60     		str	r3, [r7, #12]
1003:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1004:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 1685              		.loc 1 1004 0
 1686 001a FB68     		ldr	r3, [r7, #12]
 1687 001c 23F44013 		bic	r3, r3, #3145728
 1688 0020 FB60     		str	r3, [r7, #12]
1005:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1006:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 1689              		.loc 1 1006 0
 1690 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1691 0024 013B     		subs	r3, r3, #1
 1692 0026 BB60     		str	r3, [r7, #8]
1007:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1693              		.loc 1 1007 0
 1694 0028 BB68     		ldr	r3, [r7, #8]
 1695 002a 1B05     		lsls	r3, r3, #20
 1696 002c FA68     		ldr	r2, [r7, #12]
 1697 002e 1343     		orrs	r3, r3, r2
 1698 0030 FB60     		str	r3, [r7, #12]
1008:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
1009:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1699              		.loc 1 1009 0
 1700 0032 7B68     		ldr	r3, [r7, #4]
 1701 0034 FA68     		ldr	r2, [r7, #12]
 1702 0036 9A63     		str	r2, [r3, #56]
1010:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1703              		.loc 1 1010 0
 1704 0038 1437     		adds	r7, r7, #20
 1705 003a BD46     		mov	sp, r7
 1706              		@ sp needed
 1707 003c 5DF8047B 		ldr	r7, [sp], #4
 1708 0040 7047     		bx	lr
 1709              		.cfi_endproc
 1710              	.LFE54:
 1712 0042 00BF     		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 1713              		.align	2
 1714              		.global	ADC_SetInjectedOffset
 1715              		.thumb
 1716              		.thumb_func
 1718              	ADC_SetInjectedOffset:
 1719              	.LFB55:
1011:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1012:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1013:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1014:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1015:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1016:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1017:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1018:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1019:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1020:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1021:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1022:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1023:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1024:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1025:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1026:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1720              		.loc 1 1026 0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 16
 1723              		@ frame_needed = 1, uses_anonymous_args = 0
 1724              		@ link register save eliminated.
 1725 0000 80B4     		push	{r7}
 1726              		.cfi_def_cfa_offset 4
 1727              		.cfi_offset 7, -4
 1728 0002 85B0     		sub	sp, sp, #20
 1729              		.cfi_def_cfa_offset 24
 1730 0004 00AF     		add	r7, sp, #0
 1731              		.cfi_def_cfa_register 7
 1732 0006 7860     		str	r0, [r7, #4]
 1733 0008 1346     		mov	r3, r2
 1734 000a 0A46     		mov	r2, r1
 1735 000c FA70     		strb	r2, [r7, #3]
 1736 000e 3B80     		strh	r3, [r7]	@ movhi
1027:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1737              		.loc 1 1027 0
 1738 0010 0023     		movs	r3, #0
 1739 0012 FB60     		str	r3, [r7, #12]
1028:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1029:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1030:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1031:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1032:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1033:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1034:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1740              		.loc 1 1034 0
 1741 0014 7B68     		ldr	r3, [r7, #4]
 1742 0016 FB60     		str	r3, [r7, #12]
1035:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 1743              		.loc 1 1035 0
 1744 0018 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1745 001a FB68     		ldr	r3, [r7, #12]
 1746 001c 1344     		add	r3, r3, r2
 1747 001e FB60     		str	r3, [r7, #12]
1036:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1037:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1038:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1748              		.loc 1 1038 0
 1749 0020 FB68     		ldr	r3, [r7, #12]
 1750 0022 3A88     		ldrh	r2, [r7]
 1751 0024 1A60     		str	r2, [r3]
1039:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1752              		.loc 1 1039 0
 1753 0026 1437     		adds	r7, r7, #20
 1754 0028 BD46     		mov	sp, r7
 1755              		@ sp needed
 1756 002a 5DF8047B 		ldr	r7, [sp], #4
 1757 002e 7047     		bx	lr
 1758              		.cfi_endproc
 1759              	.LFE55:
 1761              		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 1762              		.align	2
 1763              		.global	ADC_GetInjectedConversionValue
 1764              		.thumb
 1765              		.thumb_func
 1767              	ADC_GetInjectedConversionValue:
 1768              	.LFB56:
1040:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1041:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1042:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1043:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1045:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1046:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1047:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1048:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1049:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1050:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1051:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1052:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1053:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1769              		.loc 1 1053 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 16
 1772              		@ frame_needed = 1, uses_anonymous_args = 0
 1773              		@ link register save eliminated.
 1774 0000 80B4     		push	{r7}
 1775              		.cfi_def_cfa_offset 4
 1776              		.cfi_offset 7, -4
 1777 0002 85B0     		sub	sp, sp, #20
 1778              		.cfi_def_cfa_offset 24
 1779 0004 00AF     		add	r7, sp, #0
 1780              		.cfi_def_cfa_register 7
 1781 0006 7860     		str	r0, [r7, #4]
 1782 0008 0B46     		mov	r3, r1
 1783 000a FB70     		strb	r3, [r7, #3]
1054:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1784              		.loc 1 1054 0
 1785 000c 0023     		movs	r3, #0
 1786 000e FB60     		str	r3, [r7, #12]
1055:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1056:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1057:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1058:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1059:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1060:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1787              		.loc 1 1060 0
 1788 0010 7B68     		ldr	r3, [r7, #4]
 1789 0012 FB60     		str	r3, [r7, #12]
1061:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 1790              		.loc 1 1061 0
 1791 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1792 0016 FB68     		ldr	r3, [r7, #12]
 1793 0018 1344     		add	r3, r3, r2
 1794 001a 2833     		adds	r3, r3, #40
 1795 001c FB60     		str	r3, [r7, #12]
1062:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1063:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1064:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 1796              		.loc 1 1064 0
 1797 001e FB68     		ldr	r3, [r7, #12]
 1798 0020 1B68     		ldr	r3, [r3]
 1799 0022 9BB2     		uxth	r3, r3
1065:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1800              		.loc 1 1065 0
 1801 0024 1846     		mov	r0, r3
 1802 0026 1437     		adds	r7, r7, #20
 1803 0028 BD46     		mov	sp, r7
 1804              		@ sp needed
 1805 002a 5DF8047B 		ldr	r7, [sp], #4
 1806 002e 7047     		bx	lr
 1807              		.cfi_endproc
 1808              	.LFE56:
 1810              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 1811              		.align	2
 1812              		.global	ADC_AnalogWatchdogCmd
 1813              		.thumb
 1814              		.thumb_func
 1816              	ADC_AnalogWatchdogCmd:
 1817              	.LFB57:
1066:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1067:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1068:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1069:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         or injected channels
1070:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1071:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1072:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1073:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1074:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1075:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1076:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1077:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1078:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1079:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1080:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None	  
1081:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1082:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1083:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1818              		.loc 1 1083 0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 16
 1821              		@ frame_needed = 1, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
 1823 0000 80B4     		push	{r7}
 1824              		.cfi_def_cfa_offset 4
 1825              		.cfi_offset 7, -4
 1826 0002 85B0     		sub	sp, sp, #20
 1827              		.cfi_def_cfa_offset 24
 1828 0004 00AF     		add	r7, sp, #0
 1829              		.cfi_def_cfa_register 7
 1830 0006 7860     		str	r0, [r7, #4]
 1831 0008 3960     		str	r1, [r7]
1084:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1832              		.loc 1 1084 0
 1833 000a 0023     		movs	r3, #0
 1834 000c FB60     		str	r3, [r7, #12]
1085:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1086:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1087:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1088:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
1089:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1835              		.loc 1 1089 0
 1836 000e 7B68     		ldr	r3, [r7, #4]
 1837 0010 5B68     		ldr	r3, [r3, #4]
 1838 0012 FB60     		str	r3, [r7, #12]
1090:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1091:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 1839              		.loc 1 1091 0
 1840 0014 FB68     		ldr	r3, [r7, #12]
 1841 0016 23F44003 		bic	r3, r3, #12582912
 1842 001a 23F40073 		bic	r3, r3, #512
 1843 001e FB60     		str	r3, [r7, #12]
1092:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1093:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 1844              		.loc 1 1093 0
 1845 0020 FA68     		ldr	r2, [r7, #12]
 1846 0022 3B68     		ldr	r3, [r7]
 1847 0024 1343     		orrs	r3, r3, r2
 1848 0026 FB60     		str	r3, [r7, #12]
1094:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
1095:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1849              		.loc 1 1095 0
 1850 0028 7B68     		ldr	r3, [r7, #4]
 1851 002a FA68     		ldr	r2, [r7, #12]
 1852 002c 5A60     		str	r2, [r3, #4]
1096:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1853              		.loc 1 1096 0
 1854 002e 1437     		adds	r7, r7, #20
 1855 0030 BD46     		mov	sp, r7
 1856              		@ sp needed
 1857 0032 5DF8047B 		ldr	r7, [sp], #4
 1858 0036 7047     		bx	lr
 1859              		.cfi_endproc
 1860              	.LFE57:
 1862              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 1863              		.align	2
 1864              		.global	ADC_AnalogWatchdogThresholdsConfig
 1865              		.thumb
 1866              		.thumb_func
 1868              	ADC_AnalogWatchdogThresholdsConfig:
 1869              	.LFB58:
1097:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1098:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1099:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1100:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1101:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1102:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1103:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1104:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1105:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1106:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1107:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1108:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1109:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1870              		.loc 1 1109 0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 8
 1873              		@ frame_needed = 1, uses_anonymous_args = 0
 1874              		@ link register save eliminated.
 1875 0000 80B4     		push	{r7}
 1876              		.cfi_def_cfa_offset 4
 1877              		.cfi_offset 7, -4
 1878 0002 83B0     		sub	sp, sp, #12
 1879              		.cfi_def_cfa_offset 16
 1880 0004 00AF     		add	r7, sp, #0
 1881              		.cfi_def_cfa_register 7
 1882 0006 7860     		str	r0, [r7, #4]
 1883 0008 1346     		mov	r3, r2
 1884 000a 0A46     		mov	r2, r1	@ movhi
 1885 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1886 000e 3B80     		strh	r3, [r7]	@ movhi
1110:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1111:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1112:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1113:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1114:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1115:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 1887              		.loc 1 1115 0
 1888 0010 7A88     		ldrh	r2, [r7, #2]
 1889 0012 7B68     		ldr	r3, [r7, #4]
 1890 0014 5A62     		str	r2, [r3, #36]
1116:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1117:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 1891              		.loc 1 1117 0
 1892 0016 3A88     		ldrh	r2, [r7]
 1893 0018 7B68     		ldr	r3, [r7, #4]
 1894 001a 9A62     		str	r2, [r3, #40]
1118:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1895              		.loc 1 1118 0
 1896 001c 0C37     		adds	r7, r7, #12
 1897 001e BD46     		mov	sp, r7
 1898              		@ sp needed
 1899 0020 5DF8047B 		ldr	r7, [sp], #4
 1900 0024 7047     		bx	lr
 1901              		.cfi_endproc
 1902              	.LFE58:
 1904 0026 00BF     		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 1905              		.align	2
 1906              		.global	ADC_AnalogWatchdogSingleChannelConfig
 1907              		.thumb
 1908              		.thumb_func
 1910              	ADC_AnalogWatchdogSingleChannelConfig:
 1911              	.LFB59:
1119:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1120:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1121:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1122:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1123:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1124:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1125:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1126:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1127:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1128:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1129:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1130:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1131:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1132:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1133:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1134:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1135:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1136:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1137:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1138:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1139:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1140:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1141:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1142:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1143:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1144:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1145:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1146:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1912              		.loc 1 1146 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 16
 1915              		@ frame_needed = 1, uses_anonymous_args = 0
 1916              		@ link register save eliminated.
 1917 0000 80B4     		push	{r7}
 1918              		.cfi_def_cfa_offset 4
 1919              		.cfi_offset 7, -4
 1920 0002 85B0     		sub	sp, sp, #20
 1921              		.cfi_def_cfa_offset 24
 1922 0004 00AF     		add	r7, sp, #0
 1923              		.cfi_def_cfa_register 7
 1924 0006 7860     		str	r0, [r7, #4]
 1925 0008 0B46     		mov	r3, r1
 1926 000a FB70     		strb	r3, [r7, #3]
1147:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1927              		.loc 1 1147 0
 1928 000c 0023     		movs	r3, #0
 1929 000e FB60     		str	r3, [r7, #12]
1148:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1149:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1150:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1151:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
1152:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1930              		.loc 1 1152 0
 1931 0010 7B68     		ldr	r3, [r7, #4]
 1932 0012 5B68     		ldr	r3, [r3, #4]
 1933 0014 FB60     		str	r3, [r7, #12]
1153:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1154:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 1934              		.loc 1 1154 0
 1935 0016 FB68     		ldr	r3, [r7, #12]
 1936 0018 23F01F03 		bic	r3, r3, #31
 1937 001c FB60     		str	r3, [r7, #12]
1155:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1156:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 1938              		.loc 1 1156 0
 1939 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1940 0020 FA68     		ldr	r2, [r7, #12]
 1941 0022 1343     		orrs	r3, r3, r2
 1942 0024 FB60     		str	r3, [r7, #12]
1157:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
1158:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1943              		.loc 1 1158 0
 1944 0026 7B68     		ldr	r3, [r7, #4]
 1945 0028 FA68     		ldr	r2, [r7, #12]
 1946 002a 5A60     		str	r2, [r3, #4]
1159:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1947              		.loc 1 1159 0
 1948 002c 1437     		adds	r7, r7, #20
 1949 002e BD46     		mov	sp, r7
 1950              		@ sp needed
 1951 0030 5DF8047B 		ldr	r7, [sp], #4
 1952 0034 7047     		bx	lr
 1953              		.cfi_endproc
 1954              	.LFE59:
 1956 0036 00BF     		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 1957              		.align	2
 1958              		.global	ADC_TempSensorVrefintCmd
 1959              		.thumb
 1960              		.thumb_func
 1962              	ADC_TempSensorVrefintCmd:
 1963              	.LFB60:
1160:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1161:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1162:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1163:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1164:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1165:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1166:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1167:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1168:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1964              		.loc 1 1168 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 8
 1967              		@ frame_needed = 1, uses_anonymous_args = 0
 1968              		@ link register save eliminated.
 1969 0000 80B4     		push	{r7}
 1970              		.cfi_def_cfa_offset 4
 1971              		.cfi_offset 7, -4
 1972 0002 83B0     		sub	sp, sp, #12
 1973              		.cfi_def_cfa_offset 16
 1974 0004 00AF     		add	r7, sp, #0
 1975              		.cfi_def_cfa_register 7
 1976 0006 0346     		mov	r3, r0
 1977 0008 FB71     		strb	r3, [r7, #7]
1169:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1170:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1171:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1978              		.loc 1 1171 0
 1979 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1980 000c 002B     		cmp	r3, #0
 1981 000e 0CD0     		beq	.L78
1172:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1173:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1174:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 1982              		.loc 1 1174 0
 1983 0010 4FF41053 		mov	r3, #9216
 1984 0014 C4F20103 		movt	r3, 16385
 1985 0018 4FF41052 		mov	r2, #9216
 1986 001c C4F20102 		movt	r2, 16385
 1987 0020 9268     		ldr	r2, [r2, #8]
 1988 0022 42F40002 		orr	r2, r2, #8388608
 1989 0026 9A60     		str	r2, [r3, #8]
 1990 0028 0BE0     		b	.L77
 1991              	.L78:
1175:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1176:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
1177:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1178:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1179:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 1992              		.loc 1 1179 0
 1993 002a 4FF41053 		mov	r3, #9216
 1994 002e C4F20103 		movt	r3, 16385
 1995 0032 4FF41052 		mov	r2, #9216
 1996 0036 C4F20102 		movt	r2, 16385
 1997 003a 9268     		ldr	r2, [r2, #8]
 1998 003c 22F40002 		bic	r2, r2, #8388608
 1999 0040 9A60     		str	r2, [r3, #8]
 2000              	.L77:
1180:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1181:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2001              		.loc 1 1181 0
 2002 0042 0C37     		adds	r7, r7, #12
 2003 0044 BD46     		mov	sp, r7
 2004              		@ sp needed
 2005 0046 5DF8047B 		ldr	r7, [sp], #4
 2006 004a 7047     		bx	lr
 2007              		.cfi_endproc
 2008              	.LFE60:
 2010              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 2011              		.align	2
 2012              		.global	ADC_GetFlagStatus
 2013              		.thumb
 2014              		.thumb_func
 2016              	ADC_GetFlagStatus:
 2017              	.LFB61:
1182:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1183:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1184:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1185:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1186:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1187:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1188:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1189:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1190:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1191:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1192:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1193:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1194:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1195:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1196:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2018              		.loc 1 1196 0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 16
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022              		@ link register save eliminated.
 2023 0000 80B4     		push	{r7}
 2024              		.cfi_def_cfa_offset 4
 2025              		.cfi_offset 7, -4
 2026 0002 85B0     		sub	sp, sp, #20
 2027              		.cfi_def_cfa_offset 24
 2028 0004 00AF     		add	r7, sp, #0
 2029              		.cfi_def_cfa_register 7
 2030 0006 7860     		str	r0, [r7, #4]
 2031 0008 0B46     		mov	r3, r1
 2032 000a FB70     		strb	r3, [r7, #3]
1197:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 2033              		.loc 1 1197 0
 2034 000c 0023     		movs	r3, #0
 2035 000e FB73     		strb	r3, [r7, #15]
1198:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1199:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1200:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1201:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1202:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 2036              		.loc 1 1202 0
 2037 0010 7B68     		ldr	r3, [r7, #4]
 2038 0012 1A68     		ldr	r2, [r3]
 2039 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2040 0016 1340     		ands	r3, r3, r2
 2041 0018 002B     		cmp	r3, #0
 2042 001a 02D0     		beq	.L81
1203:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1204:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1205:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2043              		.loc 1 1205 0
 2044 001c 0123     		movs	r3, #1
 2045 001e FB73     		strb	r3, [r7, #15]
 2046 0020 01E0     		b	.L82
 2047              	.L81:
1206:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1207:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
1208:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1209:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1210:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2048              		.loc 1 1210 0
 2049 0022 0023     		movs	r3, #0
 2050 0024 FB73     		strb	r3, [r7, #15]
 2051              	.L82:
1211:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1212:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1213:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 2052              		.loc 1 1213 0
 2053 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1214:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2054              		.loc 1 1214 0
 2055 0028 1846     		mov	r0, r3
 2056 002a 1437     		adds	r7, r7, #20
 2057 002c BD46     		mov	sp, r7
 2058              		@ sp needed
 2059 002e 5DF8047B 		ldr	r7, [sp], #4
 2060 0032 7047     		bx	lr
 2061              		.cfi_endproc
 2062              	.LFE61:
 2064              		.section	.text.ADC_ClearFlag,"ax",%progbits
 2065              		.align	2
 2066              		.global	ADC_ClearFlag
 2067              		.thumb
 2068              		.thumb_func
 2070              	ADC_ClearFlag:
 2071              	.LFB62:
1215:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1216:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1217:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1218:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1219:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1220:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1221:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1222:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1223:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1224:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1225:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1226:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1227:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1228:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1229:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2072              		.loc 1 1229 0
 2073              		.cfi_startproc
 2074              		@ args = 0, pretend = 0, frame = 8
 2075              		@ frame_needed = 1, uses_anonymous_args = 0
 2076              		@ link register save eliminated.
 2077 0000 80B4     		push	{r7}
 2078              		.cfi_def_cfa_offset 4
 2079              		.cfi_offset 7, -4
 2080 0002 83B0     		sub	sp, sp, #12
 2081              		.cfi_def_cfa_offset 16
 2082 0004 00AF     		add	r7, sp, #0
 2083              		.cfi_def_cfa_register 7
 2084 0006 7860     		str	r0, [r7, #4]
 2085 0008 0B46     		mov	r3, r1
 2086 000a FB70     		strb	r3, [r7, #3]
1230:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1231:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1232:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1233:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1234:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 2087              		.loc 1 1234 0
 2088 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2089 000e DA43     		mvns	r2, r3
 2090 0010 7B68     		ldr	r3, [r7, #4]
 2091 0012 1A60     		str	r2, [r3]
1235:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2092              		.loc 1 1235 0
 2093 0014 0C37     		adds	r7, r7, #12
 2094 0016 BD46     		mov	sp, r7
 2095              		@ sp needed
 2096 0018 5DF8047B 		ldr	r7, [sp], #4
 2097 001c 7047     		bx	lr
 2098              		.cfi_endproc
 2099              	.LFE62:
 2101 001e 00BF     		.section	.text.ADC_GetITStatus,"ax",%progbits
 2102              		.align	2
 2103              		.global	ADC_GetITStatus
 2104              		.thumb
 2105              		.thumb_func
 2107              	ADC_GetITStatus:
 2108              	.LFB63:
1236:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1237:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1238:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1239:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1240:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1241:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1242:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1243:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1244:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1245:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1246:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1247:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1248:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2109              		.loc 1 1248 0
 2110              		.cfi_startproc
 2111              		@ args = 0, pretend = 0, frame = 24
 2112              		@ frame_needed = 1, uses_anonymous_args = 0
 2113              		@ link register save eliminated.
 2114 0000 80B4     		push	{r7}
 2115              		.cfi_def_cfa_offset 4
 2116              		.cfi_offset 7, -4
 2117 0002 87B0     		sub	sp, sp, #28
 2118              		.cfi_def_cfa_offset 32
 2119 0004 00AF     		add	r7, sp, #0
 2120              		.cfi_def_cfa_register 7
 2121 0006 7860     		str	r0, [r7, #4]
 2122 0008 0B46     		mov	r3, r1
 2123 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1249:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 2124              		.loc 1 1249 0
 2125 000c 0023     		movs	r3, #0
 2126 000e FB75     		strb	r3, [r7, #23]
1250:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 2127              		.loc 1 1250 0
 2128 0010 0023     		movs	r3, #0
 2129 0012 3B61     		str	r3, [r7, #16]
 2130 0014 0023     		movs	r3, #0
 2131 0016 FB60     		str	r3, [r7, #12]
1251:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1252:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1253:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1254:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1255:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 2132              		.loc 1 1255 0
 2133 0018 7B88     		ldrh	r3, [r7, #2]
 2134 001a 1B0A     		lsrs	r3, r3, #8
 2135 001c 9BB2     		uxth	r3, r3
 2136 001e 3B61     		str	r3, [r7, #16]
1256:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1257:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 2137              		.loc 1 1257 0
 2138 0020 7B68     		ldr	r3, [r7, #4]
 2139 0022 5A68     		ldr	r2, [r3, #4]
 2140 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2141 0026 DBB2     		uxtb	r3, r3
 2142 0028 1340     		ands	r3, r3, r2
 2143 002a FB60     		str	r3, [r7, #12]
1258:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1259:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 2144              		.loc 1 1259 0
 2145 002c 7B68     		ldr	r3, [r7, #4]
 2146 002e 1A68     		ldr	r2, [r3]
 2147 0030 3B69     		ldr	r3, [r7, #16]
 2148 0032 1340     		ands	r3, r3, r2
 2149 0034 002B     		cmp	r3, #0
 2150 0036 05D0     		beq	.L86
 2151              		.loc 1 1259 0 is_stmt 0 discriminator 1
 2152 0038 FB68     		ldr	r3, [r7, #12]
 2153 003a 002B     		cmp	r3, #0
 2154 003c 02D0     		beq	.L86
1260:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1261:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1262:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2155              		.loc 1 1262 0 is_stmt 1
 2156 003e 0123     		movs	r3, #1
 2157 0040 FB75     		strb	r3, [r7, #23]
 2158 0042 01E0     		b	.L87
 2159              	.L86:
1263:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1264:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
1265:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1266:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1267:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2160              		.loc 1 1267 0
 2161 0044 0023     		movs	r3, #0
 2162 0046 FB75     		strb	r3, [r7, #23]
 2163              	.L87:
1268:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1269:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1270:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 2164              		.loc 1 1270 0
 2165 0048 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1271:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2166              		.loc 1 1271 0
 2167 004a 1846     		mov	r0, r3
 2168 004c 1C37     		adds	r7, r7, #28
 2169 004e BD46     		mov	sp, r7
 2170              		@ sp needed
 2171 0050 5DF8047B 		ldr	r7, [sp], #4
 2172 0054 7047     		bx	lr
 2173              		.cfi_endproc
 2174              	.LFE63:
 2176 0056 00BF     		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 2177              		.align	2
 2178              		.global	ADC_ClearITPendingBit
 2179              		.thumb
 2180              		.thumb_func
 2182              	ADC_ClearITPendingBit:
 2183              	.LFB64:
1272:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1273:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1274:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1275:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1276:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1277:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1278:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1279:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1280:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1281:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1282:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1283:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1284:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2184              		.loc 1 1284 0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 16
 2187              		@ frame_needed = 1, uses_anonymous_args = 0
 2188              		@ link register save eliminated.
 2189 0000 80B4     		push	{r7}
 2190              		.cfi_def_cfa_offset 4
 2191              		.cfi_offset 7, -4
 2192 0002 85B0     		sub	sp, sp, #20
 2193              		.cfi_def_cfa_offset 24
 2194 0004 00AF     		add	r7, sp, #0
 2195              		.cfi_def_cfa_register 7
 2196 0006 7860     		str	r0, [r7, #4]
 2197 0008 0B46     		mov	r3, r1
 2198 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1285:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 2199              		.loc 1 1285 0
 2200 000c 0023     		movs	r3, #0
 2201 000e FB73     		strb	r3, [r7, #15]
1286:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1287:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1288:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1289:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1290:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 2202              		.loc 1 1290 0
 2203 0010 7B88     		ldrh	r3, [r7, #2]
 2204 0012 1B0A     		lsrs	r3, r3, #8
 2205 0014 9BB2     		uxth	r3, r3
 2206 0016 FB73     		strb	r3, [r7, #15]
1291:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1292:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 2207              		.loc 1 1292 0
 2208 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2209 001a DA43     		mvns	r2, r3
 2210 001c 7B68     		ldr	r3, [r7, #4]
 2211 001e 1A60     		str	r2, [r3]
1293:../Libraries/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2212              		.loc 1 1293 0
 2213 0020 1437     		adds	r7, r7, #20
 2214 0022 BD46     		mov	sp, r7
 2215              		@ sp needed
 2216 0024 5DF8047B 		ldr	r7, [sp], #4
 2217 0028 7047     		bx	lr
 2218              		.cfi_endproc
 2219              	.LFE64:
 2221 002a 00BF     		.text
 2222              	.Letext0:
 2223              		.file 2 "c:\\tools\\arm-none-eabi\\include\\stdint.h"
 2224              		.file 3 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\Libraries\\CMSIS/stm32f10x.h"
 2225              		.file 4 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\Libraries\\StdPeripheralDriver\\inc/stm32f10
 2226              		.file 5 "D:\\pall\\workspace\\Snack_stm32_drv_modbus\\Libraries\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_adc.c
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:19     .text.ADC_DeInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:24     .text.ADC_DeInit:00000000 ADC_DeInit
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:96     .text.ADC_Init:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:101    .text.ADC_Init:00000000 ADC_Init
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:211    .text.ADC_StructInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:216    .text.ADC_StructInit:00000000 ADC_StructInit
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:265    .text.ADC_Cmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:270    .text.ADC_Cmd:00000000 ADC_Cmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:316    .text.ADC_DMACmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:321    .text.ADC_DMACmd:00000000 ADC_DMACmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:367    .text.ADC_ITConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:372    .text.ADC_ITConfig:00000000 ADC_ITConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:429    .text.ADC_ResetCalibration:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:434    .text.ADC_ResetCalibration:00000000 ADC_ResetCalibration
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:465    .text.ADC_GetResetCalibrationStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:470    .text.ADC_GetResetCalibrationStatus:00000000 ADC_GetResetCalibrationStatus
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:516    .text.ADC_StartCalibration:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:521    .text.ADC_StartCalibration:00000000 ADC_StartCalibration
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:552    .text.ADC_GetCalibrationStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:557    .text.ADC_GetCalibrationStatus:00000000 ADC_GetCalibrationStatus
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:603    .text.ADC_SoftwareStartConvCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:608    .text.ADC_SoftwareStartConvCmd:00000000 ADC_SoftwareStartConvCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:654    .text.ADC_GetSoftwareStartConvStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:659    .text.ADC_GetSoftwareStartConvStatus:00000000 ADC_GetSoftwareStartConvStatus
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:705    .text.ADC_DiscModeChannelCountConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:710    .text.ADC_DiscModeChannelCountConfig:00000000 ADC_DiscModeChannelCountConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:765    .text.ADC_DiscModeCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:770    .text.ADC_DiscModeCmd:00000000 ADC_DiscModeCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:816    .text.ADC_RegularChannelConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:821    .text.ADC_RegularChannelConfig:00000000 ADC_RegularChannelConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1057   .text.ADC_ExternalTrigConvCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1062   .text.ADC_ExternalTrigConvCmd:00000000 ADC_ExternalTrigConvCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1108   .text.ADC_GetConversionValue:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1113   .text.ADC_GetConversionValue:00000000 ADC_GetConversionValue
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1143   .text.ADC_GetDualModeConversionValue:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1148   .text.ADC_GetDualModeConversionValue:00000000 ADC_GetDualModeConversionValue
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1174   .text.ADC_AutoInjectedConvCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1179   .text.ADC_AutoInjectedConvCmd:00000000 ADC_AutoInjectedConvCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1225   .text.ADC_InjectedDiscModeCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1230   .text.ADC_InjectedDiscModeCmd:00000000 ADC_InjectedDiscModeCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1276   .text.ADC_ExternalTrigInjectedConvConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1281   .text.ADC_ExternalTrigInjectedConvConfig:00000000 ADC_ExternalTrigInjectedConvConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1327   .text.ADC_ExternalTrigInjectedConvCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1332   .text.ADC_ExternalTrigInjectedConvCmd:00000000 ADC_ExternalTrigInjectedConvCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1378   .text.ADC_SoftwareStartInjectedConvCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1383   .text.ADC_SoftwareStartInjectedConvCmd:00000000 ADC_SoftwareStartInjectedConvCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1429   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1434   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1480   .text.ADC_InjectedChannelConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1485   .text.ADC_InjectedChannelConfig:00000000 ADC_InjectedChannelConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1653   .text.ADC_InjectedSequencerLengthConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1658   .text.ADC_InjectedSequencerLengthConfig:00000000 ADC_InjectedSequencerLengthConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1713   .text.ADC_SetInjectedOffset:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1718   .text.ADC_SetInjectedOffset:00000000 ADC_SetInjectedOffset
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1762   .text.ADC_GetInjectedConversionValue:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1767   .text.ADC_GetInjectedConversionValue:00000000 ADC_GetInjectedConversionValue
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1811   .text.ADC_AnalogWatchdogCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1816   .text.ADC_AnalogWatchdogCmd:00000000 ADC_AnalogWatchdogCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1863   .text.ADC_AnalogWatchdogThresholdsConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1868   .text.ADC_AnalogWatchdogThresholdsConfig:00000000 ADC_AnalogWatchdogThresholdsConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1905   .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1910   .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1957   .text.ADC_TempSensorVrefintCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:1962   .text.ADC_TempSensorVrefintCmd:00000000 ADC_TempSensorVrefintCmd
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2011   .text.ADC_GetFlagStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2016   .text.ADC_GetFlagStatus:00000000 ADC_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2065   .text.ADC_ClearFlag:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2070   .text.ADC_ClearFlag:00000000 ADC_ClearFlag
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2102   .text.ADC_GetITStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2107   .text.ADC_GetITStatus:00000000 ADC_GetITStatus
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2177   .text.ADC_ClearITPendingBit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5YsOHg.s:2182   .text.ADC_ClearITPendingBit:00000000 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.98ffea2db242cfdb58f411f7407f2b59
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.183.aa62afef667fb61d15fa64c48beb2f14
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:00000000 wm4.stm32f10x_conf.h.2.f1a8c33f0a763aeef696fee38b2b2dbc
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
